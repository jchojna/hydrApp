!function(n){var e={};function t(c){if(e[c])return e[c].exports;var l=e[c]={i:c,l:!1,exports:{}};return n[c].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=n,t.c=e,t.d=function(n,e,c){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:c})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var l in n)t.d(c,l,function(e){return n[e]}.bind(null,l));return c},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n/////////////////////////////////////////////////////////////// SERVICE WORKER \r\n\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\r\n      // Registration was successful\r\n      //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n    }, function(err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n\r\n///////////////////////////////////////////////////////////// GLOBAL VARIABLES \r\n\r\nconst hydrappArray = [];\r\nconst lastEntryDate = new Date();\r\nconst weekDay = ['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];\r\n\r\nlet indicators = '';\r\nfor (let i = 0; i < 8; i++) {\r\n  indicators += `\r\n  <svg class=\"indicator__svg indicator__svg--emo-${i+1} indicator__svg--js-${i}\">\r\n    <use href=\"assets/svg/icons.svg#emoticon-${i}\"></use>\r\n  </svg>`\r\n}\r\n\r\nconst archiveEmpty = `\r\n<p class=\"week__empty\">No history yet...</p>\r\n`;\r\n\r\nconst addButtonHtml = `\r\n<li class=\"entry entry--add entry--js-add\">\r\n  <button class=\"button entry__button entry__button--add entry__button--js-add\">\r\n    Add new day..\r\n  </button>\r\n</li>\r\n`;\r\n\r\nclass Entry {\r\n  constructor(date) {\r\n    this.key = setDateKey(date);\r\n    this.value = this.key;\r\n    this.date = date;\r\n    this.id = this.date;\r\n    this.day = date;\r\n\r\n    this.weekHtml = `\r\n      <section class=\"week week--js\">\r\n        <header class=\"week__header week__header--js\">\r\n          <button class=\"button week__button week__button--prev week__button--js-prev\">\r\n            <svg class=\"week__svg\" viewBox=\"0 0 512 512\">\r\n              <use href=\"assets/svg/icons.svg#left-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <h3 class=\"week__heading week__heading--js\">New week</h3>\r\n          <button class=\"button week__button week__button--next week__button--js-next\">\r\n            <svg class=\"week__svg\" viewBox=\"0 0 512 512\">\r\n              <use href=\"assets/svg/icons.svg#right-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n        </header>\r\n        <ul class=\"week__list week__list--js\"></ul>\r\n      </section>\r\n    `;\r\n\r\n    this.dayHtml = `\r\n      <li class=\"entry entry--js ${this.key}\">\r\n        <header class=\"entry__header entry__header--js\">\r\n          <p class=\"entry__heading entry__heading--day\">${this.day}</p>\r\n          <p class=\"entry__heading entry__heading--date entry__heading--js-date\">${this.date}</p>\r\n        </header>\r\n        <span class=\"entry__value entry__value--js\">${this.value}</span>\r\n        <div class=\"edition edition--js\">\r\n          <button class=\"button edition__button edition__button--visible edition__button--edit edition__button--js-edit\">\r\n            <svg class=\"edition__svg edition__svg--edit\">\r\n              <use href=\"assets/svg/icons.svg#edit-mode\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--decrease edition__button--js-decrease\">\r\n            <svg class=\"edition__svg edition__svg--decrease\">\r\n              <use href=\"assets/svg/icons.svg#down-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--increase edition__button--js-increase\">\r\n            <svg class=\"edition__svg edition__svg--increase\">\r\n              <use href=\"assets/svg/icons.svg#up-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--cancel edition__button--js-cancel\">\r\n            <svg class=\"edition__svg edition__svg--cancel\">\r\n              <use href=\"assets/svg/icons.svg#back-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--save edition__button--js-save\">\r\n            <svg class=\"edition__svg edition__svg--save\">\r\n              <use href=\"assets/svg/icons.svg#save-icon\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"indicator indicator--js-${this.id}\">\r\n          ${indicators}\r\n        </div>\r\n      </li>\r\n    `;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n  set value(key) {\r\n    this._value = localStorage.getItem(key);\r\n  }\r\n  get date() {\r\n    return this._date;\r\n  }\r\n  set date(date) {\r\n    this._date = getOffsetedDate(date).toISOString().slice(0,10).split('-').reverse().join(' ');\r\n  }\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  set id(date) {\r\n    this._id = date.replace(/\\s/g,'');\r\n  }\r\n  get day() {\r\n    return this._day;\r\n  }\r\n  set day(date) {\r\n    const dayIndex = date.getDay();\r\n    this._day = weekDay[dayIndex];\r\n  }\r\n\r\n  /* get totalHeight() {\r\n    return this._totalHeight;\r\n  }\r\n  set totalHeight(amount) {\r\n    this._totalHeight = amount * this.itemHeight;\r\n  } */\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////// FUNCTIONS \r\n\r\n// F0 ////////////////////////////////////////////////////// GET OFFSETED DATE \r\n\r\nconst getOffsetedDate = (obj) => {\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  return (new Date(obj - timeZoneOffset));\r\n}\r\n// F0 //////////////////////////////////////////////// CREATE HYDRAPP DATE KEY \r\n\r\nconst setDateKey = (obj) => {\r\n\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  let dateObj = obj || new Date();\r\n  dateObj = (new Date(dateObj - timeZoneOffset));\r\n\r\n  const prefix = 'hydrApp-';\r\n  const dateStr = dateObj.toISOString().slice(0,10);\r\n  return prefix.concat(dateStr);\r\n}\r\n// F0 ///////////////////////////// CREATE ARRAY OF HYDRAPP LOCAL STORAGE KEYS \r\n\r\nconst getHydrappKeys = () => {\r\n  const regex = /hydrApp-/;\r\n  return Object\r\n  .keys(localStorage)\r\n  .filter(key => regex.test(key))\r\n  .sort()\r\n  .reverse();\r\n}\r\n// F0 ///////////////////////////////// CREATE KEY VALUE PAIR IN LOCAL STORAGE \r\n\r\nconst setNewKeyValue = (key, value) => {\r\n  if ( !localStorage.getItem(key) ) {\r\n    localStorage.setItem(key, value);\r\n  };\r\n}\r\n// F0 ///////////////////////////////////////////////// LOOPED RANGE OF VALUES \r\n\r\nconst range = (max, num, action) => {\r\n  action === 'increase' ? num >= max ? num = 0 : num++ : false;\r\n  action === 'decrease' ? num <= 0 ? num = max : num-- : false;\r\n  return num;\r\n}\r\n// F0 //////////////////////////////////////////////// LIMITED RANGE OF VALUES \r\n\r\nconst limit = (max, num, action) => {\r\n  action === 'increase' ? num >= max ? false : num++ : false;\r\n  action === 'decrease' ? num <= 0 ? false : num-- : false;\r\n  return num;\r\n}\r\n// F0 ///////////////////////////////////////////////////////// SET INDICATORS \r\n\r\nconst setIndicators = (id, value) => {\r\n\r\n  value > 7 ? value = 7 : false;\r\n\r\n  const indicators = document.querySelector(`.indicator--js-${id}`).children;\r\n  const indicator = document.querySelector(`.indicator--js-${id} .indicator__svg--js-${value}`);\r\n  \r\n  for (const indicator of indicators) {\r\n    indicator.classList.contains('indicator__svg--visible')\r\n    ? indicator.classList.remove('indicator__svg--visible')\r\n    : false;\r\n  }\r\n  indicator.classList.add('indicator__svg--visible');\r\n}\r\n// F0 //////////////////////////////////////////////// CREATE ADD ENTRY BUTTON \r\n\r\nconst createAddEntryButton = () => {\r\n  const addEntryButton = document.createElement('li');\r\n  addEntryButton.className = 'entry entry__add';\r\n  addEntryButton.innerHTML = `\r\n    <button class=\"button entry__button entry__button--add entry__button--js-add\">\r\n      Add new day..\r\n    </button>\r\n  `;\r\n  addEntryButton.addEventListener('click', enterNewEntryValue);\r\n\r\n  return addEntryButton;\r\n}\r\n// F0 //////////////////////////////////////////// CREATE 'REMOVE ITEM' BUTTON \r\n\r\nconst createRemoveEntryButton = () => {\r\n\r\n  const removeEntryButton = document.createElement('button');\r\n  removeEntryButton.className = 'button entry__remove';\r\n  removeEntryButton.innerHTML = `\r\n    <svg class=\"entry__svg\" viewBox=\"0 0 512 512\">\r\n      <use href=\"assets/svg/icons.svg#remove-icon\"></use>\r\n    </svg>\r\n  `\r\n  removeEntryButton.addEventListener('click', removeLastEntry);\r\n\r\n  return removeEntryButton;\r\n}\r\n// F2 ////////////////////////////////////////////////////// SET LOCAL STORAGE \r\n\r\nconst handleData = () => {\r\n\r\n  const date = new Date();\r\n  let dateKey = setDateKey(date);\r\n  setNewKeyValue(dateKey, 0);\r\n  let hydrappKeys = getHydrappKeys();\r\n  const oldestKey = hydrappKeys[hydrappKeys.length - 1];\r\n  \r\n  // create object for each key\r\n  const createEntryObject = (date) => {\r\n    const newEntry = new Entry(date);\r\n    hydrappArray.push(newEntry);\r\n  }\r\n  // first object of array\r\n  createEntryObject(date);\r\n\r\n  // autocomplete the rest of keys if needed\r\n  while (dateKey !== oldestKey) {\r\n    dateKey = setDateKey(date.setDate(date.getDate() - 1));\r\n    lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n    setNewKeyValue(dateKey, 0);\r\n    createEntryObject(date);\r\n  }\r\n  //counter.innerHTML = localStorage.getItem(dateKey);\r\n  updateCounter('displayValue');\r\n}\r\n// F1 ///////////////////////////////////////////////////////// UPDATE COUNTER \r\n\r\nconst updateCounter = (e) => {\r\n  const self = e.target || e;\r\n  const key = setDateKey();\r\n  let value = parseInt(localStorage.getItem(key));\r\n\r\n  switch (self) {\r\n    case 'displayValue':\r\n      counter.innerHTML = value;\r\n      break;\r\n    \r\n    case addGlass:\r\n      value < counterMaxValue ? value++ : value = counterMaxValue;\r\n      localStorage.setItem(key, value);\r\n      hydrappArray[0].value = value;\r\n      counter.innerHTML = value;\r\n      break;\r\n\r\n    case removeGlass:\r\n      value > 0 ? value-- : value = 0;\r\n      localStorage.setItem(key, value);\r\n      hydrappArray[0].value = value;\r\n      counter.innerHTML = value;\r\n      break;\r\n  }\r\n}\r\n// F2 /////////////////////////////////////////////////////// ADD ARCHIVE NODE \r\n\r\nconst addArchiveNode = (index, option) => {\r\n\r\n  const {value, id, day, dayHtml, weekHtml} = hydrappArray[index];\r\n  \r\n  // add new week\r\n  if (((day === 'sunday' || index === 0)) && option !== 'add') {\r\n\r\n    archiveWeeks.insertAdjacentHTML('beforeend', weekHtml);                // ! TO REFACTOR\r\n    const weekHeader = archiveWeeks.lastElementChild.firstElementChild;\r\n    weekHeader.addEventListener('click', slideWeek);\r\n  }\r\n  // add next day entry\r\n  let lastWeekList = archiveWeeks.lastElementChild.lastElementChild;\r\n  lastWeekList.insertAdjacentHTML('beforeend', dayHtml);\r\n  setIndicators(id, value);\r\n\r\n  // add 'add entry button at the end\r\n  if (index === hydrappArray.length - 1) {\r\n    if (day === 'monday') {\r\n      archiveWeeks.insertAdjacentHTML(\"beforeend\", weekHtml);              // ! TO REFACTOR\r\n      const weekHeader = archiveWeeks.lastElementChild.firstElementChild;\r\n      weekHeader.addEventListener('click', slideWeek);\r\n    };\r\n\r\n    lastWeekList = archiveWeeks.lastElementChild.lastElementChild;\r\n    lastWeekList.appendChild(addEntryButton);\r\n  }\r\n  updateWeekHeading();\r\n\r\n  // add event listeners to all edit buttons\r\n  const editButton = document.querySelectorAll('.edition__button--js-edit')[index];\r\n  editButton.index = index;\r\n  editButton.addEventListener('click', handleItemEdit);\r\n}\r\n// F2 //////////////////////////////////////////////////////////// SET ARCHIVE \r\n\r\nconst setArchiveDOM = () => {\r\n  \r\n  for (let i = 0; i < hydrappArray.length; i++) {\r\n    addArchiveNode(i);\r\n  }\r\n  // set the newest week as visible\r\n  const weeks = document.querySelectorAll('.week--js');\r\n  weeks[currentWeekIndex].classList.add('week--visible');\r\n  // set 'remove entry' button on the last entry\r\n  handleArchiveLastEntry();\r\n}\r\n// F2 /////////////////////////////////////////////////////// SET WEEK HEADING \r\n\r\nconst updateWeekHeading = () => {\r\n\r\n  const weekLists = document.querySelectorAll('.week__list--js');\r\n  const weekHeadings = document.querySelectorAll('.week__heading--js');\r\n\r\n  const getDate = (element) => {\r\n\r\n    if (element) {\r\n      const filtered = element.className.split(' ').filter(a => /hydrApp/.test(a));\r\n      return filtered.toString().slice(10).split('-').reverse().join('.');\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const setButtonsVisiblity = (index, option) => {\r\n    const prevWeekButton = document.querySelectorAll('.week__button--js-prev')[index];\r\n    const nextWeekButton = document.querySelectorAll('.week__button--js-next')[index];\r\n\r\n    switch (index) {\r\n\r\n      case 0:\r\n        prevWeekButton.classList.remove('week__button--visible');\r\n        option === 'oneWeek'\r\n        ? nextWeekButton.classList.remove('week__button--visible')\r\n        : nextWeekButton.classList.add('week__button--visible');\r\n        break;\r\n      \r\n      case weekHeadings.length - 1:\r\n        prevWeekButton.classList.add('week__button--visible');\r\n        nextWeekButton.classList.remove('week__button--visible');\r\n        break;\r\n\r\n      default:\r\n        prevWeekButton.classList.add('week__button--visible');\r\n        nextWeekButton.classList.add('week__button--visible');\r\n        break;\r\n    }\r\n  }\r\n  \r\n  for (let i = 0; i < weekLists.length; i++) {\r\n\r\n    const entries = weekLists[i].querySelectorAll('.entry--js');\r\n    const startDate = getDate(entries[entries.length - 1]);\r\n    const endDate = getDate(entries[0]);\r\n    const heading = weekHeadings[i];\r\n\r\n    heading.textContent = `${startDate\r\n    ? (startDate === endDate ? startDate : `${startDate.slice(0,5)} - ${endDate}`)\r\n    : `New Week`}`;\r\n\r\n    weekLists.length > 1 ? setButtonsVisiblity(i) : setButtonsVisiblity(i, 'oneWeek');\r\n  }\r\n}\r\n// F1 /////////////////////////////////////////////////////////// SHOW ARCHIVE \r\n\r\nconst showArchive = () => {\r\n\r\n  entries = document.querySelectorAll('.entry--js');\r\n\r\n  if (archive.classList.contains('archive--visible')) {\r\n    archive.classList.remove('archive--visible')\r\n    window.removeEventListener('keydown', enterNewEntryValue);\r\n    window.removeEventListener('keydown', removeLastEntry);\r\n    window.removeEventListener('keydown', slideWeek);\r\n\r\n  } else {\r\n\r\n    archive.classList.add('archive--visible');\r\n    window.addEventListener('keydown', enterNewEntryValue);\r\n    window.addEventListener('keydown', removeLastEntry);\r\n    window.addEventListener('keydown', slideWeek);\r\n  }\r\n}\r\n// F2 ///////////////////////////////////////////////////////////// SLIDE WEEK \r\n\r\nconst slideWeek = (e) => {\r\n\r\n  const self = e.keyCode || e.target;\r\n  const prevWeekButton = document.querySelectorAll('.week__button--js-prev')[currentWeekIndex];\r\n  const nextWeekButton = document.querySelectorAll('.week__button--js-next')[currentWeekIndex];\r\n  const weeksAmount = archiveWeeks.children.length;\r\n\r\n  const handleSlide = (direction) => {\r\n    // handle previous section\r\n    archiveWeeks.children[currentWeekIndex].className = `week week--js week--slide-out-to-${direction === 'toLeft' ? `right` : `left`}`;\r\n    const previousWeekIndex = currentWeekIndex;\r\n    // change index\r\n    currentWeekIndex = limit(archiveWeeks.children.length - 1, currentWeekIndex, direction === 'toLeft' ? `decrease` : `increase`);\r\n    // handle next section\r\n    if (currentWeekIndex !== previousWeekIndex) {\r\n      archiveWeeks.children[currentWeekIndex].classList = `week week--js week--visible week--slide-in-from-${direction === 'toLeft' ? `left` : `right`}`;\r\n    } else {\r\n      archiveWeeks.children[currentWeekIndex].classList = 'week week--js week--visible';\r\n    }\r\n  }\r\n\r\n  if (weeksAmount > 1) {\r\n    switch (self) {\r\n      case 37:\r\n      case prevWeekButton:\r\n        handleSlide('toLeft');\r\n        break;\r\n      case 39:\r\n      case nextWeekButton:\r\n        handleSlide('toRight');\r\n        break;\r\n    }\r\n  }\r\n}\r\n// F1 ////////////////////////////////////////// ARCHIVE MODAL << SHOW ARCHIVE \r\n\r\nconst enterNewEntryValue = (e) => {\r\n\r\n  const self = e.keyCode || e.target;\r\n  const addEntryButton = document.querySelector('.entry__button--js-add');\r\n\r\n  if (self === 107 || self === addEntryButton) {\r\n\r\n    let value = 0;\r\n    newEntryMode.classList.add('new-entry--visible');\r\n    newEntryValue.textContent = value;\r\n  \r\n    const modeOff = () => {\r\n      newEntryMode.classList.remove('new-entry--visible');\r\n      newEntryMode.removeEventListener('click', handleValue);\r\n      window.removeEventListener('keydown', handleValue);\r\n      window.addEventListener('keydown', enterNewEntryValue);\r\n      window.addEventListener('keydown', slideWeek);\r\n    }\r\n  \r\n    const handleValue = (e) => {\r\n  \r\n      const self = e.keyCode || e.target;\r\n  \r\n      switch (self) {\r\n  \r\n        case 37:\r\n        case newEntryDecrease:\r\n          value !== 0 ? value-- : false;\r\n          newEntryValue.textContent = value;\r\n          break;\r\n\r\n        case 39:\r\n        case newEntryIncrease:\r\n          value !== counterMaxValue ? value++ : false;\r\n          newEntryValue.textContent = value;\r\n          break;\r\n  \r\n        case 27:\r\n        case newEntryCancel:\r\n          modeOff();\r\n          break;\r\n  \r\n        case 13:\r\n        case newEntrySave:\r\n          addNewEntry(e, value);\r\n          modeOff();\r\n          break;\r\n      }\r\n    }\r\n    newEntryMode.addEventListener('click', handleValue);\r\n    window.addEventListener('keydown', handleValue);\r\n    window.removeEventListener('keydown', enterNewEntryValue);\r\n    window.removeEventListener('keydown', slideWeek);\r\n  }\r\n}\r\n// F1 /////////////////////////////////////////// ADD NEW ITEM << SHOW ARCHIVE \r\n\r\nconst addNewEntry = (e, value) => {\r\n  \r\n  const self = e.keyCode || e.target;\r\n\r\n  if (self === 13 || self === newEntrySave) {\r\n\r\n    let lastEntryIndex = hydrappArray.length - 1;\r\n    const lastEntry = document.querySelectorAll('.entry--js')[lastEntryIndex];\r\n    lastEntry.classList.remove('entry--last');\r\n\r\n    lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n    const newEntryKey = setDateKey(lastEntryDate);\r\n    \r\n    // handle local storage and array of objects\r\n    setNewKeyValue(newEntryKey, value);\r\n    const newEntry = new Entry(lastEntryDate);\r\n    newEntry.value = newEntryKey;\r\n    hydrappArray.push(newEntry);\r\n\r\n    // create new entry node\r\n    lastEntryIndex = hydrappArray.length - 1;\r\n    addArchiveNode(lastEntryIndex, 'add');\r\n\r\n    // jump to the last week\r\n    const weeks = archiveWeeks.children;\r\n    const currentWeek = weeks[currentWeekIndex];\r\n    const lastWeekIndex = weeks.length - 1;\r\n    const lastWeek = weeks[lastWeekIndex];\r\n    if (currentWeekIndex !== lastWeekIndex) {\r\n      currentWeekIndex = archiveWeeks.children.length - 1;\r\n      currentWeek.className = 'week week--js week--slide-out-to-left';\r\n      lastWeek.className = 'week week--js week--visible week--slide-in-from-right';\r\n    }\r\n    handleArchiveLastEntry();\r\n  }\r\n}\r\n// F1 /////////////////////////////////////////////// ADJUST LAST ITEM OF LIST \r\n\r\nconst handleArchiveLastEntry = () => {\r\n\r\n  const entries = document.querySelectorAll('.entry--js');\r\n  const lastEntry = entries[entries.length - 1];\r\n  const lastEntryValueNode = lastEntry.querySelector('.entry__value--js');\r\n\r\n  if (entries.length > 1) {\r\n    lastEntry.insertBefore(removeEntryButton, lastEntryValueNode);\r\n    lastEntry.classList.add('entry--last');\r\n  }\r\n}\r\n// F1 /////////////////////////////////////// REMOVE LAST ITEM << SHOW ARCHIVE \r\n\r\nconst removeLastEntry = (e) => {\r\n\r\n  const self = e.keyCode || e. target;\r\n  const lastEntryIndex = hydrappArray.length - 1;\r\n  const {day, key} = hydrappArray[lastEntryIndex];\r\n  const lastEntryNode = document.querySelectorAll('.entry--js')[lastEntryIndex];\r\n\r\n  if (self === 109 || self === removeEntryButton) {\r\n\r\n    if (hydrappArray.length > 1) {\r\n\r\n      hydrappArray.pop();\r\n      localStorage.removeItem(key);\r\n      lastEntryDate.setDate(lastEntryDate.getDate() + 1);\r\n      lastEntryNode.parentNode.removeChild(lastEntryNode);\r\n\r\n      // removing last week section after deleting last day of that week\r\n      if (day === 'monday') {\r\n        const weekToRemove = archiveWeeks.lastElementChild;\r\n        const ifVisible = weekToRemove.classList.contains('week--visible');\r\n        archiveWeeks.removeChild(archiveWeeks.lastElementChild);\r\n        const lastWeek = archiveWeeks.lastElementChild;\r\n        const lastWeekList = lastWeek.lastElementChild;\r\n        if (ifVisible) {\r\n          lastWeek.className = 'week week--js week--visible week--slide-in-from-left';currentWeekIndex--;\r\n        }\r\n        lastWeekList.appendChild(addEntryButton);\r\n      }\r\n\r\n      // add remove button on current last item\r\n      handleArchiveLastEntry();\r\n      updateWeekHeading();\r\n    } else {\r\n\r\n    }\r\n  }\r\n}\r\n// F2 /////////////////////////////////////////////////////// HANDLE ITEM EDIT \r\n\r\nconst handleItemEdit = (e) => {\r\n  const itemIndex = e.target.index;\r\n\r\n  const entry = document.querySelectorAll('.entry--js')[itemIndex];\r\n  const entryHeader = document.querySelectorAll('.entry__header--js')[itemIndex];\r\n  const entryValue = document.querySelectorAll('.entry__value--js')[itemIndex];\r\n  const editSection = document.querySelectorAll('.edition--js')[itemIndex];\r\n  const decreaseButton = document.querySelectorAll('.edition__button--js-decrease')[itemIndex];\r\n  const increaseButton = document.querySelectorAll('.edition__button--js-increase')[itemIndex];\r\n  const cancelButton = document.querySelectorAll('.edition__button--js-cancel')[itemIndex];\r\n  const saveButton = document.querySelectorAll('.edition__button--js-save')[itemIndex];\r\n\r\n  // F0 ////////////////////////////// TOGGLE ITEM DISPLAY << HANDLE ITEM EDIT \r\n\r\n  const toggleItemDisplay = () => {\r\n\r\n    for (const editButton of editSection.children) {\r\n      editButton.classList.toggle('edition__button--visible');\r\n    }\r\n    editSection.classList.toggle('edition--visible');\r\n    entry.classList.toggle('entry--edit-mode');\r\n    entryHeader.classList.toggle('entry__header--edit-mode');\r\n\r\n    itemIndex === hydrappArray.length - 1\r\n    ? removeEntryButton.classList.toggle('entry__remove--hidden')\r\n    : false;\r\n  }\r\n  // F1 /////////////////////////////////// EXIT EDIT MODE << HANDLE ITEM EDIT \r\n\r\n  const exitEditMode = () => {\r\n    const {value, id} = hydrappArray[itemIndex];\r\n    \r\n    toggleItemDisplay();\r\n    entryValue.textContent = value;\r\n    setIndicators(id, value);\r\n\r\n    archive.removeEventListener('click', handleEdition);\r\n    archive.removeEventListener('keydown', handleEdition);\r\n    window.addEventListener('keydown', slideWeek);\r\n  }\r\n  // F1 /////////////////////////////////// HANDLE EDITION << HANDLE ITEM EDIT \r\n\r\n  const handleEdition = (e) => {\r\n    const self = e.keyCode || e.target;\r\n    let dayValue = parseInt(entryValue.textContent);\r\n\r\n    const {key, id} = hydrappArray[itemIndex];\r\n\r\n    switch (self) {\r\n\r\n      case 40:\r\n      case decreaseButton:\r\n        e.preventDefault();\r\n        dayValue > 0 ? dayValue-- : false;\r\n        entryValue.textContent = dayValue;\r\n        setIndicators(id, dayValue);\r\n      break;\r\n      \r\n      case 38:\r\n      case increaseButton:\r\n        e.preventDefault();\r\n        dayValue < counterMaxValue ? dayValue++ : false;\r\n        entryValue.textContent = dayValue;\r\n        setIndicators(id, dayValue);\r\n      break;\r\n\r\n      case 27:\r\n      case archiveOverlay:\r\n      case cancelButton:\r\n        e.preventDefault();\r\n        exitEditMode();\r\n      break;\r\n\r\n      case 13:\r\n      case saveButton:\r\n        e.preventDefault();\r\n        localStorage.setItem(key, dayValue);\r\n        // setter function\r\n        hydrappArray[itemIndex].value = key;\r\n        exitEditMode();\r\n      break;\r\n    }\r\n  }\r\n  ///////////////////////////////////////// FUNCTION CALLS << HANDLE ITEM EDIT \r\n\r\n  toggleItemDisplay();\r\n  archive.addEventListener('click', handleEdition);\r\n  archive.addEventListener('keydown', handleEdition);\r\n  window.removeEventListener('keydown', slideWeek);\r\n\r\n}\r\n// F2 //////////////////////////////////////////////// END OF HANDLE ITEM EDIT \r\n\r\n/*\r\n##     ##    ###    ########  ####    ###    ########  ##       ########  ######\r\n##     ##   ## ##   ##     ##  ##    ## ##   ##     ## ##       ##       ##    ##\r\n##     ##  ##   ##  ##     ##  ##   ##   ##  ##     ## ##       ##       ##\r\n##     ## ##     ## ########   ##  ##     ## ########  ##       ######    ######\r\n ##   ##  ######### ##   ##    ##  ######### ##     ## ##       ##             ##\r\n  ## ##   ##     ## ##    ##   ##  ##     ## ##     ## ##       ##       ##    ##\r\n   ###    ##     ## ##     ## #### ##     ## ########  ######## ########  ######\r\n*/\r\n\r\n//////////////////////////////////////////////////////////////////// VARIABLES \r\n// APP\r\nconst appContainer = document.querySelector('.app__container--js');\r\nconst addGlass = document.querySelector('.app__button--js-add');\r\nconst removeGlass = document.querySelector('.app__button--js-remove');\r\nconst counter = document.querySelector('.glass__counter--js');\r\nconst counterMaxValue = 99;\r\n// ARCHIVE\r\nconst archive = document.querySelector('.archive--js');\r\nconst archiveOverlay = document.querySelector('.archive__overlay--js');\r\nconst archiveWeeks = document.querySelector('.archive__weeks--js');\r\nconst archiveButton = document.querySelector('.navigation__button--js-archive');\r\nconst prevWeekButton = document.querySelector('.archive__button--js-prev');\r\nconst nextWeekButton = document.querySelector('.archive__button--js-next');\r\nconst addEntryButton = createAddEntryButton();\r\nconst removeEntryButton = createRemoveEntryButton();\r\nlet currentWeekIndex = 0;\r\n// NEW ENTRY\r\nconst newEntryMode = document.querySelector('.new-entry--js');\r\nconst newEntryValue = document.querySelector('.new-entry__value--js');\r\nconst newEntryDecrease = document.querySelector('.new-entry__button--js-decrease');\r\nconst newEntryIncrease = document.querySelector('.new-entry__button--js-increase');\r\nconst newEntryCancel = document.querySelector('.new-entry__button--js-cancel');\r\nconst newEntrySave = document.querySelector('.new-entry__button--js-save');\r\n// STATS\r\nconst statsButton = document.querySelector('.navigation__button--js-stats');\r\n\r\n/////////////////////////////////////////////////////////////// FUNCTION CALLS \r\n\r\nhandleData();\r\nsetArchiveDOM();\r\nupdateWeekHeading();\r\n\r\n//////////////////////////////////////////////////////////////////// VARIABLES \r\n\r\nlet editButtons = document.querySelectorAll('.edition__button--js-edit');\r\nlet entries = document.querySelectorAll('.entry--js');\r\nconst addNewDayButton = document.querySelector('.entry__button--js-add');\r\n\r\n////////////////////////////////////////////////////////////// EVENT LISTENERS \r\n\r\nshowArchive();  // ! for tests\r\n\r\nappContainer.addEventListener('click', updateCounter);\r\narchiveButton.addEventListener('click', showArchive);\r\n//loadMoreButton.addEventListener('click', loadMoreItems);\r\n\r\n/* for (let i = 0; i < editButtons.length; i++) {\r\n  const editButton = editButtons[i];\r\n  editButton.index = i;\r\n  editButton.addEventListener('click', handleItemEdit);\r\n} *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);