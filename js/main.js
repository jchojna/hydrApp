!function(c){var t={};function e(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return c[n].call(l.exports,l,l.exports,e),l.l=!0,l.exports}e.m=c,e.c=t,e.d=function(c,t,n){e.o(c,t)||Object.defineProperty(c,t,{enumerable:!0,get:n})},e.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},e.t=function(c,t){if(1&t&&(c=e(c)),8&t)return c;if(4&t&&"object"==typeof c&&c&&c.__esModule)return c;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:c}),2&t&&"string"!=typeof c)for(var l in c)e.d(n,l,function(t){return c[t]}.bind(null,l));return n},e.n=function(c){var t=c&&c.__esModule?function(){return c.default}:function(){return c};return e.d(t,"a",t),t},e.o=function(c,t){return Object.prototype.hasOwnProperty.call(c,t)},e.p="",e(e.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n/////////////////////////////////////////////////////////////// SERVICE WORKER \r\n\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\r\n      // Registration was successful\r\n      //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n    }, function(err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n\r\n///////////////////////////////////////////////////////////// GLOBAL VARIABLES \r\n\r\nconst hydrappArray = [];\r\nconst lastEntryDate = new Date();\r\n\r\nlet indicators = '';\r\nfor (let i = 0; i < 8; i++) {\r\n  indicators += `\r\n  <svg class=\"indicator__svg indicator__svg--emo-${i+1} indicator__svg--js-${i}\">\r\n    <use href=\"assets/svg/icons.svg#emoticon-${i}\"></use>\r\n  </svg>`\r\n}\r\n\r\nclass Entry {\r\n  constructor(key) {\r\n    this.key = key;\r\n    this.getValue = key;\r\n    this.getTitle = key;\r\n    this.getID = key;\r\n\r\n    this.html = `\r\n      <li class=\"archive__item archive__item--js ${this.key}\">\r\n        <p class=\"archive__date\">${this.getTitle}</p>\r\n        <p class=\"archive__value archive__value--js\">\r\n          ${this.getValue}\r\n        </p>\r\n        <div class=\"edition edition--js\">\r\n          <button class=\"button edition__button edition__button--visible edition__button--edit edition__button--js-edit\">\r\n            <svg class=\"edition__svg edition__svg--edit\">\r\n              <use href=\"assets/svg/icons.svg#edit-mode\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--decrease edition__button--js-decrease\">\r\n            <svg class=\"edition__svg edition__svg--decrease\">\r\n              <use href=\"assets/svg/icons.svg#left-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--increase edition__button--js-increase\">\r\n            <svg class=\"edition__svg edition__svg--increase\">\r\n              <use href=\"assets/svg/icons.svg#right-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--cancel edition__button--js-cancel\">\r\n            <svg class=\"edition__svg edition__svg--cancel\">\r\n              <use href=\"assets/svg/icons.svg#back-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--save edition__button--js-save\">\r\n            <svg class=\"edition__svg edition__svg--save\">\r\n              <use href=\"assets/svg/icons.svg#save-icon\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"indicator indicator--js-${this.getID}\">\r\n          ${indicators}\r\n        </div>\r\n      </li>\r\n    `\r\n  }\r\n\r\n  get getValue() {\r\n    return this.value;\r\n  }\r\n  set getValue(key) {\r\n    this.value = localStorage.getItem(key);\r\n  }\r\n  get getTitle() {\r\n    return this.title;\r\n  }\r\n  set getTitle(date) {\r\n    this.title = date.replace('hydrApp-','').split('-').reverse().join(' ');\r\n  }\r\n  get getID() {\r\n    return this.ID;\r\n  }\r\n  set getID(date) {\r\n    this.ID = date.replace('hydrApp-','').split('-').reverse().join('');\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////// FUNCTIONS \r\n\r\n// F1 //////////////////////////////////////////////// CREATE HYDRAPP DATE KEY \r\n\r\nconst setDateKey = (obj) => {\r\n  const prefix = 'hydrApp-';\r\n  const date = obj.toISOString().slice(0,10);\r\n  return prefix.concat(date);\r\n}\r\n// F1 ///////////////////////////////// CREATE KEY VALUE PAIR IN LOCAL STORAGE \r\n\r\nconst setNewKeyValue = (key, value) => {\r\n  if ( !localStorage.getItem(key) ) {\r\n    localStorage.setItem(key, value);\r\n  };\r\n}\r\n// F1 ///////////////////////////// CREATE ARRAY OF HYDRAPP LOCAL STORAGE KEYS \r\n\r\nconst getHydrappKeys = () => {\r\n  const regex = /hydrApp-/;\r\n  return Object\r\n  .keys(localStorage)\r\n  .filter(key => regex.test(key))\r\n  .sort()\r\n  .reverse();\r\n}\r\n// F1 ////////////////////////////////////////////////////// GET OFFSETED DATE \r\n\r\nconst getOffsetedDate = () => {\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  return (new Date(Date.now() - timeZoneOffset));\r\n}\r\n// F1 //////////////////////////////////////////////////////////// SET COUNTER \r\n\r\nconst setLocalStorage = () => {\r\n  const offsetedDate = getOffsetedDate();                           // ! OFFSETED OR NORMAL ???\r\n  let dateKey = setDateKey(offsetedDate);\r\n  const hydrappKeys = getHydrappKeys();\r\n  const oldestKey = hydrappKeys[hydrappKeys.length - 1];\r\n\r\n  setNewKeyValue(dateKey, 0);\r\n  \r\n  if ( hydrappKeys.length > 2 ) { // autocomplete missing keys in localstorage\r\n    let limit = 0; // for tests to avoid loop error                            // ! TO REFACTOR\r\n\r\n    while (setDateKey(offsetedDate) !== oldestKey && limit < 99) {\r\n      offsetedDate.setDate(offsetedDate.getDate() - 1);\r\n      const prevDateKey = setDateKey(offsetedDate);\r\n      setNewKeyValue(prevDateKey, 0);\r\n      limit++;\r\n    }\r\n  }\r\n  counter.innerHTML = localStorage.getItem(dateKey);\r\n}\r\n// F1 ///////////////////////////////////////////////////////// UPDATE COUNTER \r\n\r\nconst updateCounter = (e) => {\r\n  const self = e.target;\r\n  const offsetedDate = getOffsetedDate();\r\n  const key = setDateKey(offsetedDate);\r\n  const value = parseInt(localStorage.getItem(key));\r\n  let newValue;\r\n\r\n  if (self === addGlass || self === removeGlass) {\r\n    switch (self) {\r\n      case addGlass:\r\n        value < counterMaxValue ? newValue = value + 1 : newValue = counterMaxValue;\r\n        break;\r\n      case removeGlass:\r\n        value > 0 ? newValue = value - 1 : newValue = 0;\r\n        break;\r\n    }\r\n    localStorage.setItem(key, newValue);\r\n    counter.innerHTML = newValue;\r\n  }\r\n}\r\n// F1 //////////////////////////////////////////////////////////// SET ARCHIVE \r\n\r\nconst setArchive = () => {\r\n  const hydrappKeys = getHydrappKeys();\r\n  \r\n  if (hydrappKeys.length === 1) {\r\n    archiveList.innerHTML += `\r\n      <li class=\"archive__item archive__item--empty\">No history yet...</li>\r\n      `;\r\n\r\n  } else {\r\n\r\n    for (let i = 1; i < hydrappKeys.length; i++) {\r\n\r\n      const newEntry = new Entry(hydrappKeys[i]);\r\n      archiveList.innerHTML += newEntry.html;\r\n      lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n      setIndicators(newEntry.ID, newEntry.value);\r\n      hydrappArray.push(newEntry);\r\n    }\r\n    console.log('hydrappArray', hydrappArray);\r\n  }\r\n}\r\n// F1 ///////////////////////////////////////////////////////// SET INDICATORS \r\n\r\nconst setIndicators = (id, value) => {\r\n\r\n  value > 7 ? value = 7 : false;\r\n\r\n  const indicators = document.querySelector(`.indicator--js-${id}`).children;\r\n  const indicator = document.querySelector(`.indicator--js-${id} .indicator__svg--js-${value}`);\r\n  \r\n  for (const indicator of indicators) {\r\n    indicator.classList.contains('indicator__svg--visible')\r\n    ? indicator.classList.remove('indicator__svg--visible')\r\n    : false;\r\n  }\r\n  indicator.classList.add('indicator__svg--visible');\r\n}\r\n// F1 /////////////////////////////////////////////////////////// SHOW ARCHIVE \r\nconst showArchive = () => {\r\n\r\n  // F2 ///////////////////////////////////////////////////// HANDLE ITEM EDIT \r\n\r\n  const handleItemEdit = (e) => {\r\n    const itemIndex = e.target.index;\r\n    const archiveItem = document.querySelectorAll('.archive__item--js')[itemIndex];\r\n    const editSection = document.querySelectorAll('.edition--js')[itemIndex];\r\n    const decreaseButton = document.querySelectorAll('.edition__button--js-decrease')[itemIndex];\r\n    const increaseButton = document.querySelectorAll('.edition__button--js-increase')[itemIndex];\r\n    const cancelButton = document.querySelectorAll('.edition__button--js-cancel')[itemIndex];\r\n    const saveButton = document.querySelectorAll('.edition__button--js-save')[itemIndex];\r\n    const archiveValue = document.querySelectorAll('.archive__value--js')[itemIndex];\r\n\r\n    // F3 //////////////////////////// TOGGLE ITEM DISPLAY << HANDLE ITEM EDIT \r\n\r\n    const toggleItemDisplay = () => {\r\n      archive.classList.toggle('archive--on-top');\r\n      archiveItem.classList.toggle('archive__item--on-top');\r\n      pageOverlay.classList.toggle('archive__overlay--visible');\r\n      \r\n      for (const editButton of editSection.children) {\r\n        editButton.classList.toggle('edition__button--visible');\r\n      }\r\n      editSection.classList.toggle('edition--visible');\r\n    }\r\n    // F3 ///////////////////////////////// EXIT EDIT MODE << HANDLE ITEM EDIT \r\n\r\n    const exitEditMode = () => {\r\n      toggleItemDisplay();\r\n      archiveValue.textContent = hydrappArray[itemIndex].value;\r\n      setIndicators(hydrappArray[itemIndex].ID, hydrappArray[itemIndex].value);\r\n\r\n      archive.removeEventListener('click', handleEdition);\r\n      archive.removeEventListener('keydown', handleEdition);\r\n    }\r\n    // F3 ///////////////////////////////// HANDLE EDITION << HANDLE ITEM EDIT \r\n\r\n    const handleEdition = (e) => {\r\n      const self = e.keyCode || e.target;\r\n      let value = parseInt(archiveValue.textContent);\r\n\r\n      switch (self) {\r\n\r\n        case 37:\r\n        case decreaseButton:\r\n          e.preventDefault();\r\n          value > 0 ? value-- : false;\r\n          archiveValue.textContent = value;\r\n          setIndicators(hydrappArray[itemIndex].ID, value);\r\n        break;\r\n        \r\n        case 39:\r\n        case increaseButton:\r\n          e.preventDefault();\r\n          value < counterMaxValue ? value++ : false;\r\n          archiveValue.textContent = value;\r\n          setIndicators(hydrappArray[itemIndex].ID, value);\r\n        break;\r\n\r\n        case 27:\r\n        case pageOverlay:\r\n        case cancelButton:\r\n          e.preventDefault();\r\n          exitEditMode();\r\n        break;\r\n\r\n        case 13:\r\n        case saveButton:\r\n          e.preventDefault();\r\n          hydrappArray[itemIndex].value = value;\r\n          localStorage.setItem(hydrappArray[itemIndex].key, value);\r\n          exitEditMode();\r\n        break;\r\n      }\r\n    }\r\n    /////////////////////////////////////// FUNCTION CALLS << HANDLE ITEM EDIT \r\n\r\n    toggleItemDisplay();\r\n    archive.addEventListener('click', handleEdition);\r\n    archive.addEventListener('keydown', handleEdition);\r\n\r\n  } // F2 //////////////////////////////////////////// END OF HANDLE ITEM EDIT \r\n  \r\n  // F2 //////////////////////////////////////////// LOAD MORE << SHOW ARCHIVE \r\n  const loadMoreItems = () => {\r\n    \r\n    const archiveItems = document.querySelectorAll('.archive__item--js');\r\n    const itemArray = [...archiveItems];\r\n    const archiveListHeight = archiveList.clientHeight;\r\n\r\n    let firstIndexToLoad = itemArray.findIndex(elem => !elem.classList.contains('archive__item--visible'));\r\n    let heights = 0;\r\n    let scrollOffset = archiveList.scrollTop;\r\n\r\n    while (true) {\r\n      \r\n      if (firstIndexToLoad < itemArray.length && firstIndexToLoad >= 0) {\r\n        const item = itemArray[firstIndexToLoad];\r\n        item.classList.add('archive__item--visible');\r\n        heights += item.offsetHeight;\r\n        scrollOffset += item.offsetHeight;\r\n        \r\n        if (heights <= archiveListHeight - item.offsetHeight) {\r\n          firstIndexToLoad++;\r\n        } else {\r\n          archiveList.scrollTop = scrollOffset;\r\n          archiveList.style.height = heights + 'px';\r\n          return false;\r\n        }\r\n\r\n      } else {\r\n        archiveList.scrollTop = scrollOffset;\r\n        loadMoreButton.classList.add('archive__button--hidden');\r\n        loadMoreButton.removeEventListener('click', loadMoreItems);\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // F2 ///////////////////////////////////////// ADD NEW ITEM << SHOW ARCHIVE \r\n\r\n  const addNewItem = () => {\r\n\r\n    // set date object for a new entry\r\n    lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n    const newEntryKey = setDateKey(lastEntryDate);\r\n    setNewKeyValue(newEntryKey, 0);\r\n    // create new object for array\r\n    const newEntry = new Entry(newEntryKey);\r\n    hydrappArray.push(newEntry);\r\n    const currentIndex = hydrappArray.length - 1;\r\n    archiveList.insertAdjacentHTML('beforeend', hydrappArray[currentIndex].html);\r\n    setIndicators(hydrappArray[currentIndex].ID, hydrappArray[currentIndex].value);\r\n    \r\n    for (const item of archiveList.children) {\r\n      item.classList.add('archive__item--visible');\r\n    }\r\n\r\n    editButtons = document.querySelectorAll('.edition__button--js-edit');\r\n    const newEditButton = editButtons[currentIndex];\r\n    newEditButton.index = currentIndex;\r\n    newEditButton.addEventListener('click', handleItemEdit);\r\n  }\r\n  // F2 ///////////////////////////////////// REMOVE LAST ITEM << SHOW ARCHIVE \r\n\r\n  const removeLastItem = () => {\r\n    const lastItemKey = hydrappArray[hydrappArray.length - 1].key;\r\n    hydrappArray.pop();\r\n    localStorage.removeItem(lastItemKey);\r\n    lastEntryDate.setDate(lastEntryDate.getDate() + 1);\r\n    archiveList.removeChild(archiveList.lastElementChild);\r\n  }\r\n  // F2 //////////////////////////////////////// CLOSE ARCHIVE << SHOW ARCHIVE \r\n\r\n  const closeArchive = () => {\r\n    archive.classList.remove('archive--visible');\r\n    loadMoreButton.classList.remove('archive__button--hidden');\r\n\r\n    const archiveItems = document.querySelectorAll('.archive__item--js');\r\n    for (const archiveItem of archiveItems) {\r\n      archiveItem.classList.remove('archive__item--visible');\r\n    }\r\n\r\n    addNewButton.removeEventListener('click', addNewItem);\r\n    removeButton.removeEventListener('click', removeLastItem);\r\n    loadMoreButton.removeEventListener('click', loadMoreItems);\r\n    archiveButton.removeEventListener('click', closeArchive);\r\n\r\n    for (const editButton of editButtons) {\r\n      editButton.removeEventListener('click', handleItemEdit);\r\n    }\r\n\r\n    archiveButton.addEventListener('click', showArchive);\r\n  }\r\n  ////////////////////////////////////////////////// VARIABLES << SHOW ARCHIVE \r\n\r\n  let editButtons = document.querySelectorAll('.edition__button--js-edit');\r\n\r\n  ///////////////////////////////////////////// FUNCTION CALLS << SHOW ARCHIVE \r\n\r\n  archive.classList.add('archive--visible');\r\n  loadMoreItems();\r\n\r\n  //////////////////////////////////////////// EVENT LISTENERS << SHOW ARCHIVE \r\n\r\n  archiveButton.removeEventListener('click', showArchive);\r\n  archiveButton.addEventListener('click', closeArchive);\r\n  loadMoreButton.addEventListener('click', loadMoreItems);\r\n  addNewButton.addEventListener('click', addNewItem);\r\n  removeButton.addEventListener('click', removeLastItem);\r\n\r\n  for (let i = 0; i < editButtons.length; i++) {\r\n    const editButton = editButtons[i];\r\n    editButton.index = i;\r\n    editButton.addEventListener('click', handleItemEdit);\r\n  }\r\n}\r\n// F1 //////////////////////////////////////////////////// END OF SHOW ARCHIVE \r\n\r\n//////////////////////////////////////////////////////////////////// VARIABLES \r\n\r\nconst appContainer = document.querySelector('.app__container--js');\r\nconst addGlass = document.querySelector('.app__button--js-add');\r\nconst removeGlass = document.querySelector('.app__button--js-remove');\r\nconst counter = document.querySelector('.glass__counter--js');\r\nconst counterMaxValue = 99;\r\n\r\nconst archive = document.querySelector('.archive--js');\r\nconst pageOverlay = document.querySelector('.archive__overlay--js');\r\nconst archiveList = document.querySelector('.archive__list--js');\r\nconst archiveButton = document.querySelector('.navigation__button--js-archive');\r\nconst loadMoreButton = document.querySelector('.archive__button--js-load-more');\r\nconst addNewButton = document.querySelector('.archive__button--add-new');\r\nconst removeButton = document.querySelector('.archive__button--remove')\r\n\r\nconst statsButton = document.querySelector('.navigation__button--js-stats');\r\n\r\n/////////////////////////////////////////////////////////////// FUNCTION CALLS \r\n\r\nsetLocalStorage();\r\nsetArchive();\r\n\r\n////////////////////////////////////////////////////////////// EVENT LISTENERS \r\n\r\nappContainer.addEventListener('click', updateCounter);\r\narchiveButton.addEventListener('click', showArchive);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);