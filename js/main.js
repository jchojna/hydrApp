!function(n){var e={};function t(c){if(e[c])return e[c].exports;var l=e[c]={i:c,l:!1,exports:{}};return n[c].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=n,t.c=e,t.d=function(n,e,c){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:c})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var l in n)t.d(c,l,function(e){return n[e]}.bind(null,l));return c},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n/////////////////////////////////////////////////////////////// SERVICE WORKER \r\n\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\r\n      // Registration was successful\r\n      //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n    }, function(err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n\r\n///////////////////////////////////////////////////////////// GLOBAL VARIABLES \r\n\r\nconst hydrappArray = [];\r\nconst lastEntryDate = new Date();\r\nconst weekDay = ['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];\r\n\r\nlet indicators = '';\r\nfor (let i = 0; i < 8; i++) {\r\n  indicators += `\r\n  <svg class=\"indicator__svg indicator__svg--emo-${i+1} indicator__svg--js-${i}\">\r\n    <use href=\"assets/svg/icons.svg#emoticon-${i}\"></use>\r\n  </svg>`\r\n}\r\n\r\nconst archiveEmpty = `\r\n<p class=\"week__empty\">No history yet...</p>\r\n`;\r\n\r\nconst addButtonHtml = `\r\n<li class=\"entry entry--add entry--js-add\">\r\n  <button class=\"button entry__button entry__button--add entry__button--js-add\">\r\n    Add new day..\r\n  </button>\r\n</li>\r\n`;\r\n\r\nclass Entry {\r\n  constructor(date) {\r\n    this.key = setDateKey(date);\r\n    this.value = this.key;\r\n    this.date = date;\r\n    this.id = this.date;\r\n    this.day = date;\r\n\r\n    this.weekHtml = `\r\n      <section class=\"week week--js\">\r\n        <header class=\"week__header week__header--js\">\r\n          <button class=\"button week__button week__button--prev week__button--js-prev\">\r\n            <svg class=\"week__svg\" viewBox=\"0 0 512 512\">\r\n              <use href=\"assets/svg/icons.svg#left-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <h3 class=\"week__heading week__heading--js\">New week</h3>\r\n          <button class=\"button week__button week__button--next week__button--js-next\">\r\n            <svg class=\"week__svg\" viewBox=\"0 0 512 512\">\r\n              <use href=\"assets/svg/icons.svg#right-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n        </header>\r\n        <ul class=\"week__list week__list--js\"></ul>\r\n      </section>\r\n    `;\r\n\r\n    this.dayHtml = `\r\n      <li class=\"entry entry--js ${this.key}\">\r\n        <header class=\"entry__header entry__header--js\">\r\n          <p class=\"entry__heading entry__heading--day\">${this.day}</p>\r\n          <p class=\"entry__heading entry__heading--date entry__heading--js-date\">${this.date}</p>\r\n        </header>\r\n        <span class=\"entry__value entry__value--js\">${this.value}</span>\r\n        <div class=\"edition edition--js\">\r\n          <button class=\"button edition__button edition__button--visible edition__button--edit edition__button--js-edit\">\r\n            <svg class=\"edition__svg edition__svg--edit\">\r\n              <use href=\"assets/svg/icons.svg#edit-mode\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--decrease edition__button--js-decrease\">\r\n            <svg class=\"edition__svg edition__svg--decrease\">\r\n              <use href=\"assets/svg/icons.svg#down-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--increase edition__button--js-increase\">\r\n            <svg class=\"edition__svg edition__svg--increase\">\r\n              <use href=\"assets/svg/icons.svg#up-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--cancel edition__button--js-cancel\">\r\n            <svg class=\"edition__svg edition__svg--cancel\">\r\n              <use href=\"assets/svg/icons.svg#back-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--save edition__button--js-save\">\r\n            <svg class=\"edition__svg edition__svg--save\">\r\n              <use href=\"assets/svg/icons.svg#save-icon\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"indicator indicator--js-${this.id}\">\r\n          ${indicators}\r\n        </div>\r\n      </li>\r\n    `;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n  set value(key) {\r\n    this._value = localStorage.getItem(key);\r\n  }\r\n  get date() {\r\n    return this._date;\r\n  }\r\n  set date(date) {\r\n    this._date = getOffsetedDate(date).toISOString().slice(0,10).split('-').reverse().join(' ');\r\n  }\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  set id(date) {\r\n    this._id = date.replace(/\\s/g,'');\r\n  }\r\n  get day() {\r\n    return this._day;\r\n  }\r\n  set day(date) {\r\n    const dayIndex = date.getDay();\r\n    this._day = weekDay[dayIndex];\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////// FUNCTIONS \r\n\r\n// F0 ////////////////////////////////////////////////////// GET OFFSETED DATE \r\n\r\nconst getOffsetedDate = (obj) => {\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  return (new Date(obj - timeZoneOffset));\r\n}\r\n// F0 //////////////////////////////////////////////// CREATE HYDRAPP DATE KEY \r\n\r\nconst setDateKey = (obj) => {\r\n\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  let dateObj = obj || new Date();\r\n  dateObj = (new Date(dateObj - timeZoneOffset));\r\n\r\n  const prefix = 'hydrApp-';\r\n  const dateStr = dateObj.toISOString().slice(0,10);\r\n  return prefix.concat(dateStr);\r\n}\r\n// F0 ///////////////////////////// CREATE ARRAY OF HYDRAPP LOCAL STORAGE KEYS \r\n\r\nconst getHydrappKeys = () => {\r\n  const regex = /hydrApp-/;\r\n  return Object\r\n  .keys(localStorage)\r\n  .filter(key => regex.test(key))\r\n  .sort()\r\n  .reverse();\r\n}\r\n// F0 ///////////////////////////////// CREATE KEY VALUE PAIR IN LOCAL STORAGE \r\n\r\nconst setNewKeyValue = (key, value) => {\r\n  if ( !localStorage.getItem(key) ) {\r\n    localStorage.setItem(key, value);\r\n  };\r\n}\r\n// F0 ///////////////////////////////////////////////// LOOPED RANGE OF VALUES \r\n\r\nconst range = (max, num, action) => {\r\n  action === 'increase' ? num >= max ? num = 0 : num++ : false;\r\n  action === 'decrease' ? num <= 0 ? num = max : num-- : false;\r\n  return num;\r\n}\r\n// F0 //////////////////////////////////////////////// LIMITED RANGE OF VALUES \r\n\r\nconst limit = (max, num, action) => {\r\n  action === 'increase' ? num >= max ? false : num++ : false;\r\n  action === 'decrease' ? num <= 0 ? false : num-- : false;\r\n  return num;\r\n}\r\n// F0 ////////////////////////// SET CURRENTLY DISPLAYED ARCHIVE WEEK'S HEIGHT \r\n\r\nconst setCurrentWeekHeight = () => {\r\n  \r\n  const currentWeek = document.querySelectorAll('.week--js')[currentWeekIndex];\r\n  const childrenArray = [...currentWeek.children];\r\n  const childrenHeight = childrenArray.reduce((a,b) => a + b.clientHeight, 0);\r\n  const offsetHeight = 40;\r\n  const finalHeight = childrenHeight + offsetHeight;\r\n\r\n  archiveWeeks.style.height = `${finalHeight}px`;\r\n}\r\n// F0 ///////////////////////////////////////////////////////// SET INDICATORS \r\n\r\nconst setIndicators = (id, value) => {\r\n\r\n  value > 7 ? value = 7 : false;\r\n\r\n  const indicators = document.querySelector(`.indicator--js-${id}`).children;\r\n  const indicator = document.querySelector(`.indicator--js-${id} .indicator__svg--js-${value}`);\r\n  \r\n  for (const indicator of indicators) {\r\n    indicator.classList.contains('indicator__svg--visible')\r\n    ? indicator.classList.remove('indicator__svg--visible')\r\n    : false;\r\n  }\r\n  indicator.classList.add('indicator__svg--visible');\r\n}\r\n// F0 //////////////////////////////////////////////// CREATE ADD ENTRY BUTTON \r\n\r\nconst createAddEntryButton = () => {\r\n  const addEntryButton = document.createElement('li');\r\n  addEntryButton.className = 'entry entry__add';\r\n  addEntryButton.innerHTML = `\r\n    <button class=\"button entry__button entry__button--add entry__button--js-add\">\r\n      Add previous day..\r\n    </button>\r\n  `;\r\n  addEntryButton.addEventListener('click', enterNewEntryValue);\r\n\r\n  return addEntryButton;\r\n}\r\n// F0 //////////////////////////////////////////// CREATE 'REMOVE ITEM' BUTTON \r\n\r\nconst createRemoveEntryButton = () => {\r\n\r\n  const removeEntryButton = document.createElement('button');\r\n  removeEntryButton.className = 'button entry__remove';\r\n  removeEntryButton.innerHTML = `\r\n    <svg class=\"entry__svg\" viewBox=\"0 0 512 512\">\r\n      <use href=\"assets/svg/icons.svg#remove-icon\"></use>\r\n    </svg>\r\n  `\r\n  removeEntryButton.addEventListener('click', removeLastEntry);\r\n\r\n  return removeEntryButton;\r\n}\r\n// F2 ////////////////////////////////////////////////////// SET LOCAL STORAGE \r\n\r\nconst handleData = () => {\r\n\r\n  const date = new Date();\r\n  let dateKey = setDateKey(date);\r\n  setNewKeyValue(dateKey, 0);\r\n  let hydrappKeys = getHydrappKeys();\r\n  const oldestKey = hydrappKeys[hydrappKeys.length - 1];\r\n  \r\n  // create object for each key\r\n  const createEntryObject = (date) => {\r\n    const newEntry = new Entry(date);\r\n    hydrappArray.push(newEntry);\r\n  }\r\n  // first object of array\r\n  createEntryObject(date);\r\n\r\n  // autocomplete the rest of keys if needed\r\n  while (dateKey !== oldestKey) {\r\n    dateKey = setDateKey(date.setDate(date.getDate() - 1));\r\n    lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n    setNewKeyValue(dateKey, 0);\r\n    createEntryObject(date);\r\n  }\r\n  //counter.innerHTML = localStorage.getItem(dateKey);\r\n  updateCounter('displayValue');\r\n}\r\n// F1 ///////////////////////////////////////////////////////// UPDATE COUNTER \r\n\r\nconst updateCounter = (e) => {\r\n  const self = e.target || e;\r\n  const key = setDateKey();\r\n  let value = parseInt(localStorage.getItem(key));\r\n  const firstArchiveEntry = document.querySelector('.entry__value--js');\r\n\r\n  switch (self) {                                                     // ! REFACTOR\r\n    case 'displayValue':\r\n      counter.innerHTML = value;\r\n      break;\r\n    \r\n    case addGlass:                                                    // ! REFACTOR\r\n      value < counterMaxValue ? value++ : value = counterMaxValue;\r\n      localStorage.setItem(key, value);\r\n      hydrappArray[0].value = key;\r\n      counter.innerHTML = value;\r\n      firstArchiveEntry.textContent = hydrappArray[0].value;\r\n      break;\r\n\r\n    case removeGlass:                                                 // ! REFACTOR\r\n      value > 0 ? value-- : value = 0;\r\n      localStorage.setItem(key, value);\r\n      hydrappArray[0].value = key;\r\n      counter.innerHTML = value;\r\n      firstArchiveEntry.textContent = hydrappArray[0].value;\r\n      break;\r\n  }\r\n}\r\n// F2 /////////////////////////////////////////////////////// ADD ARCHIVE NODE \r\n\r\nconst addArchiveNode = (index, option) => {\r\n\r\n  const {value, id, day, dayHtml, weekHtml} = hydrappArray[index];\r\n  \r\n  // add new week\r\n  if (((day === 'sunday' || index === 0)) && option !== 'add') {\r\n\r\n    archiveWeeks.insertAdjacentHTML('beforeend', weekHtml);                // ! TO REFACTOR\r\n    const weekHeader = archiveWeeks.lastElementChild.firstElementChild;\r\n    weekHeader.addEventListener('click', slideWeek);\r\n  }\r\n  // add next day entry\r\n  let lastWeekList = archiveWeeks.lastElementChild.lastElementChild;\r\n  lastWeekList.insertAdjacentHTML('beforeend', dayHtml);\r\n  setIndicators(id, value);\r\n\r\n  // add 'add entry button at the end\r\n  if (index === hydrappArray.length - 1) {\r\n    if (day === 'monday') {\r\n      archiveWeeks.insertAdjacentHTML(\"beforeend\", weekHtml);              // ! TO REFACTOR\r\n      const weekHeader = archiveWeeks.lastElementChild.firstElementChild;\r\n      weekHeader.addEventListener('click', slideWeek);\r\n    };\r\n\r\n    lastWeekList = archiveWeeks.lastElementChild.lastElementChild;\r\n    lastWeekList.appendChild(addEntryButton);\r\n  }\r\n  updateWeekHeading();\r\n\r\n  // add event listeners to all edit buttons\r\n  const editButton = document.querySelectorAll('.edition__button--js-edit')[index];\r\n  editButton.index = index;\r\n  editButton.addEventListener('click', handleItemEdit);\r\n}\r\n// F2 //////////////////////////////////////////////////////////// SET ARCHIVE \r\n\r\nconst setArchiveDOM = () => {\r\n  \r\n  for (let i = 0; i < hydrappArray.length; i++) {\r\n    addArchiveNode(i);\r\n  }\r\n  // set the newest week as visible\r\n  const weeks = document.querySelectorAll('.week--js');\r\n  weeks[currentWeekIndex].classList.add('week--visible');\r\n  // set 'remove entry' button on the last entry\r\n  handleArchiveLastEntry();\r\n\r\n  // generate indicators for new entry mode\r\n  const indicatorsContainer = document.querySelector('.indicator--js-new');\r\n  indicatorsContainer.innerHTML = indicators;\r\n  setIndicators('new', 0);\r\n}\r\n// F2 /////////////////////////////////////////////////////// SET WEEK HEADING \r\n\r\nconst updateWeekHeading = () => {\r\n\r\n  const weekLists = document.querySelectorAll('.week__list--js');\r\n  const weekHeadings = document.querySelectorAll('.week__heading--js');\r\n\r\n  // F0 ///////////////////////////////////////////////////////////// GET DATE \r\n  const getDate = (element) => {\r\n\r\n    if (element) {\r\n      const filtered = element.className.split(' ').filter(a => /hydrApp/.test(a));\r\n      return filtered.toString().slice(10).split('-').reverse().join('.');\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  // F0 /////////////////////////////////////////////// SET BUTTONS VISIBILITY \r\n  const setButtonsVisiblity = (index, option) => {\r\n    const prevWeekButton = document.querySelectorAll('.week__button--js-prev')[index];\r\n    const nextWeekButton = document.querySelectorAll('.week__button--js-next')[index];\r\n\r\n    switch (index) {\r\n\r\n      case 0:\r\n        prevWeekButton.classList.remove('week__button--visible');\r\n        option === 'oneWeek'\r\n        ? nextWeekButton.classList.remove('week__button--visible')\r\n        : nextWeekButton.classList.add('week__button--visible');\r\n        break;\r\n      \r\n      case weekHeadings.length - 1:\r\n        prevWeekButton.classList.add('week__button--visible');\r\n        nextWeekButton.classList.remove('week__button--visible');\r\n        break;\r\n\r\n      default:\r\n        prevWeekButton.classList.add('week__button--visible');\r\n        nextWeekButton.classList.add('week__button--visible');\r\n        break;\r\n    }\r\n  }\r\n  \r\n  for (let i = 0; i < weekLists.length; i++) {\r\n\r\n    const entries = weekLists[i].querySelectorAll('.entry--js');\r\n    const startDate = getDate(entries[entries.length - 1]);\r\n    const endDate = getDate(entries[0]);\r\n    const heading = weekHeadings[i];\r\n\r\n    heading.textContent = `${startDate\r\n    ? (startDate === endDate ? startDate : `${startDate.slice(0,5)} - ${endDate}`)\r\n    : `New Week`}`;\r\n\r\n    weekLists.length > 1 ? setButtonsVisiblity(i) : setButtonsVisiblity(i, 'oneWeek');\r\n  }\r\n}\r\n// F1 ///////////////////////////////////////////////////// TOGGLE MOBILE MENU \r\n\r\nconst toggleMobileMenu = (e) => {\r\n  const self = e.target || e;\r\n\r\n  if (self === burgerButton) {\r\n\r\n    self.classList.toggle('burger-button--active');\r\n    mobileMenu.classList.toggle('mobile-menu--visible');\r\n  }\r\n}\r\n// F1 /////////////////////////////////////////////////// ANIMATE WEEK ENTRIES \r\n\r\nconst entriesFadeIn = () => {\r\n  const currentWeekList = document.querySelectorAll('.week__list--js')[currentWeekIndex];\r\n  let delay = 0.1;\r\n\r\n  [...currentWeekList.children].forEach(elem => {\r\n    elem.classList.add('entry--visible');\r\n    elem.style.transitionDelay = `${delay}s`;\r\n    delay += 0.1;\r\n  });\r\n}\r\n// F1 ///////////////////////////////////////////////////////// TOGGLE ARCHIVE \r\n\r\nconst toggleArchive = (e) => {                      // ! to DRY !\r\n  const self = e.target;\r\n  const svgIcons = self.lastElementChild;\r\n  const section = self.nextElementSibling;\r\n\r\n  switch (self) {\r\n    case mobileMenuArchiveSection:\r\n      \r\n      svgIcons.classList.toggle('mobile-menu__svg--active');\r\n      if (svgIcons.classList.contains('mobile-menu__svg--active')) {\r\n\r\n        setCurrentWeekHeight();\r\n        entriesFadeIn();\r\n        window.addEventListener('keydown', enterNewEntryValue);\r\n        window.addEventListener('keydown', removeLastEntry);\r\n        window.addEventListener('keydown', slideWeek);\r\n\r\n      } else {\r\n\r\n        section.style.height = 0;\r\n        entriesFadeIn();\r\n        window.removeEventListener('keydown', enterNewEntryValue);\r\n        window.removeEventListener('keydown', removeLastEntry);\r\n        window.removeEventListener('keydown', slideWeek);\r\n\r\n      }\r\n      break;\r\n    \r\n    case mobileMenuStatsSection:\r\n      svgIcons.classList.toggle('mobile-menu__svg--active');\r\n      section.classList.toggle('stats__container--active');\r\n      break;\r\n\r\n    case mobileMenuSettingsSection:\r\n      svgIcons.classList.toggle('mobile-menu__svg--active');\r\n      section.classList.toggle('settings__container--active');\r\n      break;\r\n  }\r\n}\r\n// F2 ///////////////////////////////////////////////////////////// SLIDE WEEK \r\n\r\nconst slideWeek = (e) => {\r\n\r\n  const self = e.keyCode || e.target;\r\n  const prevWeekButton = document.querySelectorAll('.week__button--js-prev')[currentWeekIndex];\r\n  const nextWeekButton = document.querySelectorAll('.week__button--js-next')[currentWeekIndex];\r\n  const weeksAmount = archiveWeeks.children.length;\r\n\r\n  const handleSlide = (direction) => {\r\n    // handle previous section\r\n    archiveWeeks.children[currentWeekIndex].className = `week week--js week--slide-out-to-${direction === 'toLeft' ? `right` : `left`}`;\r\n    const previousWeekIndex = currentWeekIndex;\r\n    // change index\r\n    currentWeekIndex = limit(archiveWeeks.children.length - 1, currentWeekIndex, direction === 'toLeft' ? `decrease` : `increase`);\r\n    // handle next section\r\n    if (currentWeekIndex !== previousWeekIndex) {\r\n      archiveWeeks.children[currentWeekIndex].classList = `week week--js week--visible week--slide-in-from-${direction === 'toLeft' ? `left` : `right`}`;\r\n    } else {\r\n      archiveWeeks.children[currentWeekIndex].classList = 'week week--js week--visible';\r\n    }\r\n  }\r\n\r\n  if (weeksAmount > 1) {\r\n    switch (self) {\r\n      case 37:\r\n      case prevWeekButton:\r\n        handleSlide('toLeft');\r\n        break;\r\n      case 39:\r\n      case nextWeekButton:\r\n        handleSlide('toRight');\r\n        break;\r\n    }\r\n    setCurrentWeekHeight();\r\n    entriesFadeIn();\r\n  }\r\n}\r\n// F1 ////////////////////////////////////////// ARCHIVE MODAL << SHOW ARCHIVE \r\n\r\nconst enterNewEntryValue = (e) => {\r\n\r\n  const self = e.keyCode || e.target || e;                // ! e only for tests\r\n  const addEntryButton = document.querySelector('.entry__button--js-add');\r\n\r\n  if (self === 107 || self === addEntryButton) {\r\n\r\n    let value = 0;\r\n    newEntryMode.classList.add('new-entry--visible');\r\n    newEntryValue.textContent = value;\r\n  \r\n    const modeOff = () => {\r\n      newEntryMode.classList.remove('new-entry--visible');\r\n      newEntryMode.removeEventListener('click', handleValue);\r\n      window.removeEventListener('keydown', handleValue);\r\n      window.addEventListener('keydown', enterNewEntryValue);\r\n      window.addEventListener('keydown', slideWeek);\r\n    }\r\n  \r\n    const handleValue = (e) => {\r\n  \r\n      const self = e.keyCode || e.target;\r\n  \r\n      switch (self) {\r\n  \r\n        case 37:\r\n        case newEntryDecrease:\r\n          value !== 0 ? value-- : false;\r\n          newEntryValue.textContent = value;\r\n          setIndicators('new', value);\r\n          break;\r\n\r\n        case 39:\r\n        case newEntryIncrease:\r\n          value !== counterMaxValue ? value++ : false;\r\n          newEntryValue.textContent = value;\r\n          setIndicators('new', value);\r\n          break;\r\n  \r\n        case 27:\r\n        case newEntryCancel:\r\n          modeOff();\r\n          break;\r\n  \r\n        case 13:\r\n        case newEntrySave:\r\n          e.preventDefault();\r\n          addNewEntry(e, value);\r\n          modeOff();\r\n          break;\r\n      }\r\n    }\r\n    newEntryMode.addEventListener('click', handleValue);\r\n    window.addEventListener('keydown', handleValue);\r\n    window.removeEventListener('keydown', enterNewEntryValue);\r\n    window.removeEventListener('keydown', slideWeek);\r\n  }\r\n}\r\n// F1 /////////////////////////////////////////// ADD NEW ITEM << SHOW ARCHIVE \r\n\r\nconst addNewEntry = (e, value) => {\r\n  \r\n  const self = e.keyCode || e.target;\r\n\r\n  if (self === 13 || self === newEntrySave) {\r\n\r\n    e.preventDefault();\r\n\r\n    let lastEntryIndex = hydrappArray.length - 1;\r\n    let lastEntry = document.querySelectorAll('.entry--js')[lastEntryIndex];\r\n    lastEntry.classList.remove('entry--last');\r\n\r\n    lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n    const newEntryKey = setDateKey(lastEntryDate);\r\n    \r\n    // handle local storage and array of objects\r\n    setNewKeyValue(newEntryKey, value);\r\n    const newEntry = new Entry(lastEntryDate);\r\n    newEntry.value = newEntryKey;\r\n    hydrappArray.push(newEntry);\r\n\r\n    // create new entry node\r\n    lastEntryIndex = hydrappArray.length - 1;\r\n    addArchiveNode(lastEntryIndex, 'add');\r\n    lastEntry = document.querySelectorAll('.entry--js')[lastEntryIndex];\r\n    lastEntry.classList.add('entry--visible');\r\n\r\n    // jump to the last week\r\n    const weeks = archiveWeeks.children;\r\n    const currentWeek = weeks[currentWeekIndex];\r\n    const lastWeekIndex = weeks.length - 1;\r\n    const lastWeek = weeks[lastWeekIndex];\r\n    if (currentWeekIndex !== lastWeekIndex) {\r\n      currentWeekIndex = archiveWeeks.children.length - 1;\r\n      currentWeek.className = 'week week--js week--slide-out-to-left';\r\n      lastWeek.className = 'week week--js week--visible week--slide-in-from-right';\r\n    }\r\n    handleArchiveLastEntry();\r\n    setCurrentWeekHeight();\r\n  }\r\n}\r\n// F1 /////////////////////////////////////////////// ADJUST LAST ITEM OF LIST \r\n\r\nconst handleArchiveLastEntry = () => {\r\n\r\n  const entries = document.querySelectorAll('.entry--js');\r\n  const lastEntry = entries[entries.length - 1];\r\n  const lastEntryValueNode = lastEntry.querySelector('.entry__value--js');\r\n\r\n  if (entries.length > 1) {\r\n    lastEntry.insertBefore(removeEntryButton, lastEntryValueNode);\r\n    lastEntry.classList.add('entry--last');\r\n  }\r\n}\r\n// F1 /////////////////////////////////////// REMOVE LAST ITEM << SHOW ARCHIVE \r\n\r\nconst removeLastEntry = (e) => {\r\n\r\n  const self = e.keyCode || e. target;\r\n  const lastEntryIndex = hydrappArray.length - 1;\r\n  const {day, key} = hydrappArray[lastEntryIndex];\r\n  const lastEntryNode = document.querySelectorAll('.entry--js')[lastEntryIndex];\r\n\r\n  if (self === 109 || self === removeEntryButton) {\r\n\r\n    if (hydrappArray.length > 1) {\r\n\r\n      hydrappArray.pop();\r\n      localStorage.removeItem(key);\r\n      lastEntryDate.setDate(lastEntryDate.getDate() + 1);\r\n      lastEntryNode.parentNode.removeChild(lastEntryNode);\r\n\r\n      // removing last week section after deleting last day of that week\r\n      if (day === 'monday') {\r\n        const weekToRemove = archiveWeeks.lastElementChild;\r\n        const ifVisible = weekToRemove.classList.contains('week--visible');\r\n        archiveWeeks.removeChild(archiveWeeks.lastElementChild);\r\n        const lastWeek = archiveWeeks.lastElementChild;\r\n        const lastWeekList = lastWeek.lastElementChild;\r\n        if (ifVisible) {\r\n          lastWeek.className = 'week week--js week--visible week--slide-in-from-left';currentWeekIndex--;\r\n        }\r\n        lastWeekList.appendChild(addEntryButton);\r\n      }\r\n\r\n      // add remove button on current last item\r\n      handleArchiveLastEntry();\r\n      updateWeekHeading();\r\n      setCurrentWeekHeight();\r\n    }\r\n  }\r\n}\r\n// F2 /////////////////////////////////////////////////////// HANDLE ITEM EDIT \r\n\r\nconst handleItemEdit = (e) => {\r\n  const itemIndex = e.target.index;\r\n\r\n  const entry = document.querySelectorAll('.entry--js')[itemIndex];\r\n  const entryHeader = document.querySelectorAll('.entry__header--js')[itemIndex];\r\n  const entryValue = document.querySelectorAll('.entry__value--js')[itemIndex];\r\n  const editSection = document.querySelectorAll('.edition--js')[itemIndex];\r\n  const decreaseButton = document.querySelectorAll('.edition__button--js-decrease')[itemIndex];\r\n  const increaseButton = document.querySelectorAll('.edition__button--js-increase')[itemIndex];\r\n  const cancelButton = document.querySelectorAll('.edition__button--js-cancel')[itemIndex];\r\n  const saveButton = document.querySelectorAll('.edition__button--js-save')[itemIndex];\r\n\r\n  // F0 ////////////////////////////// TOGGLE ITEM DISPLAY << HANDLE ITEM EDIT \r\n\r\n  const toggleItemDisplay = () => {\r\n\r\n    for (const editButton of editSection.children) {\r\n      editButton.classList.toggle('edition__button--visible');\r\n    }\r\n    editSection.classList.toggle('edition--visible');\r\n    entry.classList.toggle('entry--edit-mode');\r\n    entryHeader.classList.toggle('entry__header--edit-mode');\r\n\r\n    itemIndex === hydrappArray.length - 1\r\n    ? removeEntryButton.classList.toggle('entry__remove--hidden')\r\n    : false;\r\n  }\r\n  // F1 /////////////////////////////////// EXIT EDIT MODE << HANDLE ITEM EDIT \r\n\r\n  const exitEditMode = () => {\r\n    const {value, id} = hydrappArray[itemIndex];\r\n    \r\n    toggleItemDisplay();\r\n    entryValue.textContent = value;\r\n    setIndicators(id, value);\r\n\r\n    archive.removeEventListener('click', handleEdition);\r\n    archive.removeEventListener('keydown', handleEdition);\r\n    window.addEventListener('keydown', slideWeek);\r\n  }\r\n  // F1 /////////////////////////////////// HANDLE EDITION << HANDLE ITEM EDIT \r\n\r\n  const handleEdition = (e) => {\r\n    const self = e.keyCode || e.target;\r\n    let dayValue = parseInt(entryValue.textContent);\r\n    const glassCounter = document.querySelector('.glass__counter--js');\r\n\r\n    const {key, id} = hydrappArray[itemIndex];\r\n\r\n    switch (self) {\r\n\r\n      case 40:\r\n      case decreaseButton:\r\n        e.preventDefault();\r\n        dayValue > 0 ? dayValue-- : false;\r\n        entryValue.textContent = dayValue;\r\n        setIndicators(id, dayValue);\r\n      break;\r\n      \r\n      case 38:\r\n      case increaseButton:\r\n        e.preventDefault();\r\n        dayValue < counterMaxValue ? dayValue++ : false;\r\n        entryValue.textContent = dayValue;\r\n        setIndicators(id, dayValue);\r\n      break;\r\n\r\n      case 27:\r\n      case cancelButton:\r\n        e.preventDefault();\r\n        exitEditMode();\r\n      break;\r\n\r\n      case 13:\r\n      case saveButton:\r\n        e.preventDefault();\r\n        localStorage.setItem(key, dayValue);\r\n        // setter function\r\n        hydrappArray[itemIndex].value = key;\r\n        glassCounter.textContent = hydrappArray[0].value;\r\n        exitEditMode();\r\n      break;\r\n    }\r\n  }\r\n  ///////////////////////////////////////// FUNCTION CALLS << HANDLE ITEM EDIT \r\n\r\n  toggleItemDisplay();\r\n  archive.addEventListener('click', handleEdition);\r\n  archive.addEventListener('keydown', handleEdition);\r\n  window.removeEventListener('keydown', slideWeek);\r\n}\r\n// F2 //////////////////////////////////////////////// END OF HANDLE ITEM EDIT \r\n\r\n/*\r\n##     ##    ###    ########  ####    ###    ########  ##       ########  ######\r\n##     ##   ## ##   ##     ##  ##    ## ##   ##     ## ##       ##       ##    ##\r\n##     ##  ##   ##  ##     ##  ##   ##   ##  ##     ## ##       ##       ##\r\n##     ## ##     ## ########   ##  ##     ## ########  ##       ######    ######\r\n ##   ##  ######### ##   ##    ##  ######### ##     ## ##       ##             ##\r\n  ## ##   ##     ## ##    ##   ##  ##     ## ##     ## ##       ##       ##    ##\r\n   ###    ##     ## ##     ## #### ##     ## ########  ######## ########  ######\r\n*/\r\n\r\n//////////////////////////////////////////////////////////////////// VARIABLES \r\n// APP\r\nconst appContainer = document.querySelector('.app__container--js');\r\nconst addGlass = document.querySelector('.app__button--js-add');\r\nconst removeGlass = document.querySelector('.app__button--js-remove');\r\nconst counter = document.querySelector('.glass__counter--js');\r\nconst counterMaxValue = 99;\r\n// NAVIGATION\r\nconst burgerButton = document.querySelector('.burger-button--js');\r\nconst mobileMenu = document.querySelector('.mobile-menu--js');\r\nconst mobileMenuArchiveSection = document.querySelector('.mobile-menu__section--js-archive');\r\nconst mobileMenuStatsSection = document.querySelector('.mobile-menu__section--js-stats');\r\nconst mobileMenuSettingsSection = document.querySelector('.mobile-menu__section--js-settings');\r\n// ARCHIVE\r\nconst archive = document.querySelector('.archive--js');\r\nconst archiveWeeks = document.querySelector('.archive__weeks--js');\r\nconst archiveButton = document.querySelector('.navigation__button--js-archive');\r\nconst prevWeekButton = document.querySelector('.archive__button--js-prev');\r\nconst nextWeekButton = document.querySelector('.archive__button--js-next');\r\nconst addEntryButton = createAddEntryButton();\r\nconst removeEntryButton = createRemoveEntryButton();\r\nlet currentWeekIndex = 0;\r\n// NEW ENTRY\r\nconst newEntryMode = document.querySelector('.new-entry--js');\r\nconst newEntryValue = document.querySelector('.new-entry__value--js');\r\nconst newEntryDecrease = document.querySelector('.new-entry__button--js-decrease');\r\nconst newEntryIncrease = document.querySelector('.new-entry__button--js-increase');\r\nconst newEntryCancel = document.querySelector('.new-entry__button--js-cancel');\r\nconst newEntrySave = document.querySelector('.new-entry__button--js-save');\r\n// STATS\r\nconst statsButton = document.querySelector('.navigation__button--js-stats');\r\n\r\n/////////////////////////////////////////////////////////////// FUNCTION CALLS \r\n\r\nhandleData();\r\nsetArchiveDOM();\r\nupdateWeekHeading();\r\n\r\n//toggleMobileMenu(burgerButton);                           // ! FOR TESTS ONLY\r\n//enterNewEntryValue(107);                                    // ! FOR TESTS ONLY\r\n\r\n//////////////////////////////////////////////////////////////////// VARIABLES \r\n\r\nlet editButtons = document.querySelectorAll('.edition__button--js-edit');\r\nlet entries = document.querySelectorAll('.entry--js');\r\nconst addNewDayButton = document.querySelector('.entry__button--js-add');\r\n\r\n////////////////////////////////////////////////////////////// EVENT LISTENERS \r\n\r\nappContainer.addEventListener('click', updateCounter);\r\nburgerButton.addEventListener('click', toggleMobileMenu);\r\nmobileMenu.addEventListener('click', toggleArchive);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi5qcz85MjkxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0EsbURBQW1ELElBQUksc0JBQXNCLEVBQUU7QUFDL0UsK0NBQStDLEVBQUU7QUFDakQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUNBQW1DLFNBQVM7QUFDNUM7QUFDQSwwREFBMEQsU0FBUztBQUNuRSxtRkFBbUYsVUFBVTtBQUM3RjtBQUNBLHNEQUFzRCxXQUFXO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxRQUFRO0FBQ3RELFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDLFlBQVk7QUFDN0M7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSw4REFBOEQsR0FBRztBQUNqRSw2REFBNkQsR0FBRyx1QkFBdUIsTUFBTTs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsU0FBUyxrQ0FBa0M7O0FBRTNDO0FBQ0E7O0FBRUEsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGlCQUFpQix5QkFBeUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsc0JBQXNCOztBQUV2QztBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkI7QUFDN0IsOENBQThDLHFCQUFxQixLQUFLLFFBQVE7QUFDaEYsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQ0FBb0MsTUFBTTtBQUMxQztBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRGQUE0RiwwQ0FBMEM7QUFDdEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZHQUE2RywwQ0FBMEM7QUFDdkosS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwwQ0FBMEM7QUFDMUM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUyxTQUFTO0FBQ2xCOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRkFBc0Y7QUFDdEY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxVQUFVOztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXLFFBQVE7O0FBRW5COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGlDQUFpQztBQUNqQywwQkFBMEI7O0FBRTFCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIFNFUlZJQ0UgV09SS0VSIFxyXG5cclxuaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJ3NlcnZpY2V3b3JrZXIuanMnKS50aGVuKGZ1bmN0aW9uKHJlZ2lzdHJhdGlvbikge1xyXG4gICAgICAvLyBSZWdpc3RyYXRpb24gd2FzIHN1Y2Nlc3NmdWxcclxuICAgICAgLy9jb25zb2xlLmxvZygnU2VydmljZVdvcmtlciByZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCB3aXRoIHNjb3BlOiAnLCByZWdpc3RyYXRpb24uc2NvcGUpO1xyXG4gICAgfSwgZnVuY3Rpb24oZXJyKSB7XHJcbiAgICAgIC8vIHJlZ2lzdHJhdGlvbiBmYWlsZWQgOihcclxuICAgICAgY29uc29sZS5sb2coJ1NlcnZpY2VXb3JrZXIgcmVnaXN0cmF0aW9uIGZhaWxlZDogJywgZXJyKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIEdMT0JBTCBWQVJJQUJMRVMgXHJcblxyXG5jb25zdCBoeWRyYXBwQXJyYXkgPSBbXTtcclxuY29uc3QgbGFzdEVudHJ5RGF0ZSA9IG5ldyBEYXRlKCk7XHJcbmNvbnN0IHdlZWtEYXkgPSBbJ3N1bmRheScsJ21vbmRheScsJ3R1ZXNkYXknLCd3ZWRuZXNkYXknLCd0aHVyc2RheScsJ2ZyaWRheScsJ3NhdHVyZGF5J107XHJcblxyXG5sZXQgaW5kaWNhdG9ycyA9ICcnO1xyXG5mb3IgKGxldCBpID0gMDsgaSA8IDg7IGkrKykge1xyXG4gIGluZGljYXRvcnMgKz0gYFxyXG4gIDxzdmcgY2xhc3M9XCJpbmRpY2F0b3JfX3N2ZyBpbmRpY2F0b3JfX3N2Zy0tZW1vLSR7aSsxfSBpbmRpY2F0b3JfX3N2Zy0tanMtJHtpfVwiPlxyXG4gICAgPHVzZSBocmVmPVwiYXNzZXRzL3N2Zy9pY29ucy5zdmcjZW1vdGljb24tJHtpfVwiPjwvdXNlPlxyXG4gIDwvc3ZnPmBcclxufVxyXG5cclxuY29uc3QgYXJjaGl2ZUVtcHR5ID0gYFxyXG48cCBjbGFzcz1cIndlZWtfX2VtcHR5XCI+Tm8gaGlzdG9yeSB5ZXQuLi48L3A+XHJcbmA7XHJcblxyXG5jb25zdCBhZGRCdXR0b25IdG1sID0gYFxyXG48bGkgY2xhc3M9XCJlbnRyeSBlbnRyeS0tYWRkIGVudHJ5LS1qcy1hZGRcIj5cclxuICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGVudHJ5X19idXR0b24gZW50cnlfX2J1dHRvbi0tYWRkIGVudHJ5X19idXR0b24tLWpzLWFkZFwiPlxyXG4gICAgQWRkIG5ldyBkYXkuLlxyXG4gIDwvYnV0dG9uPlxyXG48L2xpPlxyXG5gO1xyXG5cclxuY2xhc3MgRW50cnkge1xyXG4gIGNvbnN0cnVjdG9yKGRhdGUpIHtcclxuICAgIHRoaXMua2V5ID0gc2V0RGF0ZUtleShkYXRlKTtcclxuICAgIHRoaXMudmFsdWUgPSB0aGlzLmtleTtcclxuICAgIHRoaXMuZGF0ZSA9IGRhdGU7XHJcbiAgICB0aGlzLmlkID0gdGhpcy5kYXRlO1xyXG4gICAgdGhpcy5kYXkgPSBkYXRlO1xyXG5cclxuICAgIHRoaXMud2Vla0h0bWwgPSBgXHJcbiAgICAgIDxzZWN0aW9uIGNsYXNzPVwid2VlayB3ZWVrLS1qc1wiPlxyXG4gICAgICAgIDxoZWFkZXIgY2xhc3M9XCJ3ZWVrX19oZWFkZXIgd2Vla19faGVhZGVyLS1qc1wiPlxyXG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiB3ZWVrX19idXR0b24gd2Vla19fYnV0dG9uLS1wcmV2IHdlZWtfX2J1dHRvbi0tanMtcHJldlwiPlxyXG4gICAgICAgICAgICA8c3ZnIGNsYXNzPVwid2Vla19fc3ZnXCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCI+XHJcbiAgICAgICAgICAgICAgPHVzZSBocmVmPVwiYXNzZXRzL3N2Zy9pY29ucy5zdmcjbGVmdC1hcnJvd1wiPjwvdXNlPlxyXG4gICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGgzIGNsYXNzPVwid2Vla19faGVhZGluZyB3ZWVrX19oZWFkaW5nLS1qc1wiPk5ldyB3ZWVrPC9oMz5cclxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gd2Vla19fYnV0dG9uIHdlZWtfX2J1dHRvbi0tbmV4dCB3ZWVrX19idXR0b24tLWpzLW5leHRcIj5cclxuICAgICAgICAgICAgPHN2ZyBjbGFzcz1cIndlZWtfX3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiPlxyXG4gICAgICAgICAgICAgIDx1c2UgaHJlZj1cImFzc2V0cy9zdmcvaWNvbnMuc3ZnI3JpZ2h0LWFycm93XCI+PC91c2U+XHJcbiAgICAgICAgICAgIDwvc3ZnPlxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9oZWFkZXI+XHJcbiAgICAgICAgPHVsIGNsYXNzPVwid2Vla19fbGlzdCB3ZWVrX19saXN0LS1qc1wiPjwvdWw+XHJcbiAgICAgIDwvc2VjdGlvbj5cclxuICAgIGA7XHJcblxyXG4gICAgdGhpcy5kYXlIdG1sID0gYFxyXG4gICAgICA8bGkgY2xhc3M9XCJlbnRyeSBlbnRyeS0tanMgJHt0aGlzLmtleX1cIj5cclxuICAgICAgICA8aGVhZGVyIGNsYXNzPVwiZW50cnlfX2hlYWRlciBlbnRyeV9faGVhZGVyLS1qc1wiPlxyXG4gICAgICAgICAgPHAgY2xhc3M9XCJlbnRyeV9faGVhZGluZyBlbnRyeV9faGVhZGluZy0tZGF5XCI+JHt0aGlzLmRheX08L3A+XHJcbiAgICAgICAgICA8cCBjbGFzcz1cImVudHJ5X19oZWFkaW5nIGVudHJ5X19oZWFkaW5nLS1kYXRlIGVudHJ5X19oZWFkaW5nLS1qcy1kYXRlXCI+JHt0aGlzLmRhdGV9PC9wPlxyXG4gICAgICAgIDwvaGVhZGVyPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwiZW50cnlfX3ZhbHVlIGVudHJ5X192YWx1ZS0tanNcIj4ke3RoaXMudmFsdWV9PC9zcGFuPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJlZGl0aW9uIGVkaXRpb24tLWpzXCI+XHJcbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGVkaXRpb25fX2J1dHRvbiBlZGl0aW9uX19idXR0b24tLXZpc2libGUgZWRpdGlvbl9fYnV0dG9uLS1lZGl0IGVkaXRpb25fX2J1dHRvbi0tanMtZWRpdFwiPlxyXG4gICAgICAgICAgICA8c3ZnIGNsYXNzPVwiZWRpdGlvbl9fc3ZnIGVkaXRpb25fX3N2Zy0tZWRpdFwiPlxyXG4gICAgICAgICAgICAgIDx1c2UgaHJlZj1cImFzc2V0cy9zdmcvaWNvbnMuc3ZnI2VkaXQtbW9kZVwiPjwvdXNlPlxyXG4gICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBlZGl0aW9uX19idXR0b24gZWRpdGlvbl9fYnV0dG9uLS1kZWNyZWFzZSBlZGl0aW9uX19idXR0b24tLWpzLWRlY3JlYXNlXCI+XHJcbiAgICAgICAgICAgIDxzdmcgY2xhc3M9XCJlZGl0aW9uX19zdmcgZWRpdGlvbl9fc3ZnLS1kZWNyZWFzZVwiPlxyXG4gICAgICAgICAgICAgIDx1c2UgaHJlZj1cImFzc2V0cy9zdmcvaWNvbnMuc3ZnI2Rvd24tYXJyb3dcIj48L3VzZT5cclxuICAgICAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gZWRpdGlvbl9fYnV0dG9uIGVkaXRpb25fX2J1dHRvbi0taW5jcmVhc2UgZWRpdGlvbl9fYnV0dG9uLS1qcy1pbmNyZWFzZVwiPlxyXG4gICAgICAgICAgICA8c3ZnIGNsYXNzPVwiZWRpdGlvbl9fc3ZnIGVkaXRpb25fX3N2Zy0taW5jcmVhc2VcIj5cclxuICAgICAgICAgICAgICA8dXNlIGhyZWY9XCJhc3NldHMvc3ZnL2ljb25zLnN2ZyN1cC1hcnJvd1wiPjwvdXNlPlxyXG4gICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBlZGl0aW9uX19idXR0b24gZWRpdGlvbl9fYnV0dG9uLS1jYW5jZWwgZWRpdGlvbl9fYnV0dG9uLS1qcy1jYW5jZWxcIj5cclxuICAgICAgICAgICAgPHN2ZyBjbGFzcz1cImVkaXRpb25fX3N2ZyBlZGl0aW9uX19zdmctLWNhbmNlbFwiPlxyXG4gICAgICAgICAgICAgIDx1c2UgaHJlZj1cImFzc2V0cy9zdmcvaWNvbnMuc3ZnI2JhY2stYXJyb3dcIj48L3VzZT5cclxuICAgICAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gZWRpdGlvbl9fYnV0dG9uIGVkaXRpb25fX2J1dHRvbi0tc2F2ZSBlZGl0aW9uX19idXR0b24tLWpzLXNhdmVcIj5cclxuICAgICAgICAgICAgPHN2ZyBjbGFzcz1cImVkaXRpb25fX3N2ZyBlZGl0aW9uX19zdmctLXNhdmVcIj5cclxuICAgICAgICAgICAgICA8dXNlIGhyZWY9XCJhc3NldHMvc3ZnL2ljb25zLnN2ZyNzYXZlLWljb25cIj48L3VzZT5cclxuICAgICAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5kaWNhdG9yIGluZGljYXRvci0tanMtJHt0aGlzLmlkfVwiPlxyXG4gICAgICAgICAgJHtpbmRpY2F0b3JzfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2xpPlxyXG4gICAgYDtcclxuICB9XHJcblxyXG4gIGdldCB2YWx1ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl92YWx1ZTtcclxuICB9XHJcbiAgc2V0IHZhbHVlKGtleSkge1xyXG4gICAgdGhpcy5fdmFsdWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xyXG4gIH1cclxuICBnZXQgZGF0ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9kYXRlO1xyXG4gIH1cclxuICBzZXQgZGF0ZShkYXRlKSB7XHJcbiAgICB0aGlzLl9kYXRlID0gZ2V0T2Zmc2V0ZWREYXRlKGRhdGUpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwxMCkuc3BsaXQoJy0nKS5yZXZlcnNlKCkuam9pbignICcpO1xyXG4gIH1cclxuICBnZXQgaWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgfVxyXG4gIHNldCBpZChkYXRlKSB7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGUucmVwbGFjZSgvXFxzL2csJycpO1xyXG4gIH1cclxuICBnZXQgZGF5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2RheTtcclxuICB9XHJcbiAgc2V0IGRheShkYXRlKSB7XHJcbiAgICBjb25zdCBkYXlJbmRleCA9IGRhdGUuZ2V0RGF5KCk7XHJcbiAgICB0aGlzLl9kYXkgPSB3ZWVrRGF5W2RheUluZGV4XTtcclxuICB9XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIEZVTkNUSU9OUyBcclxuXHJcbi8vIEYwIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBHRVQgT0ZGU0VURUQgREFURSBcclxuXHJcbmNvbnN0IGdldE9mZnNldGVkRGF0ZSA9IChvYmopID0+IHtcclxuICBjb25zdCB0aW1lWm9uZU9mZnNldCA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lem9uZU9mZnNldCgpICogNjAwMDA7XHJcbiAgcmV0dXJuIChuZXcgRGF0ZShvYmogLSB0aW1lWm9uZU9mZnNldCkpO1xyXG59XHJcbi8vIEYwIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBDUkVBVEUgSFlEUkFQUCBEQVRFIEtFWSBcclxuXHJcbmNvbnN0IHNldERhdGVLZXkgPSAob2JqKSA9PiB7XHJcblxyXG4gIGNvbnN0IHRpbWVab25lT2Zmc2V0ID0gKG5ldyBEYXRlKCkpLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMDtcclxuICBsZXQgZGF0ZU9iaiA9IG9iaiB8fCBuZXcgRGF0ZSgpO1xyXG4gIGRhdGVPYmogPSAobmV3IERhdGUoZGF0ZU9iaiAtIHRpbWVab25lT2Zmc2V0KSk7XHJcblxyXG4gIGNvbnN0IHByZWZpeCA9ICdoeWRyQXBwLSc7XHJcbiAgY29uc3QgZGF0ZVN0ciA9IGRhdGVPYmoudG9JU09TdHJpbmcoKS5zbGljZSgwLDEwKTtcclxuICByZXR1cm4gcHJlZml4LmNvbmNhdChkYXRlU3RyKTtcclxufVxyXG4vLyBGMCAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBDUkVBVEUgQVJSQVkgT0YgSFlEUkFQUCBMT0NBTCBTVE9SQUdFIEtFWVMgXHJcblxyXG5jb25zdCBnZXRIeWRyYXBwS2V5cyA9ICgpID0+IHtcclxuICBjb25zdCByZWdleCA9IC9oeWRyQXBwLS87XHJcbiAgcmV0dXJuIE9iamVjdFxyXG4gIC5rZXlzKGxvY2FsU3RvcmFnZSlcclxuICAuZmlsdGVyKGtleSA9PiByZWdleC50ZXN0KGtleSkpXHJcbiAgLnNvcnQoKVxyXG4gIC5yZXZlcnNlKCk7XHJcbn1cclxuLy8gRjAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIENSRUFURSBLRVkgVkFMVUUgUEFJUiBJTiBMT0NBTCBTVE9SQUdFIFxyXG5cclxuY29uc3Qgc2V0TmV3S2V5VmFsdWUgPSAoa2V5LCB2YWx1ZSkgPT4ge1xyXG4gIGlmICggIWxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkgKSB7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcclxuICB9O1xyXG59XHJcbi8vIEYwIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gTE9PUEVEIFJBTkdFIE9GIFZBTFVFUyBcclxuXHJcbmNvbnN0IHJhbmdlID0gKG1heCwgbnVtLCBhY3Rpb24pID0+IHtcclxuICBhY3Rpb24gPT09ICdpbmNyZWFzZScgPyBudW0gPj0gbWF4ID8gbnVtID0gMCA6IG51bSsrIDogZmFsc2U7XHJcbiAgYWN0aW9uID09PSAnZGVjcmVhc2UnID8gbnVtIDw9IDAgPyBudW0gPSBtYXggOiBudW0tLSA6IGZhbHNlO1xyXG4gIHJldHVybiBudW07XHJcbn1cclxuLy8gRjAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIExJTUlURUQgUkFOR0UgT0YgVkFMVUVTIFxyXG5cclxuY29uc3QgbGltaXQgPSAobWF4LCBudW0sIGFjdGlvbikgPT4ge1xyXG4gIGFjdGlvbiA9PT0gJ2luY3JlYXNlJyA/IG51bSA+PSBtYXggPyBmYWxzZSA6IG51bSsrIDogZmFsc2U7XHJcbiAgYWN0aW9uID09PSAnZGVjcmVhc2UnID8gbnVtIDw9IDAgPyBmYWxzZSA6IG51bS0tIDogZmFsc2U7XHJcbiAgcmV0dXJuIG51bTtcclxufVxyXG4vLyBGMCAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBTRVQgQ1VSUkVOVExZIERJU1BMQVlFRCBBUkNISVZFIFdFRUsnUyBIRUlHSFQgXHJcblxyXG5jb25zdCBzZXRDdXJyZW50V2Vla0hlaWdodCA9ICgpID0+IHtcclxuICBcclxuICBjb25zdCBjdXJyZW50V2VlayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy53ZWVrLS1qcycpW2N1cnJlbnRXZWVrSW5kZXhdO1xyXG4gIGNvbnN0IGNoaWxkcmVuQXJyYXkgPSBbLi4uY3VycmVudFdlZWsuY2hpbGRyZW5dO1xyXG4gIGNvbnN0IGNoaWxkcmVuSGVpZ2h0ID0gY2hpbGRyZW5BcnJheS5yZWR1Y2UoKGEsYikgPT4gYSArIGIuY2xpZW50SGVpZ2h0LCAwKTtcclxuICBjb25zdCBvZmZzZXRIZWlnaHQgPSA0MDtcclxuICBjb25zdCBmaW5hbEhlaWdodCA9IGNoaWxkcmVuSGVpZ2h0ICsgb2Zmc2V0SGVpZ2h0O1xyXG5cclxuICBhcmNoaXZlV2Vla3Muc3R5bGUuaGVpZ2h0ID0gYCR7ZmluYWxIZWlnaHR9cHhgO1xyXG59XHJcbi8vIEYwIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBTRVQgSU5ESUNBVE9SUyBcclxuXHJcbmNvbnN0IHNldEluZGljYXRvcnMgPSAoaWQsIHZhbHVlKSA9PiB7XHJcblxyXG4gIHZhbHVlID4gNyA/IHZhbHVlID0gNyA6IGZhbHNlO1xyXG5cclxuICBjb25zdCBpbmRpY2F0b3JzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmluZGljYXRvci0tanMtJHtpZH1gKS5jaGlsZHJlbjtcclxuICBjb25zdCBpbmRpY2F0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuaW5kaWNhdG9yLS1qcy0ke2lkfSAuaW5kaWNhdG9yX19zdmctLWpzLSR7dmFsdWV9YCk7XHJcbiAgXHJcbiAgZm9yIChjb25zdCBpbmRpY2F0b3Igb2YgaW5kaWNhdG9ycykge1xyXG4gICAgaW5kaWNhdG9yLmNsYXNzTGlzdC5jb250YWlucygnaW5kaWNhdG9yX19zdmctLXZpc2libGUnKVxyXG4gICAgPyBpbmRpY2F0b3IuY2xhc3NMaXN0LnJlbW92ZSgnaW5kaWNhdG9yX19zdmctLXZpc2libGUnKVxyXG4gICAgOiBmYWxzZTtcclxuICB9XHJcbiAgaW5kaWNhdG9yLmNsYXNzTGlzdC5hZGQoJ2luZGljYXRvcl9fc3ZnLS12aXNpYmxlJyk7XHJcbn1cclxuLy8gRjAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIENSRUFURSBBREQgRU5UUlkgQlVUVE9OIFxyXG5cclxuY29uc3QgY3JlYXRlQWRkRW50cnlCdXR0b24gPSAoKSA9PiB7XHJcbiAgY29uc3QgYWRkRW50cnlCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gIGFkZEVudHJ5QnV0dG9uLmNsYXNzTmFtZSA9ICdlbnRyeSBlbnRyeV9fYWRkJztcclxuICBhZGRFbnRyeUJ1dHRvbi5pbm5lckhUTUwgPSBgXHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGVudHJ5X19idXR0b24gZW50cnlfX2J1dHRvbi0tYWRkIGVudHJ5X19idXR0b24tLWpzLWFkZFwiPlxyXG4gICAgICBBZGQgcHJldmlvdXMgZGF5Li5cclxuICAgIDwvYnV0dG9uPlxyXG4gIGA7XHJcbiAgYWRkRW50cnlCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbnRlck5ld0VudHJ5VmFsdWUpO1xyXG5cclxuICByZXR1cm4gYWRkRW50cnlCdXR0b247XHJcbn1cclxuLy8gRjAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gQ1JFQVRFICdSRU1PVkUgSVRFTScgQlVUVE9OIFxyXG5cclxuY29uc3QgY3JlYXRlUmVtb3ZlRW50cnlCdXR0b24gPSAoKSA9PiB7XHJcblxyXG4gIGNvbnN0IHJlbW92ZUVudHJ5QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgcmVtb3ZlRW50cnlCdXR0b24uY2xhc3NOYW1lID0gJ2J1dHRvbiBlbnRyeV9fcmVtb3ZlJztcclxuICByZW1vdmVFbnRyeUJ1dHRvbi5pbm5lckhUTUwgPSBgXHJcbiAgICA8c3ZnIGNsYXNzPVwiZW50cnlfX3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiPlxyXG4gICAgICA8dXNlIGhyZWY9XCJhc3NldHMvc3ZnL2ljb25zLnN2ZyNyZW1vdmUtaWNvblwiPjwvdXNlPlxyXG4gICAgPC9zdmc+XHJcbiAgYFxyXG4gIHJlbW92ZUVudHJ5QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmVtb3ZlTGFzdEVudHJ5KTtcclxuXHJcbiAgcmV0dXJuIHJlbW92ZUVudHJ5QnV0dG9uO1xyXG59XHJcbi8vIEYyIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBTRVQgTE9DQUwgU1RPUkFHRSBcclxuXHJcbmNvbnN0IGhhbmRsZURhdGEgPSAoKSA9PiB7XHJcblxyXG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gIGxldCBkYXRlS2V5ID0gc2V0RGF0ZUtleShkYXRlKTtcclxuICBzZXROZXdLZXlWYWx1ZShkYXRlS2V5LCAwKTtcclxuICBsZXQgaHlkcmFwcEtleXMgPSBnZXRIeWRyYXBwS2V5cygpO1xyXG4gIGNvbnN0IG9sZGVzdEtleSA9IGh5ZHJhcHBLZXlzW2h5ZHJhcHBLZXlzLmxlbmd0aCAtIDFdO1xyXG4gIFxyXG4gIC8vIGNyZWF0ZSBvYmplY3QgZm9yIGVhY2gga2V5XHJcbiAgY29uc3QgY3JlYXRlRW50cnlPYmplY3QgPSAoZGF0ZSkgPT4ge1xyXG4gICAgY29uc3QgbmV3RW50cnkgPSBuZXcgRW50cnkoZGF0ZSk7XHJcbiAgICBoeWRyYXBwQXJyYXkucHVzaChuZXdFbnRyeSk7XHJcbiAgfVxyXG4gIC8vIGZpcnN0IG9iamVjdCBvZiBhcnJheVxyXG4gIGNyZWF0ZUVudHJ5T2JqZWN0KGRhdGUpO1xyXG5cclxuICAvLyBhdXRvY29tcGxldGUgdGhlIHJlc3Qgb2Yga2V5cyBpZiBuZWVkZWRcclxuICB3aGlsZSAoZGF0ZUtleSAhPT0gb2xkZXN0S2V5KSB7XHJcbiAgICBkYXRlS2V5ID0gc2V0RGF0ZUtleShkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSAxKSk7XHJcbiAgICBsYXN0RW50cnlEYXRlLnNldERhdGUobGFzdEVudHJ5RGF0ZS5nZXREYXRlKCkgLSAxKTtcclxuICAgIHNldE5ld0tleVZhbHVlKGRhdGVLZXksIDApO1xyXG4gICAgY3JlYXRlRW50cnlPYmplY3QoZGF0ZSk7XHJcbiAgfVxyXG4gIC8vY291bnRlci5pbm5lckhUTUwgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShkYXRlS2V5KTtcclxuICB1cGRhdGVDb3VudGVyKCdkaXNwbGF5VmFsdWUnKTtcclxufVxyXG4vLyBGMSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gVVBEQVRFIENPVU5URVIgXHJcblxyXG5jb25zdCB1cGRhdGVDb3VudGVyID0gKGUpID0+IHtcclxuICBjb25zdCBzZWxmID0gZS50YXJnZXQgfHwgZTtcclxuICBjb25zdCBrZXkgPSBzZXREYXRlS2V5KCk7XHJcbiAgbGV0IHZhbHVlID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSk7XHJcbiAgY29uc3QgZmlyc3RBcmNoaXZlRW50cnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZW50cnlfX3ZhbHVlLS1qcycpO1xyXG5cclxuICBzd2l0Y2ggKHNlbGYpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICEgUkVGQUNUT1JcclxuICAgIGNhc2UgJ2Rpc3BsYXlWYWx1ZSc6XHJcbiAgICAgIGNvdW50ZXIuaW5uZXJIVE1MID0gdmFsdWU7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgXHJcbiAgICBjYXNlIGFkZEdsYXNzOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAhIFJFRkFDVE9SXHJcbiAgICAgIHZhbHVlIDwgY291bnRlck1heFZhbHVlID8gdmFsdWUrKyA6IHZhbHVlID0gY291bnRlck1heFZhbHVlO1xyXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcclxuICAgICAgaHlkcmFwcEFycmF5WzBdLnZhbHVlID0ga2V5O1xyXG4gICAgICBjb3VudGVyLmlubmVySFRNTCA9IHZhbHVlO1xyXG4gICAgICBmaXJzdEFyY2hpdmVFbnRyeS50ZXh0Q29udGVudCA9IGh5ZHJhcHBBcnJheVswXS52YWx1ZTtcclxuICAgICAgYnJlYWs7XHJcblxyXG4gICAgY2FzZSByZW1vdmVHbGFzczogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gISBSRUZBQ1RPUlxyXG4gICAgICB2YWx1ZSA+IDAgPyB2YWx1ZS0tIDogdmFsdWUgPSAwO1xyXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcclxuICAgICAgaHlkcmFwcEFycmF5WzBdLnZhbHVlID0ga2V5O1xyXG4gICAgICBjb3VudGVyLmlubmVySFRNTCA9IHZhbHVlO1xyXG4gICAgICBmaXJzdEFyY2hpdmVFbnRyeS50ZXh0Q29udGVudCA9IGh5ZHJhcHBBcnJheVswXS52YWx1ZTtcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG59XHJcbi8vIEYyIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gQUREIEFSQ0hJVkUgTk9ERSBcclxuXHJcbmNvbnN0IGFkZEFyY2hpdmVOb2RlID0gKGluZGV4LCBvcHRpb24pID0+IHtcclxuXHJcbiAgY29uc3Qge3ZhbHVlLCBpZCwgZGF5LCBkYXlIdG1sLCB3ZWVrSHRtbH0gPSBoeWRyYXBwQXJyYXlbaW5kZXhdO1xyXG4gIFxyXG4gIC8vIGFkZCBuZXcgd2Vla1xyXG4gIGlmICgoKGRheSA9PT0gJ3N1bmRheScgfHwgaW5kZXggPT09IDApKSAmJiBvcHRpb24gIT09ICdhZGQnKSB7XHJcblxyXG4gICAgYXJjaGl2ZVdlZWtzLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgd2Vla0h0bWwpOyAgICAgICAgICAgICAgICAvLyAhIFRPIFJFRkFDVE9SXHJcbiAgICBjb25zdCB3ZWVrSGVhZGVyID0gYXJjaGl2ZVdlZWtzLmxhc3RFbGVtZW50Q2hpbGQuZmlyc3RFbGVtZW50Q2hpbGQ7XHJcbiAgICB3ZWVrSGVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2xpZGVXZWVrKTtcclxuICB9XHJcbiAgLy8gYWRkIG5leHQgZGF5IGVudHJ5XHJcbiAgbGV0IGxhc3RXZWVrTGlzdCA9IGFyY2hpdmVXZWVrcy5sYXN0RWxlbWVudENoaWxkLmxhc3RFbGVtZW50Q2hpbGQ7XHJcbiAgbGFzdFdlZWtMaXN0Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgZGF5SHRtbCk7XHJcbiAgc2V0SW5kaWNhdG9ycyhpZCwgdmFsdWUpO1xyXG5cclxuICAvLyBhZGQgJ2FkZCBlbnRyeSBidXR0b24gYXQgdGhlIGVuZFxyXG4gIGlmIChpbmRleCA9PT0gaHlkcmFwcEFycmF5Lmxlbmd0aCAtIDEpIHtcclxuICAgIGlmIChkYXkgPT09ICdtb25kYXknKSB7XHJcbiAgICAgIGFyY2hpdmVXZWVrcy5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIiwgd2Vla0h0bWwpOyAgICAgICAgICAgICAgLy8gISBUTyBSRUZBQ1RPUlxyXG4gICAgICBjb25zdCB3ZWVrSGVhZGVyID0gYXJjaGl2ZVdlZWtzLmxhc3RFbGVtZW50Q2hpbGQuZmlyc3RFbGVtZW50Q2hpbGQ7XHJcbiAgICAgIHdlZWtIZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzbGlkZVdlZWspO1xyXG4gICAgfTtcclxuXHJcbiAgICBsYXN0V2Vla0xpc3QgPSBhcmNoaXZlV2Vla3MubGFzdEVsZW1lbnRDaGlsZC5sYXN0RWxlbWVudENoaWxkO1xyXG4gICAgbGFzdFdlZWtMaXN0LmFwcGVuZENoaWxkKGFkZEVudHJ5QnV0dG9uKTtcclxuICB9XHJcbiAgdXBkYXRlV2Vla0hlYWRpbmcoKTtcclxuXHJcbiAgLy8gYWRkIGV2ZW50IGxpc3RlbmVycyB0byBhbGwgZWRpdCBidXR0b25zXHJcbiAgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lZGl0aW9uX19idXR0b24tLWpzLWVkaXQnKVtpbmRleF07XHJcbiAgZWRpdEJ1dHRvbi5pbmRleCA9IGluZGV4O1xyXG4gIGVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVJdGVtRWRpdCk7XHJcbn1cclxuLy8gRjIgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIFNFVCBBUkNISVZFIFxyXG5cclxuY29uc3Qgc2V0QXJjaGl2ZURPTSA9ICgpID0+IHtcclxuICBcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGh5ZHJhcHBBcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgYWRkQXJjaGl2ZU5vZGUoaSk7XHJcbiAgfVxyXG4gIC8vIHNldCB0aGUgbmV3ZXN0IHdlZWsgYXMgdmlzaWJsZVxyXG4gIGNvbnN0IHdlZWtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndlZWstLWpzJyk7XHJcbiAgd2Vla3NbY3VycmVudFdlZWtJbmRleF0uY2xhc3NMaXN0LmFkZCgnd2Vlay0tdmlzaWJsZScpO1xyXG4gIC8vIHNldCAncmVtb3ZlIGVudHJ5JyBidXR0b24gb24gdGhlIGxhc3QgZW50cnlcclxuICBoYW5kbGVBcmNoaXZlTGFzdEVudHJ5KCk7XHJcblxyXG4gIC8vIGdlbmVyYXRlIGluZGljYXRvcnMgZm9yIG5ldyBlbnRyeSBtb2RlXHJcbiAgY29uc3QgaW5kaWNhdG9yc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbmRpY2F0b3ItLWpzLW5ldycpO1xyXG4gIGluZGljYXRvcnNDb250YWluZXIuaW5uZXJIVE1MID0gaW5kaWNhdG9ycztcclxuICBzZXRJbmRpY2F0b3JzKCduZXcnLCAwKTtcclxufVxyXG4vLyBGMiAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIFNFVCBXRUVLIEhFQURJTkcgXHJcblxyXG5jb25zdCB1cGRhdGVXZWVrSGVhZGluZyA9ICgpID0+IHtcclxuXHJcbiAgY29uc3Qgd2Vla0xpc3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndlZWtfX2xpc3QtLWpzJyk7XHJcbiAgY29uc3Qgd2Vla0hlYWRpbmdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndlZWtfX2hlYWRpbmctLWpzJyk7XHJcblxyXG4gIC8vIEYwIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gR0VUIERBVEUgXHJcbiAgY29uc3QgZ2V0RGF0ZSA9IChlbGVtZW50KSA9PiB7XHJcblxyXG4gICAgaWYgKGVsZW1lbnQpIHtcclxuICAgICAgY29uc3QgZmlsdGVyZWQgPSBlbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgnICcpLmZpbHRlcihhID0+IC9oeWRyQXBwLy50ZXN0KGEpKTtcclxuICAgICAgcmV0dXJuIGZpbHRlcmVkLnRvU3RyaW5nKCkuc2xpY2UoMTApLnNwbGl0KCctJykucmV2ZXJzZSgpLmpvaW4oJy4nKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcbiAgLy8gRjAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gU0VUIEJVVFRPTlMgVklTSUJJTElUWSBcclxuICBjb25zdCBzZXRCdXR0b25zVmlzaWJsaXR5ID0gKGluZGV4LCBvcHRpb24pID0+IHtcclxuICAgIGNvbnN0IHByZXZXZWVrQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndlZWtfX2J1dHRvbi0tanMtcHJldicpW2luZGV4XTtcclxuICAgIGNvbnN0IG5leHRXZWVrQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndlZWtfX2J1dHRvbi0tanMtbmV4dCcpW2luZGV4XTtcclxuXHJcbiAgICBzd2l0Y2ggKGluZGV4KSB7XHJcblxyXG4gICAgICBjYXNlIDA6XHJcbiAgICAgICAgcHJldldlZWtCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnd2Vla19fYnV0dG9uLS12aXNpYmxlJyk7XHJcbiAgICAgICAgb3B0aW9uID09PSAnb25lV2VlaydcclxuICAgICAgICA/IG5leHRXZWVrQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ3dlZWtfX2J1dHRvbi0tdmlzaWJsZScpXHJcbiAgICAgICAgOiBuZXh0V2Vla0J1dHRvbi5jbGFzc0xpc3QuYWRkKCd3ZWVrX19idXR0b24tLXZpc2libGUnKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgXHJcbiAgICAgIGNhc2Ugd2Vla0hlYWRpbmdzLmxlbmd0aCAtIDE6XHJcbiAgICAgICAgcHJldldlZWtCdXR0b24uY2xhc3NMaXN0LmFkZCgnd2Vla19fYnV0dG9uLS12aXNpYmxlJyk7XHJcbiAgICAgICAgbmV4dFdlZWtCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnd2Vla19fYnV0dG9uLS12aXNpYmxlJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHByZXZXZWVrQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3dlZWtfX2J1dHRvbi0tdmlzaWJsZScpO1xyXG4gICAgICAgIG5leHRXZWVrQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3dlZWtfX2J1dHRvbi0tdmlzaWJsZScpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IHdlZWtMaXN0cy5sZW5ndGg7IGkrKykge1xyXG5cclxuICAgIGNvbnN0IGVudHJpZXMgPSB3ZWVrTGlzdHNbaV0ucXVlcnlTZWxlY3RvckFsbCgnLmVudHJ5LS1qcycpO1xyXG4gICAgY29uc3Qgc3RhcnREYXRlID0gZ2V0RGF0ZShlbnRyaWVzW2VudHJpZXMubGVuZ3RoIC0gMV0pO1xyXG4gICAgY29uc3QgZW5kRGF0ZSA9IGdldERhdGUoZW50cmllc1swXSk7XHJcbiAgICBjb25zdCBoZWFkaW5nID0gd2Vla0hlYWRpbmdzW2ldO1xyXG5cclxuICAgIGhlYWRpbmcudGV4dENvbnRlbnQgPSBgJHtzdGFydERhdGVcclxuICAgID8gKHN0YXJ0RGF0ZSA9PT0gZW5kRGF0ZSA/IHN0YXJ0RGF0ZSA6IGAke3N0YXJ0RGF0ZS5zbGljZSgwLDUpfSAtICR7ZW5kRGF0ZX1gKVxyXG4gICAgOiBgTmV3IFdlZWtgfWA7XHJcblxyXG4gICAgd2Vla0xpc3RzLmxlbmd0aCA+IDEgPyBzZXRCdXR0b25zVmlzaWJsaXR5KGkpIDogc2V0QnV0dG9uc1Zpc2libGl0eShpLCAnb25lV2VlaycpO1xyXG4gIH1cclxufVxyXG4vLyBGMSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBUT0dHTEUgTU9CSUxFIE1FTlUgXHJcblxyXG5jb25zdCB0b2dnbGVNb2JpbGVNZW51ID0gKGUpID0+IHtcclxuICBjb25zdCBzZWxmID0gZS50YXJnZXQgfHwgZTtcclxuXHJcbiAgaWYgKHNlbGYgPT09IGJ1cmdlckJ1dHRvbikge1xyXG5cclxuICAgIHNlbGYuY2xhc3NMaXN0LnRvZ2dsZSgnYnVyZ2VyLWJ1dHRvbi0tYWN0aXZlJyk7XHJcbiAgICBtb2JpbGVNZW51LmNsYXNzTGlzdC50b2dnbGUoJ21vYmlsZS1tZW51LS12aXNpYmxlJyk7XHJcbiAgfVxyXG59XHJcbi8vIEYxIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBBTklNQVRFIFdFRUsgRU5UUklFUyBcclxuXHJcbmNvbnN0IGVudHJpZXNGYWRlSW4gPSAoKSA9PiB7XHJcbiAgY29uc3QgY3VycmVudFdlZWtMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndlZWtfX2xpc3QtLWpzJylbY3VycmVudFdlZWtJbmRleF07XHJcbiAgbGV0IGRlbGF5ID0gMC4xO1xyXG5cclxuICBbLi4uY3VycmVudFdlZWtMaXN0LmNoaWxkcmVuXS5mb3JFYWNoKGVsZW0gPT4ge1xyXG4gICAgZWxlbS5jbGFzc0xpc3QuYWRkKCdlbnRyeS0tdmlzaWJsZScpO1xyXG4gICAgZWxlbS5zdHlsZS50cmFuc2l0aW9uRGVsYXkgPSBgJHtkZWxheX1zYDtcclxuICAgIGRlbGF5ICs9IDAuMTtcclxuICB9KTtcclxufVxyXG4vLyBGMSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gVE9HR0xFIEFSQ0hJVkUgXHJcblxyXG5jb25zdCB0b2dnbGVBcmNoaXZlID0gKGUpID0+IHsgICAgICAgICAgICAgICAgICAgICAgLy8gISB0byBEUlkgIVxyXG4gIGNvbnN0IHNlbGYgPSBlLnRhcmdldDtcclxuICBjb25zdCBzdmdJY29ucyA9IHNlbGYubGFzdEVsZW1lbnRDaGlsZDtcclxuICBjb25zdCBzZWN0aW9uID0gc2VsZi5uZXh0RWxlbWVudFNpYmxpbmc7XHJcblxyXG4gIHN3aXRjaCAoc2VsZikge1xyXG4gICAgY2FzZSBtb2JpbGVNZW51QXJjaGl2ZVNlY3Rpb246XHJcbiAgICAgIFxyXG4gICAgICBzdmdJY29ucy5jbGFzc0xpc3QudG9nZ2xlKCdtb2JpbGUtbWVudV9fc3ZnLS1hY3RpdmUnKTtcclxuICAgICAgaWYgKHN2Z0ljb25zLmNsYXNzTGlzdC5jb250YWlucygnbW9iaWxlLW1lbnVfX3N2Zy0tYWN0aXZlJykpIHtcclxuXHJcbiAgICAgICAgc2V0Q3VycmVudFdlZWtIZWlnaHQoKTtcclxuICAgICAgICBlbnRyaWVzRmFkZUluKCk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlbnRlck5ld0VudHJ5VmFsdWUpO1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgcmVtb3ZlTGFzdEVudHJ5KTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHNsaWRlV2Vlayk7XHJcblxyXG4gICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICBzZWN0aW9uLnN0eWxlLmhlaWdodCA9IDA7XHJcbiAgICAgICAgZW50cmllc0ZhZGVJbigpO1xyXG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZW50ZXJOZXdFbnRyeVZhbHVlKTtcclxuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHJlbW92ZUxhc3RFbnRyeSk7XHJcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBzbGlkZVdlZWspO1xyXG5cclxuICAgICAgfVxyXG4gICAgICBicmVhaztcclxuICAgIFxyXG4gICAgY2FzZSBtb2JpbGVNZW51U3RhdHNTZWN0aW9uOlxyXG4gICAgICBzdmdJY29ucy5jbGFzc0xpc3QudG9nZ2xlKCdtb2JpbGUtbWVudV9fc3ZnLS1hY3RpdmUnKTtcclxuICAgICAgc2VjdGlvbi5jbGFzc0xpc3QudG9nZ2xlKCdzdGF0c19fY29udGFpbmVyLS1hY3RpdmUnKTtcclxuICAgICAgYnJlYWs7XHJcblxyXG4gICAgY2FzZSBtb2JpbGVNZW51U2V0dGluZ3NTZWN0aW9uOlxyXG4gICAgICBzdmdJY29ucy5jbGFzc0xpc3QudG9nZ2xlKCdtb2JpbGUtbWVudV9fc3ZnLS1hY3RpdmUnKTtcclxuICAgICAgc2VjdGlvbi5jbGFzc0xpc3QudG9nZ2xlKCdzZXR0aW5nc19fY29udGFpbmVyLS1hY3RpdmUnKTtcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG59XHJcbi8vIEYyIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gU0xJREUgV0VFSyBcclxuXHJcbmNvbnN0IHNsaWRlV2VlayA9IChlKSA9PiB7XHJcblxyXG4gIGNvbnN0IHNlbGYgPSBlLmtleUNvZGUgfHwgZS50YXJnZXQ7XHJcbiAgY29uc3QgcHJldldlZWtCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcud2Vla19fYnV0dG9uLS1qcy1wcmV2JylbY3VycmVudFdlZWtJbmRleF07XHJcbiAgY29uc3QgbmV4dFdlZWtCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcud2Vla19fYnV0dG9uLS1qcy1uZXh0JylbY3VycmVudFdlZWtJbmRleF07XHJcbiAgY29uc3Qgd2Vla3NBbW91bnQgPSBhcmNoaXZlV2Vla3MuY2hpbGRyZW4ubGVuZ3RoO1xyXG5cclxuICBjb25zdCBoYW5kbGVTbGlkZSA9IChkaXJlY3Rpb24pID0+IHtcclxuICAgIC8vIGhhbmRsZSBwcmV2aW91cyBzZWN0aW9uXHJcbiAgICBhcmNoaXZlV2Vla3MuY2hpbGRyZW5bY3VycmVudFdlZWtJbmRleF0uY2xhc3NOYW1lID0gYHdlZWsgd2Vlay0tanMgd2Vlay0tc2xpZGUtb3V0LXRvLSR7ZGlyZWN0aW9uID09PSAndG9MZWZ0JyA/IGByaWdodGAgOiBgbGVmdGB9YDtcclxuICAgIGNvbnN0IHByZXZpb3VzV2Vla0luZGV4ID0gY3VycmVudFdlZWtJbmRleDtcclxuICAgIC8vIGNoYW5nZSBpbmRleFxyXG4gICAgY3VycmVudFdlZWtJbmRleCA9IGxpbWl0KGFyY2hpdmVXZWVrcy5jaGlsZHJlbi5sZW5ndGggLSAxLCBjdXJyZW50V2Vla0luZGV4LCBkaXJlY3Rpb24gPT09ICd0b0xlZnQnID8gYGRlY3JlYXNlYCA6IGBpbmNyZWFzZWApO1xyXG4gICAgLy8gaGFuZGxlIG5leHQgc2VjdGlvblxyXG4gICAgaWYgKGN1cnJlbnRXZWVrSW5kZXggIT09IHByZXZpb3VzV2Vla0luZGV4KSB7XHJcbiAgICAgIGFyY2hpdmVXZWVrcy5jaGlsZHJlbltjdXJyZW50V2Vla0luZGV4XS5jbGFzc0xpc3QgPSBgd2VlayB3ZWVrLS1qcyB3ZWVrLS12aXNpYmxlIHdlZWstLXNsaWRlLWluLWZyb20tJHtkaXJlY3Rpb24gPT09ICd0b0xlZnQnID8gYGxlZnRgIDogYHJpZ2h0YH1gO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXJjaGl2ZVdlZWtzLmNoaWxkcmVuW2N1cnJlbnRXZWVrSW5kZXhdLmNsYXNzTGlzdCA9ICd3ZWVrIHdlZWstLWpzIHdlZWstLXZpc2libGUnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaWYgKHdlZWtzQW1vdW50ID4gMSkge1xyXG4gICAgc3dpdGNoIChzZWxmKSB7XHJcbiAgICAgIGNhc2UgMzc6XHJcbiAgICAgIGNhc2UgcHJldldlZWtCdXR0b246XHJcbiAgICAgICAgaGFuZGxlU2xpZGUoJ3RvTGVmdCcpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDM5OlxyXG4gICAgICBjYXNlIG5leHRXZWVrQnV0dG9uOlxyXG4gICAgICAgIGhhbmRsZVNsaWRlKCd0b1JpZ2h0Jyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgICBzZXRDdXJyZW50V2Vla0hlaWdodCgpO1xyXG4gICAgZW50cmllc0ZhZGVJbigpO1xyXG4gIH1cclxufVxyXG4vLyBGMSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gQVJDSElWRSBNT0RBTCA8PCBTSE9XIEFSQ0hJVkUgXHJcblxyXG5jb25zdCBlbnRlck5ld0VudHJ5VmFsdWUgPSAoZSkgPT4ge1xyXG5cclxuICBjb25zdCBzZWxmID0gZS5rZXlDb2RlIHx8IGUudGFyZ2V0IHx8IGU7ICAgICAgICAgICAgICAgIC8vICEgZSBvbmx5IGZvciB0ZXN0c1xyXG4gIGNvbnN0IGFkZEVudHJ5QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVudHJ5X19idXR0b24tLWpzLWFkZCcpO1xyXG5cclxuICBpZiAoc2VsZiA9PT0gMTA3IHx8IHNlbGYgPT09IGFkZEVudHJ5QnV0dG9uKSB7XHJcblxyXG4gICAgbGV0IHZhbHVlID0gMDtcclxuICAgIG5ld0VudHJ5TW9kZS5jbGFzc0xpc3QuYWRkKCduZXctZW50cnktLXZpc2libGUnKTtcclxuICAgIG5ld0VudHJ5VmFsdWUudGV4dENvbnRlbnQgPSB2YWx1ZTtcclxuICBcclxuICAgIGNvbnN0IG1vZGVPZmYgPSAoKSA9PiB7XHJcbiAgICAgIG5ld0VudHJ5TW9kZS5jbGFzc0xpc3QucmVtb3ZlKCduZXctZW50cnktLXZpc2libGUnKTtcclxuICAgICAgbmV3RW50cnlNb2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlVmFsdWUpO1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZVZhbHVlKTtcclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlbnRlck5ld0VudHJ5VmFsdWUpO1xyXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHNsaWRlV2Vlayk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBjb25zdCBoYW5kbGVWYWx1ZSA9IChlKSA9PiB7XHJcbiAgXHJcbiAgICAgIGNvbnN0IHNlbGYgPSBlLmtleUNvZGUgfHwgZS50YXJnZXQ7XHJcbiAgXHJcbiAgICAgIHN3aXRjaCAoc2VsZikge1xyXG4gIFxyXG4gICAgICAgIGNhc2UgMzc6XHJcbiAgICAgICAgY2FzZSBuZXdFbnRyeURlY3JlYXNlOlxyXG4gICAgICAgICAgdmFsdWUgIT09IDAgPyB2YWx1ZS0tIDogZmFsc2U7XHJcbiAgICAgICAgICBuZXdFbnRyeVZhbHVlLnRleHRDb250ZW50ID0gdmFsdWU7XHJcbiAgICAgICAgICBzZXRJbmRpY2F0b3JzKCduZXcnLCB2YWx1ZSk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAzOTpcclxuICAgICAgICBjYXNlIG5ld0VudHJ5SW5jcmVhc2U6XHJcbiAgICAgICAgICB2YWx1ZSAhPT0gY291bnRlck1heFZhbHVlID8gdmFsdWUrKyA6IGZhbHNlO1xyXG4gICAgICAgICAgbmV3RW50cnlWYWx1ZS50ZXh0Q29udGVudCA9IHZhbHVlO1xyXG4gICAgICAgICAgc2V0SW5kaWNhdG9ycygnbmV3JywgdmFsdWUpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgXHJcbiAgICAgICAgY2FzZSAyNzpcclxuICAgICAgICBjYXNlIG5ld0VudHJ5Q2FuY2VsOlxyXG4gICAgICAgICAgbW9kZU9mZigpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgXHJcbiAgICAgICAgY2FzZSAxMzpcclxuICAgICAgICBjYXNlIG5ld0VudHJ5U2F2ZTpcclxuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIGFkZE5ld0VudHJ5KGUsIHZhbHVlKTtcclxuICAgICAgICAgIG1vZGVPZmYoKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBuZXdFbnRyeU1vZGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVWYWx1ZSk7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZVZhbHVlKTtcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZW50ZXJOZXdFbnRyeVZhbHVlKTtcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgc2xpZGVXZWVrKTtcclxuICB9XHJcbn1cclxuLy8gRjEgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBBREQgTkVXIElURU0gPDwgU0hPVyBBUkNISVZFIFxyXG5cclxuY29uc3QgYWRkTmV3RW50cnkgPSAoZSwgdmFsdWUpID0+IHtcclxuICBcclxuICBjb25zdCBzZWxmID0gZS5rZXlDb2RlIHx8IGUudGFyZ2V0O1xyXG5cclxuICBpZiAoc2VsZiA9PT0gMTMgfHwgc2VsZiA9PT0gbmV3RW50cnlTYXZlKSB7XHJcblxyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIGxldCBsYXN0RW50cnlJbmRleCA9IGh5ZHJhcHBBcnJheS5sZW5ndGggLSAxO1xyXG4gICAgbGV0IGxhc3RFbnRyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbnRyeS0tanMnKVtsYXN0RW50cnlJbmRleF07XHJcbiAgICBsYXN0RW50cnkuY2xhc3NMaXN0LnJlbW92ZSgnZW50cnktLWxhc3QnKTtcclxuXHJcbiAgICBsYXN0RW50cnlEYXRlLnNldERhdGUobGFzdEVudHJ5RGF0ZS5nZXREYXRlKCkgLSAxKTtcclxuICAgIGNvbnN0IG5ld0VudHJ5S2V5ID0gc2V0RGF0ZUtleShsYXN0RW50cnlEYXRlKTtcclxuICAgIFxyXG4gICAgLy8gaGFuZGxlIGxvY2FsIHN0b3JhZ2UgYW5kIGFycmF5IG9mIG9iamVjdHNcclxuICAgIHNldE5ld0tleVZhbHVlKG5ld0VudHJ5S2V5LCB2YWx1ZSk7XHJcbiAgICBjb25zdCBuZXdFbnRyeSA9IG5ldyBFbnRyeShsYXN0RW50cnlEYXRlKTtcclxuICAgIG5ld0VudHJ5LnZhbHVlID0gbmV3RW50cnlLZXk7XHJcbiAgICBoeWRyYXBwQXJyYXkucHVzaChuZXdFbnRyeSk7XHJcblxyXG4gICAgLy8gY3JlYXRlIG5ldyBlbnRyeSBub2RlXHJcbiAgICBsYXN0RW50cnlJbmRleCA9IGh5ZHJhcHBBcnJheS5sZW5ndGggLSAxO1xyXG4gICAgYWRkQXJjaGl2ZU5vZGUobGFzdEVudHJ5SW5kZXgsICdhZGQnKTtcclxuICAgIGxhc3RFbnRyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbnRyeS0tanMnKVtsYXN0RW50cnlJbmRleF07XHJcbiAgICBsYXN0RW50cnkuY2xhc3NMaXN0LmFkZCgnZW50cnktLXZpc2libGUnKTtcclxuXHJcbiAgICAvLyBqdW1wIHRvIHRoZSBsYXN0IHdlZWtcclxuICAgIGNvbnN0IHdlZWtzID0gYXJjaGl2ZVdlZWtzLmNoaWxkcmVuO1xyXG4gICAgY29uc3QgY3VycmVudFdlZWsgPSB3ZWVrc1tjdXJyZW50V2Vla0luZGV4XTtcclxuICAgIGNvbnN0IGxhc3RXZWVrSW5kZXggPSB3ZWVrcy5sZW5ndGggLSAxO1xyXG4gICAgY29uc3QgbGFzdFdlZWsgPSB3ZWVrc1tsYXN0V2Vla0luZGV4XTtcclxuICAgIGlmIChjdXJyZW50V2Vla0luZGV4ICE9PSBsYXN0V2Vla0luZGV4KSB7XHJcbiAgICAgIGN1cnJlbnRXZWVrSW5kZXggPSBhcmNoaXZlV2Vla3MuY2hpbGRyZW4ubGVuZ3RoIC0gMTtcclxuICAgICAgY3VycmVudFdlZWsuY2xhc3NOYW1lID0gJ3dlZWsgd2Vlay0tanMgd2Vlay0tc2xpZGUtb3V0LXRvLWxlZnQnO1xyXG4gICAgICBsYXN0V2Vlay5jbGFzc05hbWUgPSAnd2VlayB3ZWVrLS1qcyB3ZWVrLS12aXNpYmxlIHdlZWstLXNsaWRlLWluLWZyb20tcmlnaHQnO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlQXJjaGl2ZUxhc3RFbnRyeSgpO1xyXG4gICAgc2V0Q3VycmVudFdlZWtIZWlnaHQoKTtcclxuICB9XHJcbn1cclxuLy8gRjEgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gQURKVVNUIExBU1QgSVRFTSBPRiBMSVNUIFxyXG5cclxuY29uc3QgaGFuZGxlQXJjaGl2ZUxhc3RFbnRyeSA9ICgpID0+IHtcclxuXHJcbiAgY29uc3QgZW50cmllcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbnRyeS0tanMnKTtcclxuICBjb25zdCBsYXN0RW50cnkgPSBlbnRyaWVzW2VudHJpZXMubGVuZ3RoIC0gMV07XHJcbiAgY29uc3QgbGFzdEVudHJ5VmFsdWVOb2RlID0gbGFzdEVudHJ5LnF1ZXJ5U2VsZWN0b3IoJy5lbnRyeV9fdmFsdWUtLWpzJyk7XHJcblxyXG4gIGlmIChlbnRyaWVzLmxlbmd0aCA+IDEpIHtcclxuICAgIGxhc3RFbnRyeS5pbnNlcnRCZWZvcmUocmVtb3ZlRW50cnlCdXR0b24sIGxhc3RFbnRyeVZhbHVlTm9kZSk7XHJcbiAgICBsYXN0RW50cnkuY2xhc3NMaXN0LmFkZCgnZW50cnktLWxhc3QnKTtcclxuICB9XHJcbn1cclxuLy8gRjEgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIFJFTU9WRSBMQVNUIElURU0gPDwgU0hPVyBBUkNISVZFIFxyXG5cclxuY29uc3QgcmVtb3ZlTGFzdEVudHJ5ID0gKGUpID0+IHtcclxuXHJcbiAgY29uc3Qgc2VsZiA9IGUua2V5Q29kZSB8fCBlLiB0YXJnZXQ7XHJcbiAgY29uc3QgbGFzdEVudHJ5SW5kZXggPSBoeWRyYXBwQXJyYXkubGVuZ3RoIC0gMTtcclxuICBjb25zdCB7ZGF5LCBrZXl9ID0gaHlkcmFwcEFycmF5W2xhc3RFbnRyeUluZGV4XTtcclxuICBjb25zdCBsYXN0RW50cnlOb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmVudHJ5LS1qcycpW2xhc3RFbnRyeUluZGV4XTtcclxuXHJcbiAgaWYgKHNlbGYgPT09IDEwOSB8fCBzZWxmID09PSByZW1vdmVFbnRyeUJ1dHRvbikge1xyXG5cclxuICAgIGlmIChoeWRyYXBwQXJyYXkubGVuZ3RoID4gMSkge1xyXG5cclxuICAgICAgaHlkcmFwcEFycmF5LnBvcCgpO1xyXG4gICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xyXG4gICAgICBsYXN0RW50cnlEYXRlLnNldERhdGUobGFzdEVudHJ5RGF0ZS5nZXREYXRlKCkgKyAxKTtcclxuICAgICAgbGFzdEVudHJ5Tm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGxhc3RFbnRyeU5vZGUpO1xyXG5cclxuICAgICAgLy8gcmVtb3ZpbmcgbGFzdCB3ZWVrIHNlY3Rpb24gYWZ0ZXIgZGVsZXRpbmcgbGFzdCBkYXkgb2YgdGhhdCB3ZWVrXHJcbiAgICAgIGlmIChkYXkgPT09ICdtb25kYXknKSB7XHJcbiAgICAgICAgY29uc3Qgd2Vla1RvUmVtb3ZlID0gYXJjaGl2ZVdlZWtzLmxhc3RFbGVtZW50Q2hpbGQ7XHJcbiAgICAgICAgY29uc3QgaWZWaXNpYmxlID0gd2Vla1RvUmVtb3ZlLmNsYXNzTGlzdC5jb250YWlucygnd2Vlay0tdmlzaWJsZScpO1xyXG4gICAgICAgIGFyY2hpdmVXZWVrcy5yZW1vdmVDaGlsZChhcmNoaXZlV2Vla3MubGFzdEVsZW1lbnRDaGlsZCk7XHJcbiAgICAgICAgY29uc3QgbGFzdFdlZWsgPSBhcmNoaXZlV2Vla3MubGFzdEVsZW1lbnRDaGlsZDtcclxuICAgICAgICBjb25zdCBsYXN0V2Vla0xpc3QgPSBsYXN0V2Vlay5sYXN0RWxlbWVudENoaWxkO1xyXG4gICAgICAgIGlmIChpZlZpc2libGUpIHtcclxuICAgICAgICAgIGxhc3RXZWVrLmNsYXNzTmFtZSA9ICd3ZWVrIHdlZWstLWpzIHdlZWstLXZpc2libGUgd2Vlay0tc2xpZGUtaW4tZnJvbS1sZWZ0JztjdXJyZW50V2Vla0luZGV4LS07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxhc3RXZWVrTGlzdC5hcHBlbmRDaGlsZChhZGRFbnRyeUJ1dHRvbik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIGFkZCByZW1vdmUgYnV0dG9uIG9uIGN1cnJlbnQgbGFzdCBpdGVtXHJcbiAgICAgIGhhbmRsZUFyY2hpdmVMYXN0RW50cnkoKTtcclxuICAgICAgdXBkYXRlV2Vla0hlYWRpbmcoKTtcclxuICAgICAgc2V0Q3VycmVudFdlZWtIZWlnaHQoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLy8gRjIgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBIQU5ETEUgSVRFTSBFRElUIFxyXG5cclxuY29uc3QgaGFuZGxlSXRlbUVkaXQgPSAoZSkgPT4ge1xyXG4gIGNvbnN0IGl0ZW1JbmRleCA9IGUudGFyZ2V0LmluZGV4O1xyXG5cclxuICBjb25zdCBlbnRyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbnRyeS0tanMnKVtpdGVtSW5kZXhdO1xyXG4gIGNvbnN0IGVudHJ5SGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmVudHJ5X19oZWFkZXItLWpzJylbaXRlbUluZGV4XTtcclxuICBjb25zdCBlbnRyeVZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmVudHJ5X192YWx1ZS0tanMnKVtpdGVtSW5kZXhdO1xyXG4gIGNvbnN0IGVkaXRTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmVkaXRpb24tLWpzJylbaXRlbUluZGV4XTtcclxuICBjb25zdCBkZWNyZWFzZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lZGl0aW9uX19idXR0b24tLWpzLWRlY3JlYXNlJylbaXRlbUluZGV4XTtcclxuICBjb25zdCBpbmNyZWFzZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lZGl0aW9uX19idXR0b24tLWpzLWluY3JlYXNlJylbaXRlbUluZGV4XTtcclxuICBjb25zdCBjYW5jZWxCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZWRpdGlvbl9fYnV0dG9uLS1qcy1jYW5jZWwnKVtpdGVtSW5kZXhdO1xyXG4gIGNvbnN0IHNhdmVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZWRpdGlvbl9fYnV0dG9uLS1qcy1zYXZlJylbaXRlbUluZGV4XTtcclxuXHJcbiAgLy8gRjAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIFRPR0dMRSBJVEVNIERJU1BMQVkgPDwgSEFORExFIElURU0gRURJVCBcclxuXHJcbiAgY29uc3QgdG9nZ2xlSXRlbURpc3BsYXkgPSAoKSA9PiB7XHJcblxyXG4gICAgZm9yIChjb25zdCBlZGl0QnV0dG9uIG9mIGVkaXRTZWN0aW9uLmNoaWxkcmVuKSB7XHJcbiAgICAgIGVkaXRCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZSgnZWRpdGlvbl9fYnV0dG9uLS12aXNpYmxlJyk7XHJcbiAgICB9XHJcbiAgICBlZGl0U2VjdGlvbi5jbGFzc0xpc3QudG9nZ2xlKCdlZGl0aW9uLS12aXNpYmxlJyk7XHJcbiAgICBlbnRyeS5jbGFzc0xpc3QudG9nZ2xlKCdlbnRyeS0tZWRpdC1tb2RlJyk7XHJcbiAgICBlbnRyeUhlYWRlci5jbGFzc0xpc3QudG9nZ2xlKCdlbnRyeV9faGVhZGVyLS1lZGl0LW1vZGUnKTtcclxuXHJcbiAgICBpdGVtSW5kZXggPT09IGh5ZHJhcHBBcnJheS5sZW5ndGggLSAxXHJcbiAgICA/IHJlbW92ZUVudHJ5QnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2VudHJ5X19yZW1vdmUtLWhpZGRlbicpXHJcbiAgICA6IGZhbHNlO1xyXG4gIH1cclxuICAvLyBGMSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBFWElUIEVESVQgTU9ERSA8PCBIQU5ETEUgSVRFTSBFRElUIFxyXG5cclxuICBjb25zdCBleGl0RWRpdE1vZGUgPSAoKSA9PiB7XHJcbiAgICBjb25zdCB7dmFsdWUsIGlkfSA9IGh5ZHJhcHBBcnJheVtpdGVtSW5kZXhdO1xyXG4gICAgXHJcbiAgICB0b2dnbGVJdGVtRGlzcGxheSgpO1xyXG4gICAgZW50cnlWYWx1ZS50ZXh0Q29udGVudCA9IHZhbHVlO1xyXG4gICAgc2V0SW5kaWNhdG9ycyhpZCwgdmFsdWUpO1xyXG5cclxuICAgIGFyY2hpdmUucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVFZGl0aW9uKTtcclxuICAgIGFyY2hpdmUucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZUVkaXRpb24pO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBzbGlkZVdlZWspO1xyXG4gIH1cclxuICAvLyBGMSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBIQU5ETEUgRURJVElPTiA8PCBIQU5ETEUgSVRFTSBFRElUIFxyXG5cclxuICBjb25zdCBoYW5kbGVFZGl0aW9uID0gKGUpID0+IHtcclxuICAgIGNvbnN0IHNlbGYgPSBlLmtleUNvZGUgfHwgZS50YXJnZXQ7XHJcbiAgICBsZXQgZGF5VmFsdWUgPSBwYXJzZUludChlbnRyeVZhbHVlLnRleHRDb250ZW50KTtcclxuICAgIGNvbnN0IGdsYXNzQ291bnRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nbGFzc19fY291bnRlci0tanMnKTtcclxuXHJcbiAgICBjb25zdCB7a2V5LCBpZH0gPSBoeWRyYXBwQXJyYXlbaXRlbUluZGV4XTtcclxuXHJcbiAgICBzd2l0Y2ggKHNlbGYpIHtcclxuXHJcbiAgICAgIGNhc2UgNDA6XHJcbiAgICAgIGNhc2UgZGVjcmVhc2VCdXR0b246XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGRheVZhbHVlID4gMCA/IGRheVZhbHVlLS0gOiBmYWxzZTtcclxuICAgICAgICBlbnRyeVZhbHVlLnRleHRDb250ZW50ID0gZGF5VmFsdWU7XHJcbiAgICAgICAgc2V0SW5kaWNhdG9ycyhpZCwgZGF5VmFsdWUpO1xyXG4gICAgICBicmVhaztcclxuICAgICAgXHJcbiAgICAgIGNhc2UgMzg6XHJcbiAgICAgIGNhc2UgaW5jcmVhc2VCdXR0b246XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGRheVZhbHVlIDwgY291bnRlck1heFZhbHVlID8gZGF5VmFsdWUrKyA6IGZhbHNlO1xyXG4gICAgICAgIGVudHJ5VmFsdWUudGV4dENvbnRlbnQgPSBkYXlWYWx1ZTtcclxuICAgICAgICBzZXRJbmRpY2F0b3JzKGlkLCBkYXlWYWx1ZSk7XHJcbiAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgY2FzZSAyNzpcclxuICAgICAgY2FzZSBjYW5jZWxCdXR0b246XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGV4aXRFZGl0TW9kZSgpO1xyXG4gICAgICBicmVhaztcclxuXHJcbiAgICAgIGNhc2UgMTM6XHJcbiAgICAgIGNhc2Ugc2F2ZUJ1dHRvbjpcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBkYXlWYWx1ZSk7XHJcbiAgICAgICAgLy8gc2V0dGVyIGZ1bmN0aW9uXHJcbiAgICAgICAgaHlkcmFwcEFycmF5W2l0ZW1JbmRleF0udmFsdWUgPSBrZXk7XHJcbiAgICAgICAgZ2xhc3NDb3VudGVyLnRleHRDb250ZW50ID0gaHlkcmFwcEFycmF5WzBdLnZhbHVlO1xyXG4gICAgICAgIGV4aXRFZGl0TW9kZSgpO1xyXG4gICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gRlVOQ1RJT04gQ0FMTFMgPDwgSEFORExFIElURU0gRURJVCBcclxuXHJcbiAgdG9nZ2xlSXRlbURpc3BsYXkoKTtcclxuICBhcmNoaXZlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRWRpdGlvbik7XHJcbiAgYXJjaGl2ZS5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlRWRpdGlvbik7XHJcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBzbGlkZVdlZWspO1xyXG59XHJcbi8vIEYyIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBFTkQgT0YgSEFORExFIElURU0gRURJVCBcclxuXHJcbi8qXHJcbiMjICAgICAjIyAgICAjIyMgICAgIyMjIyMjIyMgICMjIyMgICAgIyMjICAgICMjIyMjIyMjICAjIyAgICAgICAjIyMjIyMjIyAgIyMjIyMjXHJcbiMjICAgICAjIyAgICMjICMjICAgIyMgICAgICMjICAjIyAgICAjIyAjIyAgICMjICAgICAjIyAjIyAgICAgICAjIyAgICAgICAjIyAgICAjI1xyXG4jIyAgICAgIyMgICMjICAgIyMgICMjICAgICAjIyAgIyMgICAjIyAgICMjICAjIyAgICAgIyMgIyMgICAgICAgIyMgICAgICAgIyNcclxuIyMgICAgICMjICMjICAgICAjIyAjIyMjIyMjIyAgICMjICAjIyAgICAgIyMgIyMjIyMjIyMgICMjICAgICAgICMjIyMjIyAgICAjIyMjIyNcclxuICMjICAgIyMgICMjIyMjIyMjIyAjIyAgICMjICAgICMjICAjIyMjIyMjIyMgIyMgICAgICMjICMjICAgICAgICMjICAgICAgICAgICAgICMjXHJcbiAgIyMgIyMgICAjIyAgICAgIyMgIyMgICAgIyMgICAjIyAgIyMgICAgICMjICMjICAgICAjIyAjIyAgICAgICAjIyAgICAgICAjIyAgICAjI1xyXG4gICAjIyMgICAgIyMgICAgICMjICMjICAgICAjIyAjIyMjICMjICAgICAjIyAjIyMjIyMjIyAgIyMjIyMjIyMgIyMjIyMjIyMgICMjIyMjI1xyXG4qL1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gVkFSSUFCTEVTIFxyXG4vLyBBUFBcclxuY29uc3QgYXBwQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFwcF9fY29udGFpbmVyLS1qcycpO1xyXG5jb25zdCBhZGRHbGFzcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hcHBfX2J1dHRvbi0tanMtYWRkJyk7XHJcbmNvbnN0IHJlbW92ZUdsYXNzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFwcF9fYnV0dG9uLS1qcy1yZW1vdmUnKTtcclxuY29uc3QgY291bnRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nbGFzc19fY291bnRlci0tanMnKTtcclxuY29uc3QgY291bnRlck1heFZhbHVlID0gOTk7XHJcbi8vIE5BVklHQVRJT05cclxuY29uc3QgYnVyZ2VyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1cmdlci1idXR0b24tLWpzJyk7XHJcbmNvbnN0IG1vYmlsZU1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9iaWxlLW1lbnUtLWpzJyk7XHJcbmNvbnN0IG1vYmlsZU1lbnVBcmNoaXZlU2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2JpbGUtbWVudV9fc2VjdGlvbi0tanMtYXJjaGl2ZScpO1xyXG5jb25zdCBtb2JpbGVNZW51U3RhdHNTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vYmlsZS1tZW51X19zZWN0aW9uLS1qcy1zdGF0cycpO1xyXG5jb25zdCBtb2JpbGVNZW51U2V0dGluZ3NTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vYmlsZS1tZW51X19zZWN0aW9uLS1qcy1zZXR0aW5ncycpO1xyXG4vLyBBUkNISVZFXHJcbmNvbnN0IGFyY2hpdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXJjaGl2ZS0tanMnKTtcclxuY29uc3QgYXJjaGl2ZVdlZWtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFyY2hpdmVfX3dlZWtzLS1qcycpO1xyXG5jb25zdCBhcmNoaXZlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdmlnYXRpb25fX2J1dHRvbi0tanMtYXJjaGl2ZScpO1xyXG5jb25zdCBwcmV2V2Vla0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hcmNoaXZlX19idXR0b24tLWpzLXByZXYnKTtcclxuY29uc3QgbmV4dFdlZWtCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXJjaGl2ZV9fYnV0dG9uLS1qcy1uZXh0Jyk7XHJcbmNvbnN0IGFkZEVudHJ5QnV0dG9uID0gY3JlYXRlQWRkRW50cnlCdXR0b24oKTtcclxuY29uc3QgcmVtb3ZlRW50cnlCdXR0b24gPSBjcmVhdGVSZW1vdmVFbnRyeUJ1dHRvbigpO1xyXG5sZXQgY3VycmVudFdlZWtJbmRleCA9IDA7XHJcbi8vIE5FVyBFTlRSWVxyXG5jb25zdCBuZXdFbnRyeU1vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3LWVudHJ5LS1qcycpO1xyXG5jb25zdCBuZXdFbnRyeVZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ldy1lbnRyeV9fdmFsdWUtLWpzJyk7XHJcbmNvbnN0IG5ld0VudHJ5RGVjcmVhc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3LWVudHJ5X19idXR0b24tLWpzLWRlY3JlYXNlJyk7XHJcbmNvbnN0IG5ld0VudHJ5SW5jcmVhc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3LWVudHJ5X19idXR0b24tLWpzLWluY3JlYXNlJyk7XHJcbmNvbnN0IG5ld0VudHJ5Q2FuY2VsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ldy1lbnRyeV9fYnV0dG9uLS1qcy1jYW5jZWwnKTtcclxuY29uc3QgbmV3RW50cnlTYXZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ldy1lbnRyeV9fYnV0dG9uLS1qcy1zYXZlJyk7XHJcbi8vIFNUQVRTXHJcbmNvbnN0IHN0YXRzQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdmlnYXRpb25fX2J1dHRvbi0tanMtc3RhdHMnKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBGVU5DVElPTiBDQUxMUyBcclxuXHJcbmhhbmRsZURhdGEoKTtcclxuc2V0QXJjaGl2ZURPTSgpO1xyXG51cGRhdGVXZWVrSGVhZGluZygpO1xyXG5cclxuLy90b2dnbGVNb2JpbGVNZW51KGJ1cmdlckJ1dHRvbik7ICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gISBGT1IgVEVTVFMgT05MWVxyXG4vL2VudGVyTmV3RW50cnlWYWx1ZSgxMDcpOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICEgRk9SIFRFU1RTIE9OTFlcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIFZBUklBQkxFUyBcclxuXHJcbmxldCBlZGl0QnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lZGl0aW9uX19idXR0b24tLWpzLWVkaXQnKTtcclxubGV0IGVudHJpZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZW50cnktLWpzJyk7XHJcbmNvbnN0IGFkZE5ld0RheUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbnRyeV9fYnV0dG9uLS1qcy1hZGQnKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIEVWRU5UIExJU1RFTkVSUyBcclxuXHJcbmFwcENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHVwZGF0ZUNvdW50ZXIpO1xyXG5idXJnZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVNb2JpbGVNZW51KTtcclxubW9iaWxlTWVudS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRvZ2dsZUFyY2hpdmUpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")}]);