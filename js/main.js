!function(c){var t={};function e(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return c[n].call(l.exports,l,l.exports,e),l.l=!0,l.exports}e.m=c,e.c=t,e.d=function(c,t,n){e.o(c,t)||Object.defineProperty(c,t,{enumerable:!0,get:n})},e.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},e.t=function(c,t){if(1&t&&(c=e(c)),8&t)return c;if(4&t&&"object"==typeof c&&c&&c.__esModule)return c;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:c}),2&t&&"string"!=typeof c)for(var l in c)e.d(n,l,function(t){return c[t]}.bind(null,l));return n},e.n=function(c){var t=c&&c.__esModule?function(){return c.default}:function(){return c};return e.d(t,"a",t),t},e.o=function(c,t){return Object.prototype.hasOwnProperty.call(c,t)},e.p="",e(e.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n//////////////////////////////////////////////////////////////// SERVICE WORKER\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\r\n      // Registration was successful\r\n      //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n    }, function(err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n///////////////////////////////////////////////////////////////////// FUNCTIONS\r\n/////////////////////////////////////////////////////// CREATE HYDRAPP DATE KEY\r\nconst setDateKey = (obj) => {\r\n  const prefix = 'hydrApp-';\r\n  const date = obj.toISOString().slice(0,10);\r\n  return prefix.concat(date);\r\n}\r\n//////////////////////////////////////// CREATE KEY VALUE PAIR IN LOCAL STORAGE\r\nconst setNewKeyValue = (key, value) => {\r\n  if ( !localStorage.getItem(key) ) {\r\n    localStorage.setItem(key, value);\r\n  };\r\n}\r\n//////////////////////////////////// CREATE ARRAY OF HYDRAPP LOCAL STORAGE KEYS\r\nconst getHydrappKeys = () => {\r\n  const regex = /hydrApp-/;\r\n  return Object\r\n  .keys(localStorage)\r\n  .filter(key => regex.test(key))\r\n  .sort()\r\n  .reverse();\r\n}\r\n/////////////////////////////////////////////////////////////////// GET DATE ID\r\nconst getDateID = (date) => {\r\n  return date\r\n    .replace('hydrApp-','')\r\n    .split('-')\r\n    .reverse()\r\n    .join('');\r\n}\r\n///////////////////////////////////////////////////////////// GET OFFSETED DATE\r\nconst getOffsetedDate = () => {\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  return (new Date(Date.now() - timeZoneOffset));\r\n}\r\n/////////////////////////////////////////////////////////////////// SET COUNTER\r\nconst setCounter = () => {\r\n  const offsetedDate = getOffsetedDate();\r\n  let dateKey = setDateKey(offsetedDate);\r\n  console.log(`newest key: ${dateKey}`);\r\n\r\n  setNewKeyValue(dateKey, 0);\r\n\r\n  const hydrappKeys = getHydrappKeys();\r\n  const oldestKey = hydrappKeys[hydrappKeys.length-1];\r\n  console.log(`oldest key: ${oldestKey}`);\r\n\r\n  // autocomplete missing keys in localstorage\r\n  if ( hydrappKeys.length > 1 ) {\r\n    let limit = 0; // for tests to avoid loop error\r\n\r\n    while (setDateKey(offsetedDate) !== oldestKey && limit < 50) {\r\n      offsetedDate.setDate( offsetedDate.getDate() - 1 );\r\n      const prevDateKey = setDateKey(offsetedDate);\r\n      setNewKeyValue(prevDateKey, 0);\r\n      limit++;\r\n    }\r\n  }\r\n  counter.innerHTML = localStorage.getItem(dateKey);\r\n}\r\n/////////////////////////////////////////////////////////////////// SET ARCHIVE\r\nconst setArchive = () => {\r\n  const hydrappKeys = getHydrappKeys();\r\n\r\n  if (hydrappKeys.length === 1) {\r\n    archiveList.innerHTML += `\r\n      <li class=\"archive__item archive__item--empty\">No history yet...</li>\r\n      `;\r\n  } else {\r\n    for (let i = 1; i < hydrappKeys.length; i++) {\r\n      const key = hydrappKeys[i];\r\n      const value = localStorage.getItem(key);\r\n      const date = key\r\n        .replace('hydrApp-','')\r\n        .split('-')\r\n        .reverse()\r\n        .join(' ');\r\n      const dateID = date.replace(/\\s/g,'');\r\n      \r\n      let indicators = \"\";\r\n      for (let i = 0; i < 8; i++) {\r\n        indicators += `\r\n        <svg class=\"indicator__svg indicator__svg--emo-${i+1} indicator__svg--js-${i}\">\r\n          <use href=\"assets/svg/icons.svg#emoticon-${i}\"></use>\r\n        </svg>`\r\n      }\r\n\r\n      archiveList.innerHTML += `\r\n      <li class=\"archive__item archive__item--js ${key}\">\r\n        <p class=\"archive__date\">${date}</p>\r\n        <p class=\"archive__value archive__value--js\">\r\n          ${value}\r\n        </p>\r\n        <div class=\"edition edition--js\">\r\n          <button class=\"button edition__button edition__button--visible edition__button--edit edition__button--js-edit\">\r\n            <svg class=\"edition__svg edition__svg--edit\">\r\n              <use href=\"assets/svg/icons.svg#edit-mode\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--decrease edition__button--js-decrease\">\r\n            <svg class=\"edition__svg edition__svg--decrease\">\r\n              <use href=\"assets/svg/icons.svg#left-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--increase edition__button--js-increase\">\r\n            <svg class=\"edition__svg edition__svg--increase\">\r\n              <use href=\"assets/svg/icons.svg#right-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--cancel edition__button--js-cancel\">\r\n            <svg class=\"edition__svg edition__svg--cancel\">\r\n              <use href=\"assets/svg/icons.svg#back-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--save edition__button--js-save\">\r\n            <svg class=\"edition__svg edition__svg--save\">\r\n              <use href=\"assets/svg/icons.svg#save-icon\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"indicator indicator--js-${dateID}\">\r\n          ${indicators}\r\n        </div>\r\n      </li>`\r\n      setIndicators(dateID, value);\r\n    }\r\n  }\r\n}\r\n//////////////////////////////////////////////////////////////// SET INDICATORS\r\nconst setIndicators = (id, value) => {\r\n\r\n  value > 7 ? value = 7 : false;\r\n\r\n  const indicators = document.querySelector(`.indicator--js-${id}`).children;\r\n  const indicator = document.querySelector(`.indicator--js-${id} .indicator__svg--js-${value}`);\r\n  \r\n  for (const indicator of indicators) {\r\n    indicator.classList.contains('indicator__svg--visible')\r\n    ? indicator.classList.remove('indicator__svg--visible')\r\n    : false\r\n  }\r\n  indicator.classList.add('indicator__svg--visible');\r\n}\r\n//////////////////////////////////////////////////////////////// UPDATE COUNTER\r\nconst updateCounter = (e) => {\r\n  const offsetedDate = getOffsetedDate();\r\n  const key = setDateKey(offsetedDate);\r\n  const value = parseInt(localStorage.getItem(key));\r\n  let newValue;\r\n\r\n  if (e.target === addGlass) {\r\n    value < counterMaxValue ? newValue = value + 1 : newValue = counterMaxValue;\r\n  } else if (e.target === removeGlass) {\r\n    value > 0 ? newValue = value - 1 : newValue = 0;\r\n  }\r\n\r\n  localStorage.setItem(key, newValue);\r\n  counter.innerHTML = newValue;\r\n  \r\n  // updating archive newest entry indicator\r\n  const dateID = offsetedDate\r\n    .toISOString()\r\n    .slice(0,10)\r\n    .split('-')\r\n    .reverse()\r\n    .join('');\r\n}\r\n//////////////////////////////////////////////////////////////// TOGGLE ARCHIVE\r\nconst toggleArchive = () => {\r\n  archive.classList.toggle('archive--visible');\r\n\r\n  loadMoreButton.classList.remove('archive__button--hidden');\r\n  for (const archiveItem of archiveItems) {\r\n    archiveItem.classList.remove('archive__item--visible');\r\n  }\r\n\r\n  ///////////////////////////////////////////////// LOAD MORE << TOGGLE ARCHIVE\r\n  const loadMore = () => {\r\n    \r\n    // const allEqual = itemsHeights.every( elem => elem === itemsHeights[0]);\r\n    // const itemsHeights = itemsArray.map(elem => elem.offsetHeight);\r\n    \r\n    const itemArray = [...archiveItems];\r\n    const archiveListHeight = archiveList.clientHeight;\r\n\r\n    let firstIndexToLoad = itemArray.findIndex(elem => !elem.classList.contains('archive__item--visible'));\r\n    let heights = 0;\r\n    let scrollOffset = archiveList.scrollTop;\r\n    while (true) {\r\n      \r\n      if (firstIndexToLoad < itemArray.length) {\r\n        \r\n        const item = itemArray[firstIndexToLoad];\r\n        item.classList.add('archive__item--visible');\r\n        heights += item.offsetHeight;\r\n        scrollOffset += item.offsetHeight;\r\n        \r\n        if (heights <= archiveListHeight - item.offsetHeight) {\r\n          firstIndexToLoad++;\r\n        } else {\r\n          archiveList.scrollTop = scrollOffset;\r\n          return false;\r\n        }\r\n\r\n      } else {\r\n        archiveList.scrollTop = scrollOffset;\r\n        loadMoreButton.classList.add('archive__button--hidden');\r\n        loadMoreButton.removeEventListener('click', loadMore);\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  //////////////////////////////////////////// FUNCTION CALLS << TOGGLE ARCHIVE\r\n  if (archive.classList.contains('archive--visible')) {\r\n    loadMore();\r\n    loadMoreButton.addEventListener('click', loadMore);\r\n  } else {\r\n    loadMoreButton.removeEventListener('click', loadMore);\r\n  }\r\n  /////////////////////////////////////////// EVENT LISTENERS << TOGGLE ARCHIVE\r\n}\r\n///////////////////////////////////////////////////////// END OF TOGGLE ARCHIVE\r\n///////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////// HANDLE ITEM EDIT\r\nconst handleItemEdit = (e) => {\r\n  const itemIndex = e.target.index;\r\n  const archiveItem = archiveItems[itemIndex];\r\n  const editButton = editButtons[itemIndex];\r\n  const editSection = editSections[itemIndex];\r\n  const decreaseButton = decreaseButtons[itemIndex];\r\n  const increaseButton = increaseButtons[itemIndex];\r\n  const cancelButton = cancelButtons[itemIndex];\r\n  const saveButton = saveButtons[itemIndex];\r\n  const archiveValue = archiveValues[itemIndex];\r\n  const lastValue = archiveValue.textContent;\r\n  const itemClassName = e.target.parentElement.parentElement.className;\r\n\r\n  const hydrAppKey = itemClassName\r\n    .split(' ')\r\n    .filter(key => /hydrApp/.test(key))\r\n    .toString();\r\n  const dateID = getDateID(hydrAppKey);\r\n  ///////////////////////////////////// TOGGLE ITEM DISPLAY << HANDLE ITEM EDIT\r\n  const toggleItemDisplay = () => {\r\n    archive.classList.toggle('archive--on-top');\r\n    archiveItem.classList.toggle('archive__item--on-top');\r\n    pageOverlay.classList.toggle('archive__overlay--visible');\r\n    \r\n    for (const editButton of editSection.children) {\r\n      editButton.classList.toggle('edition__button--visible');\r\n    }\r\n    editSection.classList.toggle('edition--visible');\r\n  }\r\n  ////////////////////////////////////////// EXIT EDIT MODE << HANDLE ITEM EDIT\r\n  const exitEditMode = () => {\r\n    toggleItemDisplay();\r\n    const lastValue = localStorage.getItem(hydrAppKey);\r\n    archiveValue.textContent = lastValue;\r\n    setIndicators(dateID, lastValue);\r\n\r\n    archive.removeEventListener('click', handleEdition);\r\n    archive.removeEventListener('keydown', handleEdition);\r\n  }\r\n  ////////////////////////////////////////// HANDLE EDITION << HANDLE ITEM EDIT\r\n  const handleEdition = (e) => {\r\n    const self = e.keyCode || e.target;\r\n    let value = parseInt(archiveValue.textContent);\r\n\r\n    switch (self) {\r\n\r\n      case 37:\r\n      case decreaseButton:\r\n        e.preventDefault();\r\n        value > 0 ? value-- : false;\r\n        archiveValue.textContent = value;\r\n        setIndicators(dateID, value);\r\n      break;\r\n      \r\n      case 39:\r\n      case increaseButton:\r\n        e.preventDefault();\r\n        value < counterMaxValue ? value++ : false;\r\n        archiveValue.textContent = value;\r\n        setIndicators(dateID, value);\r\n      break;\r\n\r\n      case 27:\r\n      case pageOverlay:\r\n      case cancelButton:\r\n        e.preventDefault();\r\n        exitEditMode();\r\n      break;\r\n\r\n      case 13:\r\n      case saveButton:\r\n        e.preventDefault();\r\n        localStorage.setItem(hydrAppKey, parseInt(archiveValue.textContent));\r\n        exitEditMode();\r\n      break;\r\n    }\r\n  }\r\n  ////////////////////////////////////////// FUNCTION CALLS << HANDLE ITEM EDIT\r\n  toggleItemDisplay();\r\n  archive.addEventListener('click', handleEdition);\r\n  archive.addEventListener('keydown', handleEdition);\r\n} ///////////////////////////////////////////////////// END OF HANDLE ITEM EDIT\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////// VARIABLES\r\nconst addGlass = document.querySelector('.app__button--js-add');\r\nconst removeGlass = document.querySelector('.app__button--js-remove');\r\nconst counter = document.querySelector('.glass__counter--js');\r\nconst archive = document.querySelector('.archive--js');\r\nconst pageOverlay = document.querySelector('.archive__overlay--js');\r\nconst archiveList = document.querySelector('.archive__list--js');\r\nconst archiveButton = document.querySelector('.navigation__button--js-archive');\r\nconst loadMoreButton = document.querySelector('.archive__button--js-load-more');\r\n\r\nconst counterMaxValue = 100;\r\n\r\nconst baseClassname = \"indicator__section indicator__section--js\";\r\nconst lowLevelClassname = `${baseClassname} indicator__section--low`;\r\nconst mediumLevelClassname = `${baseClassname} indicator__section--medium`;\r\nconst highLevelClassname = `${baseClassname} indicator__section--high`;\r\n//////////////////////////////////////////////////////// INITIAL FUNCTION CALLS\r\nsetCounter();\r\nsetArchive();\r\n///////////////////////////////////////////////////////////////////// VARIABLES\r\nconst archiveItems = document.querySelectorAll('.archive__item--js');\r\nconst editButtons = document.querySelectorAll('.edition__button--js-edit');\r\nconst editSections = document.querySelectorAll('.edition--js');\r\nconst decreaseButtons = document.querySelectorAll('.edition__button--js-decrease');\r\nconst increaseButtons = document.querySelectorAll('.edition__button--js-increase');\r\nconst cancelButtons = document.querySelectorAll('.edition__button--js-cancel');\r\nconst saveButtons = document.querySelectorAll('.edition__button--js-save');\r\nconst archiveValues = document.querySelectorAll('.archive__value--js');\r\n//////////////////////////////////////////////////////////////// FUNCTION CALLS\r\n/////////////////////////////////////////////////////////////// EVENT LISTENERS\r\naddGlass.addEventListener('click', updateCounter);\r\nremoveGlass.addEventListener('click', updateCounter);\r\narchiveButton.addEventListener('click', toggleArchive);\r\n\r\nfor (let i = 0; i < editButtons.length; i++) {\r\n  const editButton = editButtons[i];\r\n  editButton.index = i;\r\n  editButton.addEventListener('click', handleItemEdit);\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);