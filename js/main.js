!function(e){var n={};function t(c){if(n[c])return n[c].exports;var l=n[c]={i:c,l:!1,exports:{}};return e[c].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=e,t.c=n,t.d=function(e,n,c){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:c})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var l in e)t.d(c,l,function(n){return e[n]}.bind(null,l));return c},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\n      // Registration was successful\n      console.log('ServiceWorker registration successful with scope: ', registration.scope);\n    }, function(err) {\n      // registration failed :(\n      console.log('ServiceWorker registration failed: ', err);\n    });\n  });\n}\n\n/********** VARIABLES **********/\n\nconst addGlass = document.querySelector('.app__button--js-add');\nconst removeGlass = document.querySelector('.app__button--js-remove');\nconst counter = document.querySelector('.glass__counter--js');\nconst archive = document.querySelector('.archive--js');\nconst archiveList = document.querySelector('.archive__list--js');\nconst archiveButton = document.querySelector('.app__button--js-archive');\n\nconst baseClassname = \"indicator__section indicator__section--js\";\nconst lowLevelClassname = `${baseClassname} indicator__section--low`;\nconst mediumLevelClassname = `${baseClassname} indicator__section--medium`;\nconst highLevelClassname = `${baseClassname} indicator__section--high`;\n\n/********** FUNCTIONS **********/\n\n// create hydrApp date key\nconst setDateKey = (obj) => {\n  const prefix = 'hydrApp-';\n  const date = obj.toISOString().slice(0,10);\n  return prefix.concat(date);\n}\n\n// create key value pair in localStorage\nconst setNewKeyValue = (key, value) => {\n  if ( !localStorage.getItem(key) ) {\n    localStorage.setItem(key, value);\n  };\n}\n\nconst getHydrappKeys = () => {\n  // create array of hydrApp localStorage keys\n  const regex = /hydrApp-/;\n  return Object\n  .keys(localStorage)\n  .filter(key => regex.test(key))\n  .sort((a,b) => a<b);\n}\n\nconst setCounter = () => {\n  let date = new Date();\n  let dateKey = setDateKey(date);\n\n  setNewKeyValue(dateKey, 0);\n\n  const hydrappKeys = getHydrappKeys();\n  const oldestKey = hydrappKeys[hydrappKeys.length-1];\n\n  // autocomplete missing keys\n  if ( hydrappKeys.length > 1 ) {\n    let limit = 0; // for tests to avoid loop error\n\n    while (setDateKey(date) !== oldestKey && limit < 50) {\n      date.setDate( date.getDate() - 1 );\n      const prevDateKey = setDateKey(date);\n      setNewKeyValue(prevDateKey, 0);\n      limit++;\n    }\n  }\n  counter.innerHTML = localStorage.getItem(dateKey);\n}\n\nconst setIndicators = (id, value) => {\n  const indicators = document.querySelectorAll(`.indicator--js-${id} .indicator__section--js`);\n\n  if (value >= 6) {\n    for (const indicator of indicators) {\n      indicator.className = highLevelClassname;\n    }\n  } else if (value >= 3) {\n    indicators[0].className = mediumLevelClassname;\n    indicators[1].className = mediumLevelClassname;\n    indicators[2].className = baseClassname;\n  } else {\n    indicators[0].className = lowLevelClassname;\n    indicators[1].className = baseClassname;\n    indicators[2].className = baseClassname;\n  }\n}\n\nconst setArchive = () => {\n  const hydrappKeys = getHydrappKeys();\n\n  for (const key of hydrappKeys) {\n    const value = localStorage.getItem(key);\n    const date = key\n      .replace('hydrApp-','')\n      .split('-')\n      .reverse()\n      .join(' ');\n    const dateHash = date.replace(/\\s/g,'');\n    \n    archiveList.innerHTML += `\n    <li class=\"archive__item\">\n      <p class=\"archive__date\">${date}</p>\n      <p class=\"archive__value archive__value--js\">${value}</p>\n      <div class=\"indicator indicator--js-${dateHash}\">\n        <div class=\"${baseClassname}\"></div>\n        <div class=\"${baseClassname}\"></div>\n        <div class=\"${baseClassname}\"></div>\n      </div>\n    </li>\n    `;\n\n    setIndicators(dateHash, value);\n  }\n}\n\nconst updateCounter = (e) => {\n  const key = setDateKey(new Date());\n  const value = parseInt(localStorage.getItem(key));\n  let newValue;\n\n  if (e.target === addGlass) {\n    value < 100 ? newValue = value + 1 : newValue = 100;\n  } else if (e.target === removeGlass) {\n    value > 0 ? newValue = value - 1 : newValue = 0;\n  }\n\n  localStorage.setItem(key, newValue);\n  counter.innerHTML = newValue;\n  \n  // updating archive newest entry value\n  const lastArchiveValue = document.querySelectorAll('.archive__value--js');\n  lastArchiveValue[0].innerHTML = newValue;\n\n  // updating archive newest entry indicator\n  const dateHash = new Date()\n    .toISOString()\n    .slice(0,10)\n    .split('-')\n    .reverse()\n    .join('');\n  setIndicators(dateHash, newValue);\n}\n\nconst toggleArchive = (e) => {\n  const listHeight = archiveList.clientHeight;\n\n  if (archive.classList.contains('archive--visible')) {\n    archive.classList.remove('archive--visible');\n    archive.style.height = 0;\n    e.target.textContent = \"Show archive\";\n  } else {\n    archive.classList.add('archive--visible');\n    archive.style.height = listHeight + \"px\";\n    e.target.textContent = \"Hide archive\";\n  }\n}\n\n\nsetCounter();\nsetArchive();\naddGlass.addEventListener('click', updateCounter);\nremoveGlass.addEventListener('click', updateCounter);\narchiveButton.addEventListener('click', toggleArchive);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);