!function(e){var t={};function n(l){if(t[l])return t[l].exports;var c=t[l]={i:l,l:!1,exports:{}};return e[l].call(c.exports,c,c.exports,n),c.l=!0,c.exports}n.m=e,n.c=t,n.d=function(e,t,l){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var c in e)n.d(l,c,function(t){return e[t]}.bind(null,c));return l},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\n      // Registration was successful\n      //console.log('ServiceWorker registration successful with scope: ', registration.scope);\n    }, function(err) {\n      // registration failed :(\n      console.log('ServiceWorker registration failed: ', err);\n    });\n  });\n}\n\n/********** VARIABLES **********/\n\nconst pageOverlay = document.querySelector('.page-overlay--js');\nconst addGlass = document.querySelector('.app__button--js-add');\nconst removeGlass = document.querySelector('.app__button--js-remove');\nconst counter = document.querySelector('.glass__counter--js');\nconst archive = document.querySelector('.archive--js');\nconst archiveList = document.querySelector('.archive__list--js');\nconst archiveButton = document.querySelector('.app__button--js-archive');\n\nconst counterMaxValue = 100;\n\nconst baseClassname = \"indicator__section indicator__section--js\";\nconst lowLevelClassname = `${baseClassname} indicator__section--low`;\nconst mediumLevelClassname = `${baseClassname} indicator__section--medium`;\nconst highLevelClassname = `${baseClassname} indicator__section--high`;\n\n/********** FUNCTIONS **********/\n\n// create hydrApp date key\nconst setDateKey = (obj) => {\n  const prefix = 'hydrApp-';\n  const date = obj.toISOString().slice(0,10);\n  return prefix.concat(date);\n}\n\n// create key value pair in localStorage\nconst setNewKeyValue = (key, value) => {\n  if ( !localStorage.getItem(key) ) {\n    localStorage.setItem(key, value);\n  };\n}\n\nconst getHydrappKeys = () => {\n  // create array of hydrApp localStorage keys\n  const regex = /hydrApp-/;\n  return Object\n  .keys(localStorage)\n  .filter(key => regex.test(key))\n  .sort()\n  .reverse();\n}\n\nconst getDateID = (date) => {\n  return date\n    .replace('hydrApp-','')\n    .split('-')\n    .reverse()\n    .join('');\n}\n\nconst getOffsetedDate = () => {\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\n  return (new Date(Date.now() - timeZoneOffset));\n}\n\n\nconst setCounter = () => {\n  const offsetedDate = getOffsetedDate();\n  let dateKey = setDateKey(offsetedDate);\n  console.log(`newest key: ${dateKey}`);\n\n  setNewKeyValue(dateKey, 0);\n\n  const hydrappKeys = getHydrappKeys();\n  const oldestKey = hydrappKeys[hydrappKeys.length-1];\n  console.log(`oldest key: ${oldestKey}`);\n\n  // autocomplete missing keys in localstorage\n  if ( hydrappKeys.length > 1 ) {\n    let limit = 0; // for tests to avoid loop error\n\n    while (setDateKey(offsetedDate) !== oldestKey && limit < 50) {\n      offsetedDate.setDate( offsetedDate.getDate() - 1 );\n      const prevDateKey = setDateKey(offsetedDate);\n      setNewKeyValue(prevDateKey, 0);\n      limit++;\n    }\n  }\n  counter.innerHTML = localStorage.getItem(dateKey);\n}\n\nconst setArchive = () => {\n  const hydrappKeys = getHydrappKeys();\n\n  if (hydrappKeys.length === 1) {\n    archiveList.innerHTML += `\n      <li class=\"archive__item archive__item--empty\">No history yet...</li>\n      `;\n  } else {\n    for (let i = 1; i < hydrappKeys.length; i++) {\n      const key = hydrappKeys[i];\n      const value = localStorage.getItem(key);\n      const date = key\n        .replace('hydrApp-','')\n        .split('-')\n        .reverse()\n        .join(' ');\n      const dateID = date.replace(/\\s/g,'');\n      \n      archiveList.innerHTML += `\n      <li class=\"archive__item archive__item--js ${key}\">\n        <p class=\"archive__date\">${date}</p>\n        <p class=\"archive__value archive__value--js\">\n          ${value}\n        </p>\n        <div class=\"edition\">\n          <button class=\"button edition__edit edition__edit--js\">\n            <i class=\"edition__icon far fa-edit\"></i>\n          </button>\n          <div class=\"edition__group edition__group--js\">\n            <button class=\"button edition__decrease edition__decrease--js\">\n              <i class=\"edition__icon fas fa-caret-left\"></i>\n            </button>\n            <button class=\"button edition__increase edition__increase--js\">\n              <i class=\"edition__icon fas fa-caret-right\"></i>\n            </button>\n            <button class=\"button edition__cancel edition__cancel--js\">\n              <i class=\"edition__icon fas fa-undo\"></i>\n            </button>\n            <button class=\"button edition__save edition__save--js\">\n              <i class=\"edition__icon far fa-save\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"indicator indicator--js-${dateID}\">\n          <div class=\"${baseClassname}\"></div>\n          <div class=\"${baseClassname}\"></div>\n          <div class=\"${baseClassname}\"></div>\n        </div>\n      </li>\n      `;\n  \n      setIndicators(dateID, value);\n    }\n  }\n}\n\nconst setIndicators = (id, value) => {\n  const indicators = document.querySelectorAll(`.indicator--js-${id} .indicator__section--js`);\n\n  if (value >= 6) {\n    for (const indicator of indicators) {\n      indicator.className = highLevelClassname;\n    }\n  } else if (value >= 3) {\n    indicators[0].className = mediumLevelClassname;\n    indicators[1].className = mediumLevelClassname;\n    indicators[2].className = baseClassname;\n  } else {\n    indicators[0].className = lowLevelClassname;\n    indicators[1].className = baseClassname;\n    indicators[2].className = baseClassname;\n  }\n}\n\nconst updateCounter = (e) => {\n  const offsetedDate = getOffsetedDate();\n  const key = setDateKey(offsetedDate);\n  const value = parseInt(localStorage.getItem(key));\n  let newValue;\n\n  if (e.target === addGlass) {\n    value < counterMaxValue ? newValue = value + 1 : newValue = counterMaxValue;\n  } else if (e.target === removeGlass) {\n    value > 0 ? newValue = value - 1 : newValue = 0;\n  }\n\n  localStorage.setItem(key, newValue);\n  counter.innerHTML = newValue;\n  \n  // updating archive newest entry indicator\n  const dateID = offsetedDate\n    .toISOString()\n    .slice(0,10)\n    .split('-')\n    .reverse()\n    .join('');\n  setIndicators(dateID, newValue);\n}\n\nconst toggleArchive = (e) => {\n  const listHeight = archiveList.clientHeight;\n\n  if (archive.classList.contains('archive--visible')) {\n    archive.classList.remove('archive--visible');\n    archive.style.height = 0;\n    e.target.textContent = \"Show archive\";\n  } else {\n    archive.classList.add('archive--visible');\n    archive.style.height = listHeight + \"px\";\n    e.target.textContent = \"Hide archive\";\n  }\n}\n\nconst handleItemEdit = (e) => {\n  const itemIndex = e.target.index;\n  const archiveItem = archiveItems[itemIndex];\n  const editButton = editButtons[itemIndex];\n  const editGroup = editGroups[itemIndex];\n  const decreaseButton = decreaseButtons[itemIndex];\n  const increaseButton = increaseButtons[itemIndex];\n  const cancelButton = cancelButtons[itemIndex];\n  const saveButton = saveButtons[itemIndex];\n  const archiveValue = archiveValues[itemIndex];\n  const lastValue = archiveValue.textContent;\n\n  const itemClassName = e.target.parentElement.parentElement.className;\n  const hydrAppKey = itemClassName\n    .split(' ')\n    .filter(key => /hydrApp/.test(key))\n    .toString();\n  const dateID = getDateID(hydrAppKey);\n\n  const toggleItemDisplay = () => {\n    archiveItem.classList.toggle('archive__item--on-top');\n    editButton.classList.toggle('edition__edit--hidden');\n    editGroup.classList.toggle('edition__group--visible');\n    pageOverlay.classList.toggle('page-overlay--visible');\n  }\n    \n  const exitEditMode = () => {\n    toggleItemDisplay();\n    const lastValue = localStorage.getItem(hydrAppKey);\n    archiveValue.textContent = lastValue;\n    setIndicators(dateID, lastValue);\n    // removing all event listeners\n    cancelButton.removeEventListener('click', exitEditMode);\n    pageOverlay.removeEventListener('click', exitEditMode);\n    decreaseButton.removeEventListener('click', updateValue);\n    increaseButton.removeEventListener('click', updateValue);\n    saveButton.removeEventListener('click', saveValue)\n  }\n\n  const updateValue = (e) => {   // ZOPTYMALIZOWAC Z UPDATE COUNTER\n    let value = archiveValue.textContent;\n    if (e.target === decreaseButton) {\n      value > 0 ? value-- : false;\n    } else {\n      value < counterMaxValue ? value++ : false;\n    }\n    archiveValue.textContent = value;\n    setIndicators(dateID, value);\n  }\n\n  const saveValue = () => {\n    localStorage.setItem(hydrAppKey, archiveValue.textContent);\n    exitEditMode();\n  }\n\n  toggleItemDisplay();\n  cancelButton.addEventListener('click', exitEditMode);\n  pageOverlay.addEventListener('click', exitEditMode);\n  decreaseButton.addEventListener('click', updateValue);\n  increaseButton.addEventListener('click', updateValue);\n  saveButton.addEventListener('click', saveValue);\n}\n\nsetCounter();\nsetArchive();\n\nconst archiveItems = document.querySelectorAll('.archive__item--js');\nconst editButtons = document.querySelectorAll('.edition__edit--js');\nconst editGroups = document.querySelectorAll('.edition__group--js');\nconst decreaseButtons = document.querySelectorAll('.edition__decrease--js');\nconst increaseButtons = document.querySelectorAll('.edition__increase--js');\nconst cancelButtons = document.querySelectorAll('.edition__cancel--js');\nconst saveButtons = document.querySelectorAll('.edition__save--js');\nconst archiveValues = document.querySelectorAll('.archive__value--js');\n\naddGlass.addEventListener('click', updateCounter);\nremoveGlass.addEventListener('click', updateCounter);\narchiveButton.addEventListener('click', toggleArchive);\n\nfor (let i = 0; i < editButtons.length; i++) {\n  const editButton = editButtons[i];\n  editButton.index = i;\n  editButton.addEventListener('click', handleItemEdit);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);