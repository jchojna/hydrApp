!function(t){var c={};function e(l){if(c[l])return c[l].exports;var n=c[l]={i:l,l:!1,exports:{}};return t[l].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=t,e.c=c,e.d=function(t,c,l){e.o(t,c)||Object.defineProperty(t,c,{enumerable:!0,get:l})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,c){if(1&c&&(t=e(t)),8&c)return t;if(4&c&&"object"==typeof t&&t&&t.__esModule)return t;var l=Object.create(null);if(e.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:t}),2&c&&"string"!=typeof t)for(var n in t)e.d(l,n,function(c){return t[c]}.bind(null,n));return l},e.n=function(t){var c=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(c,"a",c),c},e.o=function(t,c){return Object.prototype.hasOwnProperty.call(t,c)},e.p="",e(e.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n/////////////////////////////////////////////////////////////// SERVICE WORKER \r\n\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\r\n      // Registration was successful\r\n      //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n    }, function(err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n\r\n///////////////////////////////////////////////////////////// GLOBAL VARIABLES \r\n\r\nconst hydrappArray = [];\r\nconst lastEntryDate = new Date();\r\n\r\nlet indicators = '';\r\nfor (let i = 0; i < 8; i++) {\r\n  indicators += `\r\n  <svg class=\"indicator__svg indicator__svg--emo-${i+1} indicator__svg--js-${i}\">\r\n    <use href=\"assets/svg/icons.svg#emoticon-${i}\"></use>\r\n  </svg>`\r\n}\r\n\r\nclass Entry {\r\n  constructor(key, height) {                                                // ! IF HEIGHT NEEDED ?\r\n    this.key = key;\r\n    this.getValue = key;\r\n    this.getTitle = key;\r\n    this.getID = key;\r\n    this.itemHeight = height;\r\n\r\n    this.html = `\r\n      <li class=\"archive__item archive__item--js ${this.key}\">\r\n        <p class=\"archive__date\">${this.getTitle}</p>\r\n        <p class=\"archive__value archive__value--js\">\r\n          ${this.getValue}\r\n        </p>\r\n        <div class=\"edition edition--js\">\r\n          <button class=\"button edition__button edition__button--visible edition__button--edit edition__button--js-edit\">\r\n            <svg class=\"edition__svg edition__svg--edit\">\r\n              <use href=\"assets/svg/icons.svg#edit-mode\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--decrease edition__button--js-decrease\">\r\n            <svg class=\"edition__svg edition__svg--decrease\">\r\n              <use href=\"assets/svg/icons.svg#left-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--increase edition__button--js-increase\">\r\n            <svg class=\"edition__svg edition__svg--increase\">\r\n              <use href=\"assets/svg/icons.svg#right-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--cancel edition__button--js-cancel\">\r\n            <svg class=\"edition__svg edition__svg--cancel\">\r\n              <use href=\"assets/svg/icons.svg#back-arrow\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"button edition__button edition__button--save edition__button--js-save\">\r\n            <svg class=\"edition__svg edition__svg--save\">\r\n              <use href=\"assets/svg/icons.svg#save-icon\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"indicator indicator--js-${this.getID}\">\r\n          ${indicators}\r\n        </div>\r\n      </li>\r\n    `\r\n  }\r\n\r\n  get getValue() {\r\n    return this.value;\r\n  }\r\n  set getValue(key) {\r\n    this.value = localStorage.getItem(key);\r\n  }\r\n  get getTitle() {\r\n    return this.title;\r\n  }\r\n  set getTitle(date) {\r\n    this.title = date.replace('hydrApp-','').split('-').reverse().join(' ');\r\n  }\r\n  get getID() {\r\n    return this.ID;\r\n  }\r\n  set getID(date) {\r\n    this.ID = date.replace('hydrApp-','').split('-').reverse().join('');\r\n  }\r\n  get totalHeight() {\r\n    return this._totalHeight;\r\n  }\r\n  set totalHeight(amount) {\r\n    this._totalHeight = amount * this.itemHeight;\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////// FUNCTIONS \r\n\r\n// F1 //////////////////////////////////////////////// CREATE HYDRAPP DATE KEY \r\n\r\nconst setDateKey = (obj) => {\r\n  const prefix = 'hydrApp-';\r\n  const date = obj.toISOString().slice(0,10);\r\n  return prefix.concat(date);\r\n}\r\n// F1 ///////////////////////////////// CREATE KEY VALUE PAIR IN LOCAL STORAGE \r\n\r\nconst setNewKeyValue = (key, value) => {\r\n  if ( !localStorage.getItem(key) ) {\r\n    localStorage.setItem(key, value);\r\n  };\r\n}\r\n// F1 ///////////////////////////// CREATE ARRAY OF HYDRAPP LOCAL STORAGE KEYS \r\n\r\nconst getHydrappKeys = () => {\r\n  const regex = /hydrApp-/;\r\n  return Object\r\n  .keys(localStorage)\r\n  .filter(key => regex.test(key))\r\n  .sort()\r\n  .reverse();\r\n}\r\n// F1 ////////////////////////////////////////////////////// GET OFFSETED DATE \r\n\r\nconst getOffsetedDate = () => {\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  return (new Date(Date.now() - timeZoneOffset));\r\n}\r\n// F1 /////////////////////////////////////////////////// GET OFFSETED DATE OF \r\n\r\nconst getOffsetedDateOf = (date) => {\r\n  const timeZoneOffset = (new Date()).getTimezoneOffset() * 60000;\r\n  return new Date(date - timeZoneOffset);\r\n}\r\n// F1 //////////////////////////////////////////////////////////// SET COUNTER \r\n\r\nconst setLocalStorage = () => {\r\n  const offsetedDate = getOffsetedDate();                           // ! OFFSETED OR NORMAL ???\r\n  let dateKey = setDateKey(offsetedDate);\r\n  const hydrappKeys = getHydrappKeys();\r\n  const oldestKey = hydrappKeys[hydrappKeys.length - 1];\r\n\r\n  setNewKeyValue(dateKey, 0);\r\n  \r\n  if ( hydrappKeys.length > 2 ) { // autocomplete missing keys in localstorage\r\n    let limit = 0; // for tests to avoid loop error                            // ! TO REFACTOR\r\n\r\n    while (setDateKey(offsetedDate) !== oldestKey && limit < 99) {\r\n      offsetedDate.setDate(offsetedDate.getDate() - 1);\r\n      const prevDateKey = setDateKey(offsetedDate);\r\n      setNewKeyValue(prevDateKey, 0);\r\n      limit++;\r\n    }\r\n  }\r\n  counter.innerHTML = localStorage.getItem(dateKey);\r\n}\r\n// F1 ///////////////////////////////////////////////////////// UPDATE COUNTER \r\n\r\nconst updateCounter = (e) => {\r\n  const self = e.target;\r\n  const offsetedDate = getOffsetedDate();\r\n  const key = setDateKey(offsetedDate);\r\n  const value = parseInt(localStorage.getItem(key));\r\n  let newValue;\r\n\r\n  if (self === addGlass || self === removeGlass) {\r\n    switch (self) {\r\n      case addGlass:\r\n        value < counterMaxValue ? newValue = value + 1 : newValue = counterMaxValue;\r\n        break;\r\n      case removeGlass:\r\n        value > 0 ? newValue = value - 1 : newValue = 0;\r\n        break;\r\n    }\r\n    localStorage.setItem(key, newValue);\r\n    counter.innerHTML = newValue;\r\n  }\r\n}\r\n// F1 //////////////////////////////////////////////////////////// SET ARCHIVE \r\n\r\nconst setArchive = () => {\r\n  const hydrappKeys = getHydrappKeys();\r\n  const emptyArchive = `\r\n  <li class=\"archive__item archive__item--empty\">No history yet...</li>\r\n  `;\r\n  archiveList.innerHTML += emptyArchive;\r\n\r\n  if (hydrappKeys.length) {\r\n\r\n    for (let i = 0; i < hydrappKeys.length; i++) {\r\n\r\n      const newEntry = new Entry(hydrappKeys[i], 0);\r\n      newEntry.totalHeight = i;\r\n      archiveList.innerHTML += newEntry.html;\r\n      lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n      setIndicators(newEntry.ID, newEntry.value);\r\n      hydrappArray.push(newEntry);\r\n    }\r\n  }\r\n  console.log('hydrappArray', hydrappArray);\r\n}\r\n// F1 ///////////////////////////////////////////////////////// SET INDICATORS \r\n\r\nconst setIndicators = (id, value) => {\r\n\r\n  value > 7 ? value = 7 : false;\r\n\r\n  const indicators = document.querySelector(`.indicator--js-${id}`).children;\r\n  const indicator = document.querySelector(`.indicator--js-${id} .indicator__svg--js-${value}`);\r\n  \r\n  for (const indicator of indicators) {\r\n    indicator.classList.contains('indicator__svg--visible')\r\n    ? indicator.classList.remove('indicator__svg--visible')\r\n    : false;\r\n  }\r\n  indicator.classList.add('indicator__svg--visible');\r\n}\r\n// F1 /////////////////////////////////////////////////////////// SHOW ARCHIVE \r\nconst showArchive = () => {\r\n\r\n  // F2 ///////////////////////////////////////////////////// HANDLE ITEM EDIT \r\n\r\n  const handleItemEdit = (e) => {\r\n    const itemIndex = e.target.index;\r\n    const archiveItem = document.querySelectorAll('.archive__item--js')[itemIndex];\r\n    const editSection = document.querySelectorAll('.edition--js')[itemIndex];\r\n    const decreaseButton = document.querySelectorAll('.edition__button--js-decrease')[itemIndex];\r\n    const increaseButton = document.querySelectorAll('.edition__button--js-increase')[itemIndex];\r\n    const cancelButton = document.querySelectorAll('.edition__button--js-cancel')[itemIndex];\r\n    const saveButton = document.querySelectorAll('.edition__button--js-save')[itemIndex];\r\n    const archiveValue = document.querySelectorAll('.archive__value--js')[itemIndex];\r\n\r\n    // F3 //////////////////////////// TOGGLE ITEM DISPLAY << HANDLE ITEM EDIT \r\n\r\n    const toggleItemDisplay = () => {\r\n      archive.classList.toggle('archive--on-top');\r\n      archiveItem.classList.toggle('archive__item--on-top');\r\n      pageOverlay.classList.toggle('archive__overlay--visible');\r\n      removeItemButton.classList.remove('remove-button--visible');\r\n      \r\n      for (const editButton of editSection.children) {\r\n        editButton.classList.toggle('edition__button--visible');\r\n      }\r\n      editSection.classList.toggle('edition--visible');\r\n    }\r\n    // F3 ///////////////////////////////// EXIT EDIT MODE << HANDLE ITEM EDIT \r\n\r\n    const exitEditMode = () => {\r\n      toggleItemDisplay();\r\n      archiveValue.textContent = hydrappArray[itemIndex].value;\r\n      setIndicators(hydrappArray[itemIndex].ID, hydrappArray[itemIndex].value);\r\n      removeItemButton.classList.add('remove-button--visible');\r\n\r\n      archive.removeEventListener('click', handleEdition);\r\n      archive.removeEventListener('keydown', handleEdition);\r\n    }\r\n    // F3 ///////////////////////////////// HANDLE EDITION << HANDLE ITEM EDIT \r\n\r\n    const handleEdition = (e) => {\r\n      const self = e.keyCode || e.target;\r\n      let value = parseInt(archiveValue.textContent);\r\n\r\n      switch (self) {\r\n\r\n        case 37:\r\n        case decreaseButton:\r\n          e.preventDefault();\r\n          value > 0 ? value-- : false;\r\n          archiveValue.textContent = value;\r\n          setIndicators(hydrappArray[itemIndex].ID, value);\r\n        break;\r\n        \r\n        case 39:\r\n        case increaseButton:\r\n          e.preventDefault();\r\n          value < counterMaxValue ? value++ : false;\r\n          archiveValue.textContent = value;\r\n          setIndicators(hydrappArray[itemIndex].ID, value);\r\n        break;\r\n\r\n        case 27:\r\n        case pageOverlay:\r\n        case cancelButton:\r\n          e.preventDefault();\r\n          exitEditMode();\r\n        break;\r\n\r\n        case 13:\r\n        case saveButton:\r\n          e.preventDefault();\r\n          hydrappArray[itemIndex].value = value;\r\n          localStorage.setItem(hydrappArray[itemIndex].key, value);\r\n          exitEditMode();\r\n        break;\r\n      }\r\n    }\r\n    /////////////////////////////////////// FUNCTION CALLS << HANDLE ITEM EDIT \r\n\r\n    toggleItemDisplay();\r\n    archive.addEventListener('click', handleEdition);\r\n    archive.addEventListener('keydown', handleEdition);\r\n\r\n  } // F2 //////////////////////////////////////////// END OF HANDLE ITEM EDIT \r\n  \r\n  // F2 //////////////////////////////////////////// CREATE REMOVE ITEM BUTTON \r\n  \r\n  const createRemoveItemButton = () => {\r\n  \r\n    const removeItemButton = document.createElement('button');\r\n    removeItemButton.className = 'button remove-button remove-button--visible remove-button--js';\r\n    removeItemButton.innerHTML = `\r\n    <svg class=\"remove-button__svg\">\r\n      <use href=\"assets/svg/icons.svg#remove-icon\"></use>\r\n    </svg>\r\n    `\r\n\r\n    removeItemButton.addEventListener('click', removeLastItem);\r\n\r\n    return removeItemButton;\r\n  }\r\n  // F2 ///////////////////////////////////////////// ADJUST LAST ITEM OF LIST \r\n  \r\n  const handleArchiveLastItem = () => {\r\n  \r\n    const lastItem = archiveList.lastElementChild;\r\n    const lastItemValueNode = lastItem.querySelector('.archive__value--js');\r\n\r\n    if (!removeItemButton) {\r\n      removeItemButton = createRemoveItemButton();\r\n    }    \r\n\r\n    const previousItem = archiveList.lastElementChild.previousElementSibling;\r\n    const previousRemoveButton = previousItem.querySelector('.remove-button--js');\r\n    const lastRemoveButton = lastItem.querySelector('.remove-button--js');\r\n\r\n    if (previousRemoveButton) {\r\n      previousItem.classList.remove('archive__item--removable');\r\n      previousItem.removeChild(previousRemoveButton);\r\n    }\r\n\r\n    if (!lastRemoveButton) {\r\n\r\n      lastItem.classList.add('archive__item--removable');\r\n      lastItem.insertBefore(removeItemButton, lastItemValueNode);\r\n    }\r\n  }\r\n  \r\n  // F2 //////////////////////////////////////////// LOAD MORE << SHOW ARCHIVE \r\n\r\n  const loadMoreItems = () => {\r\n    const archiveItems = document.querySelectorAll('.archive__item--js');\r\n    const archiveListHeight = archiveList.clientHeight;\r\n    let viewportHeight = 0;\r\n\r\n    if (hydrappArray.length === 1) {\r\n      archiveList.firstElementChild.classList.add('archive__item--visible');\r\n\r\n    } else if (hydrappArray.length > 1) {\r\n\r\n      for (let i = 1; i < archiveItems.length; i++) {\r\n\r\n        const item = archiveItems[i];\r\n\r\n        if (!item.classList.contains('archive__item--visible')) {\r\n\r\n          item.classList.add('archive__item--visible');\r\n          viewportHeight += item.offsetHeight;\r\n\r\n          hydrappArray[i].itemHeight = item.offsetHeight;\r\n          hydrappArray[i].totalHeight = i;\r\n          archiveList.scrollTop = hydrappArray[i].totalHeight;\r\n          \r\n          if (viewportHeight > archiveListHeight - item.offsetHeight) {\r\n            \r\n            archiveList.style.height = viewportHeight + 'px';\r\n            loadMoreButton.classList.add('archive__button--visible');\r\n            break;\r\n          }\r\n        } else {\r\n          loadMoreButton.classList.remove('archive__button--visible');\r\n        }\r\n      }\r\n      handleArchiveLastItem();\r\n    }\r\n  }\r\n\r\n  // F2 ///////////////////////////////////////// ADD NEW ITEM << SHOW ARCHIVE \r\n\r\n  const addNewItem = () => {\r\n\r\n    const newEntryKey = setDateKey(getOffsetedDateOf(lastEntryDate));\r\n    setNewKeyValue(newEntryKey, 0);\r\n    const archiveListHeight = archiveList.clientHeight;\r\n    let viewportHeight = 0;\r\n\r\n    const newEntry = new Entry(newEntryKey);\r\n    hydrappArray.push(newEntry);\r\n    lastEntryDate.setDate(lastEntryDate.getDate() - 1);\r\n    const currentIndex = hydrappArray.length - 1;\r\n    archiveList.insertAdjacentHTML('beforeend', hydrappArray[currentIndex].html);\r\n    setIndicators(hydrappArray[currentIndex].ID, hydrappArray[currentIndex].value);\r\n    \r\n    handleArchiveLastItem();\r\n    \r\n    for (let i = 2; i < archiveList.children.length; i++) {\r\n      const item = archiveList.children[i];\r\n      if (!item.classList.contains('archive__item--visible')) {\r\n        item.classList.add('archive__item--visible');\r\n      }\r\n      if (viewportHeight <= archiveListHeight - item.offsetHeight) {\r\n        viewportHeight += item.offsetHeight;\r\n      }\r\n    }\r\n    \r\n    if (loadMoreButton.classList.contains('archive__button--visible')) {\r\n      loadMoreButton.classList.remove('archive__button--visible');\r\n    }\r\n\r\n    if (currentIndex === 1) {\r\n      archiveList.firstElementChild.classList.remove('archive__item--visible');\r\n    } \r\n\r\n    hydrappArray[currentIndex].itemHeight = archiveList.lastElementChild.offsetHeight;\r\n    hydrappArray[currentIndex].totalHeight = currentIndex;\r\n\r\n    if (hydrappArray[currentIndex].totalHeight > archiveList.clientHeight - hydrappArray[currentIndex].itemHeight) {\r\n      archiveList.style.height = viewportHeight;\r\n    }\r\n\r\n    archiveList.scrollTop = hydrappArray[currentIndex].totalHeight;\r\n\r\n    editButtons = document.querySelectorAll('.edition__button--js-edit');\r\n    const newEditButton = editButtons[currentIndex];\r\n    newEditButton.index = currentIndex;\r\n    newEditButton.addEventListener('click', handleItemEdit);    \r\n  }\r\n  // F2 ///////////////////////////////////// REMOVE LAST ITEM << SHOW ARCHIVE \r\n\r\n  const removeLastItem = () => {\r\n\r\n    const archiveListHeight = archiveList.clientHeight;\r\n\r\n    if (hydrappArray.length > 1) {\r\n      \r\n      const lastItemKey = hydrappArray[hydrappArray.length - 1].key;\r\n      hydrappArray.pop();\r\n      localStorage.removeItem(lastItemKey);\r\n      lastEntryDate.setDate(lastEntryDate.getDate() + 1);\r\n      archiveList.removeChild(archiveList.lastElementChild);\r\n      const itemsTotalHeight = hydrappArray[hydrappArray.length - 1].totalHeight;\r\n\r\n      if (itemsTotalHeight <= archiveListHeight && itemsTotalHeight > 0) {\r\n        loadMoreButton.classList.remove('archive__button--visible');\r\n      }\r\n\r\n      if (hydrappArray.length === 1) {\r\n        archiveList.firstElementChild.classList.add('archive__item--visible');\r\n      }\r\n\r\n      handleArchiveLastItem();\r\n    }\r\n  }\r\n  // F2 //////////////////////////////////////// CLOSE ARCHIVE << SHOW ARCHIVE \r\n\r\n  const closeArchive = () => {\r\n    archive.classList.remove('archive--visible');\r\n    loadMoreButton.classList.remove('archive__button--hidden');\r\n\r\n    const archiveItems = document.querySelectorAll('.archive__item--js');\r\n    for (const archiveItem of archiveItems) {\r\n      archiveItem.classList.remove('archive__item--visible');\r\n    }\r\n\r\n    addNewButton.removeEventListener('click', addNewItem);\r\n    loadMoreButton.removeEventListener('click', loadMoreItems);\r\n    archiveButton.removeEventListener('click', closeArchive);\r\n\r\n    for (const editButton of editButtons) {\r\n      editButton.removeEventListener('click', handleItemEdit);\r\n    }\r\n\r\n    archiveButton.addEventListener('click', showArchive);\r\n  }\r\n  ////////////////////////////////////////////////// VARIABLES << SHOW ARCHIVE \r\n\r\n  let editButtons = document.querySelectorAll('.edition__button--js-edit');\r\n  let removeItemButton = document.querySelector('.remove-button--js');\r\n\r\n  ///////////////////////////////////////////// FUNCTION CALLS << SHOW ARCHIVE \r\n\r\n  archive.classList.add('archive--visible');\r\n  loadMoreItems();\r\n\r\n  //////////////////////////////////////////// EVENT LISTENERS << SHOW ARCHIVE \r\n\r\n  archiveButton.removeEventListener('click', showArchive);\r\n  archiveButton.addEventListener('click', closeArchive);\r\n  loadMoreButton.addEventListener('click', loadMoreItems);\r\n  addNewButton.addEventListener('click', addNewItem);\r\n\r\n  for (let i = 0; i < editButtons.length; i++) {\r\n    const editButton = editButtons[i];\r\n    editButton.index = i;\r\n    editButton.addEventListener('click', handleItemEdit);\r\n  }\r\n}\r\n// F1 //////////////////////////////////////////////////// END OF SHOW ARCHIVE \r\n\r\n//////////////////////////////////////////////////////////////////// VARIABLES \r\n\r\nconst appContainer = document.querySelector('.app__container--js');\r\nconst addGlass = document.querySelector('.app__button--js-add');\r\nconst removeGlass = document.querySelector('.app__button--js-remove');\r\nconst counter = document.querySelector('.glass__counter--js');\r\nconst counterMaxValue = 99;\r\n\r\nconst archive = document.querySelector('.archive--js');\r\nconst pageOverlay = document.querySelector('.archive__overlay--js');\r\nconst archiveList = document.querySelector('.archive__list--js');\r\nconst archiveButton = document.querySelector('.navigation__button--js-archive');\r\nconst loadMoreButton = document.querySelector('.archive__button--js-load-more');\r\nconst addNewButton = document.querySelector('.archive__button--add-new');\r\n\r\nconst statsButton = document.querySelector('.navigation__button--js-stats');\r\n\r\n/////////////////////////////////////////////////////////////// FUNCTION CALLS \r\n\r\nsetLocalStorage();\r\nsetArchive();\r\n\r\n////////////////////////////////////////////////////////////// EVENT LISTENERS \r\n\r\nappContainer.addEventListener('click', updateCounter);\r\narchiveButton.addEventListener('click', showArchive);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);